[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: uwp65AlbumMatchGameLayout_high.mp4
Video File: uwp65AlbumMatchGameLayout_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 189
Active Line: 214
Video Position: 33316

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,微软雅黑,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,50,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.82,Default,,0,0,0,,专辑封面配对游戏 —— 布局、数据绑定和游戏初始化\N\N翻译：@geelaw（微博）　审核：<审核人>　压制：<压制人>
Dialogue: 0,0:00:05.28,0:00:07.37,Default,,0,0,0,,好，这节课我们来继续
Dialogue: 0,0:00:07.37,0:00:10.96,Default,,0,0,0,,我们将要为这个游戏的用户界面创建布局
Dialogue: 0,0:00:10.96,0:00:13.33,Default,,0,0,0,,设置数据绑定
Dialogue: 0,0:00:13.33,0:00:14.91,Default,,0,0,0,,我们已经收集了很多数据
Dialogue: 0,0:00:14.91,0:00:19.40,Default,,0,0,0,,现在该把它连接到 GridView 了
Dialogue: 0,0:00:19.40,0:00:25.15,Default,,0,0,0,,写出 DataTemplate、每个单独的项并让它们可以点击
Dialogue: 0,0:00:25.15,0:00:26.43,Default,,0,0,0,,我们稍后再来说这个事情
Dialogue: 0,0:00:26.43,0:00:30.03,Default,,0,0,0,,先来做一些基础的初始化
Dialogue: 0,0:00:30.03,0:00:33.23,Default,,0,0,0,,所以，这个视频结束时游戏还没法玩
Dialogue: 0,0:00:33.23,0:00:34.99,Default,,0,0,0,,但是将会有基本的样子，并且离可玩很近
Dialogue: 0,0:00:34.99,0:00:37.17,Default,,0,0,0,,下一个视频里，我会开始做游戏的计分逻辑
Dialogue: 0,0:00:37.17,0:00:40.82,Default,,0,0,0,,以及倒计时逻辑
Dialogue: 0,0:00:40.82,0:00:44.79,Default,,0,0,0,,好，我们现在开始吧
Dialogue: 0,0:00:44.79,0:00:46.92,Default,,0,0,0,,上个视频里我们还有一个没解决的事儿
Dialogue: 0,0:00:46.92,0:00:51.71,Default,,0,0,0,,代码有些问题，它没法编译
Dialogue: 0,0:00:51.71,0:00:54.47,Default,,0,0,0,,还是没法运行来着？我不太记得了
Dialogue: 0,0:00:54.47,0:00:58.05,Default,,0,0,0,,但是那个问题比较简单，我只需要做这个
Dialogue: 0,0:00:58.05,0:01:02.92,Default,,0,0,0,,我没有 new（构造）Songs，所以它挂了
Dialogue: 0,0:01:02.92,0:01:07.57,Default,,0,0,0,,如果我把这句话加上去，创建一个 ObservableCollection 的实例
Dialogue: 0,0:01:07.57,0:01:09.23,Default,,0,0,0,,我们就能运行程序了
Dialogue: 0,0:01:10.70,0:01:12.61,Default,,0,0,0,,虽然现在在后台还看不出啥
Dialogue: 0,0:01:12.61,0:01:17.59,Default,,0,0,0,,不过现在它应该可以运行了，并且能够取得所有的文件
Dialogue: 0,0:01:25.48,0:01:28.05,Default,,0,0,0,,以及所有的元数据
Dialogue: 0,0:01:28.05,0:01:32.40,Default,,0,0,0,,然后创建出 Song 类的实例
Dialogue: 0,0:01:32.40,0:01:36.85,Default,,0,0,0,,并为我们的应用的其他部分准备好
Dialogue: 0,0:01:36.85,0:01:40.06,Default,,0,0,0,,现在，看起来好像什么也没发生
Dialogue: 0,0:01:40.06,0:01:42.49,Default,,0,0,0,,但是后台已经发生了好多事儿
Dialogue: 0,0:01:42.85,0:01:46.02,Default,,0,0,0,,现在该把这个告一段落了
Dialogue: 0,0:01:46.02,0:01:51.39,Default,,0,0,0,,并且开始（准备界面），咱们先打开 MainPage.xaml
Dialogue: 0,0:01:51.39,0:01:55.84,Default,,0,0,0,,开始布局这个应用需要的玩意儿
Dialogue: 0,0:01:58.15,0:02:00.91,Default,,0,0,0,,第一步我先增加两行
Dialogue: 0,0:02:00.91,0:02:04.67,Default,,0,0,0,,这是第一个 RowDefinition
Dialogue: 0,0:02:04.67,0:02:11.13,Default,,0,0,0,,这个会是，我觉得吧，就是应该是用来，放置倒计时进度条用的
Dialogue: 0,0:02:13.40,0:02:16.90,Default,,0,0,0,,高度设置成 100，然后是另一个 RowDefinition
Dialogue: 0,0:02:16.90,0:02:21.90,Default,,0,0,0,,它是剩下的空间
Dialogue: 0,0:02:23.57,0:02:26.50,Default,,0,0,0,,然后我们添加一个 StackPanel
Dialogue: 0,0:02:26.50,0:02:29.05,Default,,0,0,0,,这个就是第一行里面的控件
Dialogue: 0,0:02:29.05,0:02:30.76,Default,,0,0,0,,这里我们要添加一个 ProgressBar
Dialogue: 0,0:02:33.77,0:02:34.85,Default,,0,0,0,,我继续给它加个名字（Name 属性）
Dialogue: 0,0:02:34.85,0:02:39.89,Default,,0,0,0,,因为我们要在代码里引用它，所以，Name =
Dialogue: 0,0:02:47.83,0:02:50.53,Default,,0,0,0,,我把最大值（Maximum 属性）设为 100
Dialogue: 0,0:02:51.01,0:02:54.87,Default,,0,0,0,,以及最小值（Minimum 属性）是 0
Dialogue: 0,0:02:56.08,0:03:00.37,Default,,0,0,0,,然后我把当前值（Value 属性）设为 100
Dialogue: 0,0:03:01.87,0:03:03.27,Default,,0,0,0,,我们将用这个 ProgressBar {\b1}倒{\b}计时
Dialogue: 0,0:03:03.27,0:03:06.20,Default,,0,0,0,,所以它总是从 100 开始下降
Dialogue: 0,0:03:07.55,0:03:11.38,Default,,0,0,0,,然后，我把高度（Height 属性）设置为 20
Dialogue: 0,0:03:11.38,0:03:13.58,Default,,0,0,0,,再把前景画刷（Foreground 属性）设为蓝色画刷（Blue）
Dialogue: 0,0:03:16.07,0:03:20.23,Default,,0,0,0,,这里提一下，我们可以从图形设计师那里寻求一些帮助，来让它好看一些
Dialogue: 0,0:03:20.53,0:03:28.17,Default,,0,0,0,,在这个顶端区域（第一行）我们还要加一个指示性的文本（一个 TextBlock 控件）
Dialogue: 0,0:03:28.17,0:03:29.91,Default,,0,0,0,,所以，设置一个 Name
Dialogue: 0,0:03:29.91,0:03:31.83,Default,,0,0,0,,就叫 InstructionTextBlock
Dialogue: 0,0:03:32.07,0:03:33.99,Default,,0,0,0,,这里将会显示给用户下一步应该做什么
Dialogue: 0,0:03:33.99,0:03:40.83,Default,,0,0,0,,“喂，准备好，因为下一轮将在 10/9/8 秒之内开始。”什么什么的
Dialogue: 0,0:03:42.91,0:03:46.10,Default,,0,0,0,,这里把前景画刷（Foreground 属性）设为蓝色画刷（Blue）
Dialogue: 0,0:03:46.10,0:03:49.83,Default,,0,0,0,,还有水平分布（HorizontalAlignment 属性）设成居中（Center）
Dialogue: 0,0:03:52.20,0:03:55.32,Default,,0,0,0,,然后我在这里放一个媒体（MediaElement 控件）
Dialogue: 0,0:03:55.33,0:04:00.15,Default,,0,0,0,,它不会显示出来，但是我就把它放这儿吧
Dialogue: 0,0:04:03.78,0:04:05.86,Default,,0,0,0,,我们让它自动播放（把 AutoPlay 设为 true）
Dialogue: 0,0:04:08.47,0:04:11.00,Default,,0,0,0,,我还是把 ProgressBar 的 Name 改成用大写 M 的吧
Dialogue: 0,0:04:11.51,0:04:17.34,Default,,0,0,0,,我经常反复纠结命名 XAML 元素因为我不太确定……
Dialogue: 0,0:04:17.34,0:04:20.03,Default,,0,0,0,,它们的访问修饰符是不是 public，我觉得应该是 protected 吧？
Dialogue: 0,0:04:20.03,0:04:25.05,Default,,0,0,0,,所以这里用什么命名规范完全是基于自己判断的
Dialogue: 0,0:04:25.42,0:04:29.32,Default,,0,0,0,,这里应该把 Grid.Row 设为 0
Dialogue: 0,0:04:31.97,0:04:34.83,Default,,0,0,0,,咱们来放上第二个面板，也是 StackPanel
Dialogue: 0,0:04:36.60,0:04:39.64,Default,,0,0,0,,这个的 Grid.Row 是 1
Dialogue: 0,0:04:41.09,0:04:45.12,Default,,0,0,0,,我们把方向（Orientation 属性）设为竖直（Vertical）
Dialogue: 0,0:04:49.38,0:04:53.14,Default,,0,0,0,,虽然我还不知道我应该这么做，但是先这么搞着吧
Dialogue: 0,0:04:54.39,0:04:57.80,Default,,0,0,0,,然后，这里主要是要有一个 GridView 控件
Dialogue: 0,0:04:59.85,0:05:08.45,Default,,0,0,0,,我们继续给这个 GridView 命名，叫 SongGridView
Dialogue: 0,0:05:08.47,0:05:13.47,Default,,0,0,0,,让它的项可以点击（把 ItemClickEnabled 设为 true）
Dialogue: 0,0:05:15.22,0:05:18.00,Default,,0,0,0,,加上 ItemClick 事件的处理程序
Dialogue: 0,0:05:19.12,0:05:26.07,Default,,0,0,0,,还要，设置 ItemsSource
Dialogue: 0,0:05:26.07,0:05:28.52,Default,,0,0,0,,ItemsSource =
Dialogue: 0,0:05:30.81,0:05:34.33,Default,,0,0,0,,我们前一个视频里建立的，Songs 集合
Dialogue: 0,0:05:35.98,0:05:43.68,Default,,0,0,0,,它（Songs 集合）应该对 MainPage.xaml 可见
Dialogue: 0,0:05:44.43,0:05:46.61,Default,,0,0,0,,我把它设为 private 了吗？我把它设为 private 了。
Dialogue: 0,0:05:46.61,0:05:48.23,Default,,0,0,0,,不过它对这里应该还是可见的
Dialogue: 0,0:05:49.12,0:05:50.71,Default,,0,0,0,,因为它们在同一个类里面，是吧？
Dialogue: 0,0:05:51.81,0:05:54.07,Default,,0,0,0,,现在添加一个 ItemTemplate
Dialogue: 0,0:05:54.07,0:05:57.62,Default,,0,0,0,,GridView.ItemTemplate
Dialogue: 0,0:05:59.87,0:06:04.05,Default,,0,0,0,,在这个 ItemTemplate 里面，我们添加一个 DataTemplate
Dialogue: 0,0:06:05.60,0:06:07.63,Default,,0,0,0,,咱们就搞一个简单的
Dialogue: 0,0:06:07.63,0:06:09.58,Default,,0,0,0,,一个 Grid，里面有一个 Image 控件
Dialogue: 0,0:06:13.41,0:06:16.70,Default,,0,0,0,,我或许应该管它叫 AlbumArt
Dialogue: 0,0:06:25.86,0:06:30.22,Default,,0,0,0,,设置高度（Height 属性）为 75，还有宽度（Width 属性）也是 75
Dialogue: 0,0:06:30.22,0:06:36.79,Default,,0,0,0,,因为我恰好知道元数据里的图片大小
Dialogue: 0,0:06:36.79,0:06:39.97,Default,,0,0,0,,这些 MP3 文件都是这样，因为它们是我自己造的
Dialogue: 0,0:06:39.97,0:06:42.87,Default,,0,0,0,,或者是一个开发者帮我造的
Dialogue: 0,0:06:44.25,0:06:53.62,Default,,0,0,0,,我清楚我应该把它绑定到 Song 的 AlbumCover 属性
Dialogue: 0,0:06:55.75,0:06:59.64,Default,,0,0,0,,我来再确认一次，它（那个属性）确实是那个名字
Dialogue: 0,0:07:00.79,0:07:05.22,Default,,0,0,0,,没错，AlbumCover 是我们应该绑定的属性的名字
Dialogue: 0,0:07:05.53,0:07:09.86,Default,,0,0,0,,所以我们继续，捯饬捯饬
Dialogue: 0,0:07:16.85,0:07:20.90,Default,,0,0,0,,这对于 GridView 暂时够了
Dialogue: 0,0:07:20.91,0:07:24.11,Default,,0,0,0,,我们会回到这里，显然这里还有很多东西要做
Dialogue: 0,0:07:25.26,0:07:28.34,Default,,0,0,0,,接下来我需要一些 TextBlock 控件来显示东西
Dialogue: 0,0:07:28.34,0:07:35.63,Default,,0,0,0,,其中一个叫做 ResultTextBlock，这会显示用户猜没猜对
Dialogue: 0,0:07:35.64,0:07:38.30,Default,,0,0,0,,然后是另一个 TextBlock
Dialogue: 0,0:07:38.30,0:07:48.51,Default,,0,0,0,,叫做 TitleTextBlock，这会显示正确歌曲的标题，这样你搞错的时候也能知道
Dialogue: 0,0:07:49.75,0:07:51.51,Default,,0,0,0,,还要有一个叫 ArtistTextBlock 的
Dialogue: 0,0:07:51.52,0:07:57.38,Default,,0,0,0,,这会显示正确的艺术家（歌手、作曲家等）
Dialogue: 0,0:08:00.63,0:08:05.12,Default,,0,0,0,,然后还有一个叫 AlbumTextBlock 的
Dialogue: 0,0:08:05.13,0:08:11.69,Default,,0,0,0,,显示播放的歌曲来自哪个专辑
Dialogue: 0,0:08:12.36,0:08:15.40,Default,,0,0,0,,现在我们还需要一个按钮（Button 控件）以便重玩
Dialogue: 0,0:08:15.40,0:08:19.66,Default,,0,0,0,,所以，这个叫 PlayAgainButton
Dialogue: 0,0:08:19.67,0:08:22.64,Default,,0,0,0,,内容（Content 属性）是“再玩一次”（Play Again）
Dialogue: 0,0:08:23.36,0:08:25.28,Default,,0,0,0,,设置背景画刷（Background 属性）为红色画刷（Red）
Dialogue: 0,0:08:26.89,0:08:30.88,Default,,0,0,0,,水平排列方式（HorizontalAlignment 属性）为居中（Center）
Dialogue: 0,0:08:32.19,0:08:36.29,Default,,0,0,0,,我们把 Visibility 属性的初始值设置为 Collapsed
Dialogue: 0,0:08:36.29,0:08:39.94,Default,,0,0,0,,因为我们直到游戏结束才显示它
Dialogue: 0,0:08:39.94,0:08:43.95,Default,,0,0,0,,游戏结束后，应用问用户：“嘿，你想再玩一次吗？”（Hey, do you wanna try it again?）
Dialogue: 0,0:08:44.01,0:08:46.37,Default,,0,0,0,,如果用户想再来一次，我们就让他再来一次
Dialogue: 0,0:08:46.37,0:08:52.19,Default,,0,0,0,,所以这里也要处理 Click 事件，这样写就行了
Dialogue: 0,0:08:52.81,0:08:55.76,Default,,0,0,0,,然后删掉之前这个按钮，连带 Button_Click 处理程序
Dialogue: 0,0:08:56.30,0:09:01.09,Default,,0,0,0,,但是我需要把 Button_Click 的代码放到一个什么地儿
Dialogue: 0,0:09:01.09,0:09:05.84,Default,,0,0,0,,所以我实际上应该把它放进页面的加载事件，于是
Dialogue: 0,0:09:08.50,0:09:13.16,Default,,0,0,0,,Loaded="Page_Loaded"，然后转到代码
Dialogue: 0,0:09:14.25,0:09:16.18,Default,,0,0,0,,然后把之前剪切的代码粘过来
Dialogue: 0,0:09:17.37,0:09:18.80,Default,,0,0,0,,嗯，就放这儿吧
Dialogue: 0,0:09:19.27,0:09:20.42,Default,,0,0,0,,现在可以删了 Button_Click 方法了
Dialogue: 0,0:09:24.22,0:09:27.24,Default,,0,0,0,,还有一件事情要做
Dialogue: 0,0:09:27.81,0:09:34.26,Default,,0,0,0,,我有两行，第二行占据大部分空间
Dialogue: 0,0:09:34.26,0:09:42.66,Default,,0,0,0,,我们要做的是……因为第一行已经有一个 StackPanel 了
Dialogue: 0,0:09:42.66,0:09:45.95,Default,,0,0,0,,所以第二行我们放另一个 Grid 控件
Dialogue: 0,0:09:45.95,0:09:49.88,Default,,0,0,0,,然后设置它的 Grid.Row 为 1
Dialogue: 0,0:09:49.88,0:09:54.34,Default,,0,0,0,,这样两个就在一行里面了
Dialogue: 0,0:09:54.34,0:09:58.56,Default,,0,0,0,,实际上它是和刚刚建立的 StackPanel 在同一个单元格里面
Dialogue: 0,0:09:58.96,0:10:01.68,Default,,0,0,0,,这里只要放一个 ProgressBar 就行了
Dialogue: 0,0:10:01.68,0:10:04.42,Default,,0,0,0,,口胡，应该是 ProgressRing
Dialogue: 0,0:10:04.42,0:10:09.42,Default,,0,0,0,,命名为 StartupProgressRing
Dialogue: 0,0:10:11.52,0:10:16.88,Default,,0,0,0,,然后设置水平排列方式（HorizontalAlignment 属性）为居中（Center）\N竖直排列方式（VerticalAlignment 属性）也是
Dialogue: 0,0:10:19.58,0:10:25.75,Default,,0,0,0,,然后把宽度（Width 属性）设成一个又大又吉利的数，比如 200 就挺好，高度（Height 属性）也是
Dialogue: 0,0:10:28.63,0:10:30.11,Default,,0,0,0,,不过，好像太♂大了
Dialogue: 0,0:10:30.11,0:10:33.56,Default,,0,0,0,,变小一点儿
Dialogue: 0,0:10:33.56,0:10:35.99,Default,,0,0,0,,然后设置前景画刷（Foreground 属性）为灰色（Gray）
Dialogue: 0,0:10:38.85,0:10:41.89,Default,,0,0,0,,把这些玩意儿分成几行，读起来容易一点儿
Dialogue: 0,0:10:43.90,0:10:45.27,Default,,0,0,0,,这里这样做是因为
Dialogue: 0,0:10:45.27,0:10:52.07,Default,,0,0,0,,应用启动后，遍历整个音乐库需要一点儿时间
Dialogue: 0,0:10:52.07,0:10:59.39,Default,,0,0,0,,这时我想要显示一个不确定进度环（ProgressRing 控件）
Dialogue: 0,0:10:59.39,0:11:02.61,Default,,0,0,0,,然后等这个操作（遍历音乐库）结束的时候
Dialogue: 0,0:11:02.61,0:11:03.98,Default,,0,0,0,,我们就隐藏这个 ProgressRing 控件
Dialogue: 0,0:11:06.50,0:11:07.93,Default,,0,0,0,,搞定，布局应该可以了
Dialogue: 0,0:11:07.93,0:11:12.71,Default,,0,0,0,,基本上再改就是改改外边距等等这种属性
Dialogue: 0,0:11:12.71,0:11:15.64,Default,,0,0,0,,不过我觉得现在应该已经可以看了
Dialogue: 0,0:11:15.64,0:11:20.55,Default,,0,0,0,,所以，现在干撒勒？
Dialogue: 0,0:11:26.14,0:11:27.55,Default,,0,0,0,,我看看啊，啊对！
Dialogue: 0,0:11:28.40,0:11:32.80,Default,,0,0,0,,这里有个小问题，应该是 async Task……
Dialogue: 0,0:11:36.04,0:11:39.99,Default,,0,0,0,,这样，当页面加载的时候
Dialogue: 0,0:11:39.99,0:11:42.71,Default,,0,0,0,,我们就执行这一段代码
Dialogue: 0,0:11:46.03,0:11:50.76,Default,,0,0,0,,(-｡-;) 让我思考一下
Dialogue: 0,0:11:52.02,0:11:55.80,Default,,0,0,0,,我可能要来把一些东西放到一个助手方法里面（重构）
Dialogue: 0,0:11:56.27,0:11:58.27,Default,,0,0,0,,所以，搞成 private
Dialogue: 0,0:11:59.05,0:12:07.95,Default,,0,0,0,,然后，大概应该弄成异步方法（async），返回 Task，命名为 SetupMusicList
Dialogue: 0,0:12:16.27,0:12:18.17,Default,,0,0,0,,我们来继续，弄这个这个……
Dialogue: 0,0:12:20.49,0:12:23.20,Default,,0,0,0,,应该就是把这些步骤跑一次
Dialogue: 0,0:12:26.05,0:12:34.16,Default,,0,0,0,,啊，我觉得我得让它返回 allSongs
Dialogue: 0,0:12:34.16,0:12:36.66,Default,,0,0,0,,于是 return allSongs; 这样
Dialogue: 0,0:12:38.22,0:12:41.10,Default,,0,0,0,,于是我们搞了一个大异步，这是一个将要返回
Dialogue: 0,0:12:41.10,0:12:44.56,Default,,0,0,0,,返回 allSongs，allSongs 是个啥？
Dialogue: 0,0:12:44.56,0:12:49.56,Default,,0,0,0,,是一个 ObeservableCollection<StorageFile>
Dialogue: 0,0:12:54.90,0:12:56.33,Default,,0,0,0,,这会设置好音乐列表
Dialogue: 0,0:12:56.34,0:12:57.54,Default,,0,0,0,,感觉棒棒哒 o(*￣▽￣*)ブ
Dialogue: 0,0:13:00.42,0:13:01.69,Default,,0,0,0,,然后这么搞一搞……
Dialogue: 0,0:13:09.86,0:13:14.86,Default,,0,0,0,,allSongs = SetupMusicList();
Dialogue: 0,0:13:17.19,0:13:20.81,Default,,0,0,0,,await 这个，应该就好了
Dialogue: 0,0:13:23.32,0:13:26.52,Default,,0,0,0,,然后我要创建另一个助手方法
Dialogue: 0,0:13:26.52,0:13:28.82,Default,,0,0,0,,所以 private async……
Dialogue: 0,0:13:29.24,0:13:32.44,Default,,0,0,0,,现在来看不会返回什么东西
Dialogue: 0,0:13:32.44,0:13:33.76,Default,,0,0,0,,所以就是 Task（一个 promise）
Dialogue: 0,0:13:35.00,0:13:37.76,Default,,0,0,0,,方法叫做 PrepareNewGame
Dialogue: 0,0:13:49.05,0:13:51.83,Default,,0,0,0,,我想我应该从这儿搞一点儿东西……
Dialogue: 0,0:14:03.06,0:14:06.83,Default,,0,0,0,,第一步是 songs.Clear()
Dialogue: 0,0:14:06.83,0:14:17.37,Default,,0,0,0,,这样我们就可以，无论之前 Songs 里面有什么歌曲，都删掉咯
Dialogue: 0,0:14:17.37,0:14:19.18,Default,,0,0,0,,这样我就能重用这个方法
Dialogue: 0,0:14:19.18,0:14:21.46,Default,,0,0,0,,来准备崭新的一局游戏
Dialogue: 0,0:14:22.39,0:14:25.12,Default,,0,0,0,,然后要调用 randomSongs，我看看啊
Dialogue: 0,0:14:27.93,0:14:31.39,Default,,0,0,0,,这个也要弄进来
Dialogue: 0,0:14:33.13,0:14:34.72,Default,,0,0,0,,不过我不想这样搞 （╯－＿－）╯╧╧
Dialogue: 0,0:14:37.03,0:14:39.60,Default,,0,0,0,,让我思考一会儿
Dialogue: 0,0:14:39.75,0:14:50.54,Default,,0,0,0,,我觉得我应该把 allSongs 设为 public 的集合，或者至少成为类的成员
Dialogue: 0,0:14:50.54,0:14:55.54,Default,,0,0,0,,所以 ObservableCollection<StorageFile>
Dialogue: 0,0:14:55.83,0:14:58.31,Default,,0,0,0,,叫做 AllFiles，就像这样
Dialogue: 0,0:14:59.99,0:15:02.09,Default,,0,0,0,,啊这让我感觉棒棒哒~
Dialogue: 0,0:15:04.58,0:15:06.10,Default,,0,0,0,,然后这样搞
Dialogue: 0,0:15:09.76,0:15:11.59,Default,,0,0,0,,啊，别叫 AllFiles，叫 AllSongs 吧
Dialogue: 0,0:15:26.06,0:15:29.07,Default,,0,0,0,,这里我们就可以直接访问 AllSongs
Dialogue: 0,0:15:31.05,0:15:34.69,Default,,0,0,0,,因为我们实际上只需要获取这些歌曲一次，但是每次我们想要
Dialogue: 0,0:15:34.70,0:15:37.20,Default,,0,0,0,,开一局新的的时候，我们可以重用这个列表
Dialogue: 0,0:15:37.83,0:15:39.52,Default,,0,0,0,,这是我的脑内小剧场
Dialogue: 0,0:15:45.88,0:15:50.31,Default,,0,0,0,,或许还有一些要做的
Dialogue: 0,0:15:50.74,0:15:54.18,Default,,0,0,0,,比如，状态管理
Dialogue: 0,0:15:54.18,0:15:56.70,Default,,0,0,0,,以后会做的
Dialogue: 0,0:16:01.61,0:16:03.76,Default,,0,0,0,,回到 Page_Loaded，我们要做的事情有这些
Dialogue: 0,0:16:03.76,0:16:08.76,Default,,0,0,0,,先设置 StartupProgressRing.IsActive = true;
Dialogue: 0,0:16:08.93,0:16:13.92,Default,,0,0,0,,然后 SetupMusicList 来准备歌曲列表
Dialogue: 0,0:16:16.48,0:16:19.83,Default,,0,0,0,,然后 await PrepareNewGame()
Dialogue: 0,0:16:21.13,0:16:24.98,Default,,0,0,0,,最后设置 StartupProgressRing.IsActive
Dialogue: 0,0:16:24.98,0:16:28.25,Default,,0,0,0,,为 false，吼的~
Dialogue: 0,0:16:29.74,0:16:31.23,Default,,0,0,0,,咱们来看看这个到底有没有用
Dialogue: 0,0:16:39.86,0:16:41.37,Default,,0,0,0,,啊我忘了点儿东西
Dialogue: 0,0:17:06.59,0:17:08.05,Default,,0,0,0,,好啦，现在看看能不能生成
Dialogue: 0,0:17:13.74,0:17:16.36,Default,,0,0,0,,啊烦躁，宝宝不稀饭
Dialogue: 0,0:17:20.52,0:17:22.00,Default,,0,0,0,,返回类型是错误的
Dialogue: 0,0:17:24.59,0:17:27.82,Default,,0,0,0,,它抗议我把这玩意儿放在这儿了
Dialogue: 0,0:17:27.82,0:17:32.47,Default,,0,0,0,,所以，重新思考一番
Dialogue: 0,0:17:32.76,0:17:35.28,Default,,0,0,0,,这里改成 private void
Dialogue: 0,0:17:35.28,0:17:37.37,Default,,0,0,0,,然后不要把这些放这儿
Dialogue: 0,0:17:37.37,0:17:46.07,Default,,0,0,0,,我们至少要保障 Grid 已经可以响应用户
Dialogue: 0,0:17:50.49,0:17:53.52,Default,,0,0,0,,至于这个 Grid 本身，我先把它的背景干掉
Dialogue: 0,0:18:00.35,0:18:01.92,Default,,0,0,0,,搞定，现在我们把这个玩意儿粘在这儿
Dialogue: 0,0:18:01.92,0:18:04.24,Default,,0,0,0,,我觉得我可以这么搞，然后……
Dialogue: 0,0:18:07.96,0:18:12.96,Default,,0,0,0,,async Task……我觉得这里应该可以用 void
Dialogue: 0,0:18:17.48,0:18:18.92,Default,,0,0,0,,生成一下看看
Dialogue: 0,0:18:28.58,0:18:30.38,Default,,0,0,0,,好，“已经为 Windows 10 生成”
Dialogue: 0,0:18:31.63,0:18:33.25,Default,,0,0,0,,{\s1}哦，我的老天，它工作了，看看它（央视音）{\s0}\N\N太棒了，它还 OK，看！
Dialogue: 0,0:18:33.25,0:18:34.33,Default,,0,0,0,,挺酷啊
Dialogue: 0,0:18:35.08,0:18:36.75,Default,,0,0,0,,搞定，我们数据绑定成功了
Dialogue: 0,0:18:36.75,0:18:39.56,Default,,0,0,0,,就是上面的外边距还有点儿问题
Dialogue: 0,0:18:40.86,0:18:43.16,Default,,0,0,0,,以及，点击没有任何效果
Dialogue: 0,0:18:43.16,0:18:45.28,Default,,0,0,0,,不过一切进展还算顺利
Dialogue: 0,0:18:47.95,0:18:50.81,Default,,0,0,0,,我觉得我已经完成预计这一步应该完成的了
Dialogue: 0,0:18:50.82,0:18:53.06,Default,,0,0,0,,让我给这个加点（外边距）
Dialogue: 0,0:18:55.01,0:18:56.47,Default,,0,0,0,,来，Margin =
Dialogue: 0,0:18:57.31,0:18:58.99,Default,,0,0,0,,20 x 4
Dialogue: 0,0:19:01.97,0:19:03.43,Default,,0,0,0,,这样应该就解决了
Dialogue: 0,0:19:06.96,0:19:08.62,Default,,0,0,0,,啊你有没有注意到那个小小的……
Dialogue: 0,0:19:14.09,0:19:16.29,Default,,0,0,0,,这个不确定进度环确实转圈儿了
Dialogue: 0,0:19:16.60,0:19:18.02,Default,,0,0,0,,好，另外一个我想做的事儿是
Dialogue: 0,0:19:20.87,0:19:23.91,Default,,0,0,0,,关于这个 StackPanel 的
Dialogue: 0,0:19:27.15,0:19:30.07,Default,,0,0,0,,Margin="20"
Dialogue: 0,0:19:30.07,0:19:32.43,Default,,0,0,0,,这样会把每个边的外边距都设置为 20
Dialogue: 0,0:19:37.66,0:19:39.55,Default,,0,0,0,,非常妙~
Dialogue: 0,0:19:43.07,0:19:46.24,Default,,0,0,0,,好的，这很 {\s1}一颗赛艇{\s0} 令人激动
Dialogue: 0,0:19:46.67,0:19:49.38,Default,,0,0,0,,在短短的时间里，我们进展挺大
Dialogue: 0,0:19:49.38,0:19:51.53,Default,,0,0,0,,于是我们这个视频就到这儿
Dialogue: 0,0:19:51.53,0:19:53.54,Default,,0,0,0,,下期再见~
