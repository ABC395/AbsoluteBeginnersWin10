1
00:00:04,844 --> 00:00:08,715
Hi, I am Bob Tabor with www.LearnVisualStudio.NET.

2
00:00:08,716 --> 00:00:11,018
If you recall from the C# Fundamentals

3
00:00:11,019 --> 00:00:13,194
for Absolute Beginners series that I created

4
00:00:13,195 --> 00:00:15,893
for Microsoft Virtual Academy a year or two ago,

5
00:00:15,894 --> 00:00:18,207
-- it's also hosted on Channel9 --

6
00:00:18,208 --> 00:00:20,885
near the end of that series, I wanted to demonstrate

7
00:00:20,886 --> 00:00:22,858
how events work in C#.

8
00:00:22,859 --> 00:00:25,503
And so, to demonstrate that, I created two

9
00:00:25,504 --> 00:00:27,263
very different types of applications,

10
00:00:27,264 --> 00:00:30,452
but I followed the same workflow and got a similar result.

11
00:00:30,453 --> 00:00:33,844
So I created a ASP.NET Web Forms application,

12
00:00:33,845 --> 00:00:37,086
and then I turned around and created a WPF,

13
00:00:37,087 --> 00:00:40,873
or rather a Windows Presentation Foundation application.

14
00:00:40,874 --> 00:00:42,942
And again, I took the same basic steps

15
00:00:42,943 --> 00:00:45,566
to create those applications, and I got basically

16
00:00:45,567 --> 00:00:48,030
the same result, even though one result

17
00:00:48,031 --> 00:00:49,470
was presented in a web browser

18
00:00:49,471 --> 00:00:52,573
and the other was presented in a Windows form.

19
00:00:52,574 --> 00:00:56,435
I put a button on the form,

20
00:00:56,436 --> 00:01:00,701
you click the button, and we would handle the click event,

21
00:01:00,702 --> 00:01:03,794
and we would programmatically change the value

22
00:01:03,795 --> 00:01:07,389
of Label control to the words "Hello World".

23
00:01:07,390 --> 00:01:11,250
And so, that was a great way for us

24
00:01:11,251 --> 00:01:13,276
to not only learn how C# events work,

25
00:01:13,277 --> 00:01:15,410
but it was also great because, again, it gave you

26
00:01:15,411 --> 00:01:17,980
that confidence that, "Hey I know how to build

27
00:01:17,981 --> 00:01:19,815
one type of application.

28
00:01:19,816 --> 00:01:22,022
I can use the same techniques and workflow

29
00:01:22,023 --> 00:01:23,814
to build another type of application."

30
00:01:23,815 --> 00:01:26,556
And the good news is that you can re-purpose

31
00:01:26,557 --> 00:01:31,302
that knowledge to create Universal Windows Platform apps.

32
00:01:31,303 --> 00:01:33,233
And so, in this lesson, I want to do just that.

33
00:01:33,234 --> 00:01:35,558
I want to recreate that same application

34
00:01:35,559 --> 00:01:37,339
a basic "Hello World" application,

35
00:01:37,340 --> 00:01:42,114
but this time, I'll do it creating a simple,

36
00:01:42,115 --> 00:01:45,164
Universal Windows application and I encourage you

37
00:01:45,165 --> 00:01:46,391
to follow along.

38
00:01:46,392 --> 00:01:48,087
Now, before you can follow along,

39
00:01:48,088 --> 00:01:50,250
you're going to need to make sure that you already have

40
00:01:50,251 --> 00:01:52,597
Visual Studio 2015 installed.

41
00:01:52,598 --> 00:01:54,079
Any edition will do.

42
00:01:54,080 --> 00:01:57,332
Express, Community, or one of the paid editions,

43
00:01:57,333 --> 00:01:58,634
that's great.

44
00:01:58,635 --> 00:02:00,308
And then, secondly, you're going to need to make sure

45
00:02:00,309 --> 00:02:01,728
that you have the Emulators installed,

46
00:02:01,729 --> 00:02:03,787
just like we talked about in the previous lesson.

47
00:02:03,788 --> 00:02:06,091
And so, make sure you have that.

48
00:02:06,092 --> 00:02:08,181
I'm not going to demonstrate how to do that.

49
00:02:08,182 --> 00:02:09,984
There's plenty of resources online

50
00:02:09,985 --> 00:02:11,637
that'll explain how to do it.

51
00:02:11,638 --> 00:02:14,421
But, assuming that you've got all of that installed

52
00:02:14,422 --> 00:02:17,002
and we're ready to go, let's go ahead and get started

53
00:02:17,003 --> 00:02:19,946
by creating a new project. There's a bunch of different ways

54
00:02:19,947 --> 00:02:21,759
in Visual Studio to do this.

55
00:02:21,760 --> 00:02:24,895
But I'm going to create a new project by clicking

56
00:02:24,896 --> 00:02:27,327
on the New Project link in the Start page.

57
00:02:27,328 --> 00:02:30,281
That'll open up the New Project dialog in Visual Studio.

58
00:02:30,282 --> 00:02:32,575
We want to, on the left-hand side,

59
00:02:32,576 --> 00:02:36,041
select Installed templates, Visual C#, Windows,

60
00:02:36,042 --> 00:02:39,593
Windows Universal, and then, in the center,

61
00:02:39,594 --> 00:02:41,822
we'll see a series of templates.

62
00:02:41,823 --> 00:02:44,905
We want to choose the top one, a Blank App.

63
00:02:44,906 --> 00:02:47,838
Windows Universal Application template.

64
00:02:47,839 --> 00:02:49,715
And then I'm going to change the name

65
00:02:49,716 --> 00:02:54,099
from whatever the default is to simply "HelloWorld",

66
00:02:54,100 --> 00:02:56,893
and we'll click the OK button in the lower right-hand corner.

67
00:02:56,894 --> 00:02:59,005
And it's take Visual Studio a moment or two

68
00:02:59,006 --> 00:03:00,876
to get it all set up for us.

69
00:03:04,851 --> 00:03:07,271
Okay, so what we want to do first of all

70
00:03:07,272 --> 00:03:09,170
is go over to the right-hand side

71
00:03:09,171 --> 00:03:10,908
and to the Solution Explorer window,

72
00:03:10,909 --> 00:03:14,748
and I want to double click the MainPage.xaml file.

73
00:03:14,749 --> 00:03:18,065
It'll open up that file in a special type of designer

74
00:03:18,066 --> 00:03:19,761
that has two panes.

75
00:03:19,762 --> 00:03:22,726
The top pane is a visual designer, and the lower pane

76
00:03:22,727 --> 00:03:26,588
is a textual code-based designer.

77
00:03:26,589 --> 00:03:30,971
It allows us to edit the code that will be used

78
00:03:30,972 --> 00:03:33,361
to generate objects on screen.

79
00:03:33,362 --> 00:03:36,411
And so the language that we'll write

80
00:03:36,412 --> 00:03:38,192
in that lower pane is XAML.

81
00:03:38,193 --> 00:03:40,358
So I'll refer to this as the XAML editor.

82
00:03:40,359 --> 00:03:43,717
We'll talk about XAML in a video or two from now at length.

83
00:03:43,718 --> 00:03:46,021
But, in this top pane, you can see that we get

84
00:03:46,022 --> 00:03:48,880
a visual representation of our application.

85
00:03:48,881 --> 00:03:52,453
And you can see that we're actually looking at

86
00:03:52,454 --> 00:03:56,719
a kind of a rendering of how it would look

87
00:03:56,720 --> 00:04:00,388
if we were to design our application or run our application

88
00:04:00,389 --> 00:04:03,247
on a five inch phone screen

89
00:04:03,248 --> 00:04:06,084
with a resolution of 1920 by 1080.

90
00:04:06,085 --> 00:04:10,426
Now this is a 300% scale, so it's, it blew it up really large

91
00:04:10,427 --> 00:04:11,674
so we can see it.

92
00:04:11,675 --> 00:04:13,028
A little bit too large, actually.

93
00:04:13,029 --> 00:04:14,714
We'll change that in just a moment.

94
00:04:14,715 --> 00:04:18,341
Notice that we can also view what our application's

95
00:04:18,342 --> 00:04:20,506
user interface would look like in portrait

96
00:04:20,507 --> 00:04:23,861
or in landscape mode by toggling the little buttons

97
00:04:23,862 --> 00:04:25,408
here at the top.

98
00:04:25,409 --> 00:04:26,944
But again, this is a little bit large,

99
00:04:26,945 --> 00:04:29,269
we have to scroll around on the screen just to see

100
00:04:29,270 --> 00:04:31,146
the entire design surface.

101
00:04:31,147 --> 00:04:32,944
So we can make it a little bit smaller by going

102
00:04:32,945 --> 00:04:35,578
to the zoom window in the lower left-hand corner.

103
00:04:35,579 --> 00:04:38,059
And I'm just going to choose like 33%.

104
00:04:38,060 --> 00:04:40,245
Now that won't completely compact it down

105
00:04:40,246 --> 00:04:43,050
for our viewing pleasure.

106
00:04:43,051 --> 00:04:45,770
However, it makes it much smaller and manageable.

107
00:04:45,771 --> 00:04:50,485
What we're going to do is start off by adding some controls

108
00:04:50,486 --> 00:04:54,669
onto this designer surface, just to kind of break into

109
00:04:54,670 --> 00:04:56,426
exactly how this all works.

110
00:04:56,427 --> 00:04:58,794
So, over on the left-hand side, there should be a little tab

111
00:04:58,795 --> 00:05:00,447
sticking out called Toolbox.

112
00:05:00,448 --> 00:05:03,369
And if you click it, the Toolbox window will jettison out

113
00:05:03,370 --> 00:05:05,001
from the right-hand side.

114
00:05:05,002 --> 00:05:07,177
I'm actually going to use this little pin

115
00:05:07,178 --> 00:05:09,204
in the upper right-hand corner of that window.

116
00:05:09,205 --> 00:05:13,662
And I click it once, and that will turn off auto-hide.

117
00:05:13,663 --> 00:05:16,819
So now that Toolbox window is automatically docked

118
00:05:16,820 --> 00:05:18,654
over here on the left-hand side.

119
00:05:18,655 --> 00:05:20,350
And if you don't like the way that it's positioned,

120
00:05:20,351 --> 00:05:23,219
you can just, again, position it any way you want to

121
00:05:23,220 --> 00:05:26,131
using your mouse and the little border area between

122
00:05:26,132 --> 00:05:28,307
the Toolbox and the main area.

123
00:05:28,308 --> 00:05:30,632
And you'll notice that if we were to roll up here

124
00:05:30,633 --> 00:05:33,021
to the very top, that there are a couple of categories

125
00:05:33,022 --> 00:05:36,605
of controls that can be added, common XAML controls,

126
00:05:36,606 --> 00:05:39,271
or all XAML controls.

127
00:05:39,272 --> 00:05:41,852
We'll go through a bunch of these throughout this series.

128
00:05:41,853 --> 00:05:44,306
We basically want to work with just some common ones

129
00:05:44,307 --> 00:05:45,543
to start off with.

130
00:05:45,544 --> 00:05:48,167
So I'm going to drag and drop a Button control

131
00:05:48,168 --> 00:05:50,695
from the Toolbox, onto the design surface.

132
00:05:50,696 --> 00:05:53,319
So here we go, dragging and dropping.

133
00:05:53,320 --> 00:05:55,313
And notice when I do, it drops it right where

134
00:05:55,314 --> 00:05:56,870
my mouse cursor was.

135
00:05:56,871 --> 00:06:00,539
And, hopefully you notice also, here, in this XAML editor

136
00:06:00,540 --> 00:06:04,209
that it added this line of code in line number 11.

137
00:06:04,210 --> 00:06:07,899
It created a tag,

138
00:06:07,900 --> 00:06:11,131
which is an opening and closing angle bracket.

139
00:06:11,132 --> 00:06:13,584
Very similar to what you would see in HTML,

140
00:06:13,585 --> 00:06:15,749
and yet this is not HTML.

141
00:06:15,750 --> 00:06:19,621
But similar in the sense that you use HTML to lay out

142
00:06:19,622 --> 00:06:22,672
the design of a web page.

143
00:06:22,673 --> 00:06:24,805
Same is true with XAML.

144
00:06:24,806 --> 00:06:27,151
We'll use the XAML programming language

145
00:06:27,152 --> 00:06:31,782
to easily lay out the various controls

146
00:06:31,783 --> 00:06:34,726
and the layout for our application.

147
00:06:34,727 --> 00:06:37,606
Notice that we created a button control

148
00:06:37,607 --> 00:06:39,696
and it has a number of different properties

149
00:06:39,697 --> 00:06:41,670
like the name of that control,

150
00:06:41,671 --> 00:06:44,016
the content of that control.

151
00:06:44,017 --> 00:06:46,821
Also the alignment, the horizontal alignment

152
00:06:46,822 --> 00:06:49,051
and the vertical alignment, and then margin.

153
00:06:49,052 --> 00:06:52,208
And that margin, as you can see, is based on,

154
00:06:52,209 --> 00:06:55,535
here, this little visual view of it.

155
00:06:55,536 --> 00:07:00,111
It's 10 pixels from the top and 68 pixels from the left.

156
00:07:00,112 --> 00:07:03,311
And so, that's where the alignments come into play,

157
00:07:03,312 --> 00:07:06,564
the horizontal alignment left, that's what we're aligning to

158
00:07:06,565 --> 00:07:09,700
68 pixels, however, from the left side,

159
00:07:09,701 --> 00:07:11,321
and then 10 pixels from the top.

160
00:07:11,322 --> 00:07:13,732
And then, for the right-hand side and the bottom,

161
00:07:13,733 --> 00:07:15,662
well, those are set to zero because we're really not

162
00:07:15,663 --> 00:07:16,782
worried about those.

163
00:07:16,783 --> 00:07:18,692
We'll talk about this a little bit more later on.

164
00:07:18,693 --> 00:07:21,518
However, just notice that there are attributes or properties

165
00:07:21,519 --> 00:07:26,286
of the elements that we add in our XAML editor.

166
00:07:26,287 --> 00:07:29,507
So now if I wanted to change the name of this button,

167
00:07:29,508 --> 00:07:33,037
the programmatic name that we'll access it with,

168
00:07:33,038 --> 00:07:37,656
I can just call this the Click button or Click Me button.

169
00:07:37,657 --> 00:07:39,192
Maybe I'll change that.

170
00:07:39,193 --> 00:07:40,924
ClickMeButton.

171
00:07:42,585 --> 00:07:45,271
And I can also change the content here as well,

172
00:07:45,272 --> 00:07:48,226
by typing in Click Me to the Content area.

173
00:07:48,227 --> 00:07:51,917
Notice that when I do that, it changes the visual attribute

174
00:07:51,918 --> 00:07:55,171
of the button to "Click Me" instead of

175
00:07:55,172 --> 00:07:56,686
whatever was in there before.

176
00:07:56,687 --> 00:07:59,406
Now there's also a third way that I can make modifications

177
00:07:59,407 --> 00:08:01,752
to this object, to this button object.

178
00:08:01,753 --> 00:08:03,075
We see it here in the designer.

179
00:08:03,076 --> 00:08:04,728
We see it here in the XAML editor.

180
00:08:04,729 --> 00:08:06,172
But then also here in the right-hand side

181
00:08:06,173 --> 00:08:08,024
of the Properties window, we can make changes

182
00:08:08,025 --> 00:08:12,437
by finding a property that we want to modify like,

183
00:08:12,438 --> 00:08:15,828
for example, the text property or some common properties

184
00:08:15,829 --> 00:08:17,524
like the content.

185
00:08:17,525 --> 00:08:21,695
And we can change it by just modifying

186
00:08:21,696 --> 00:08:24,713
the little Property editor and hitting enter

187
00:08:24,714 --> 00:08:25,929
on our keyboard.

188
00:08:25,930 --> 00:08:28,180
Notice when I did that, it modified not only

189
00:08:28,181 --> 00:08:30,617
what we see here in the designer, but then also

190
00:08:30,618 --> 00:08:33,190
what we see here in the XAML editor.

191
00:08:33,191 --> 00:08:36,208
Change the content property to the value "Click This".

192
00:08:36,209 --> 00:08:38,011
And so I guess that's really the first thing

193
00:08:38,012 --> 00:08:42,363
that I wanted to demonstrate, was that these are essentially

194
00:08:42,364 --> 00:08:45,072
three different views of the same object.

195
00:08:45,073 --> 00:08:46,762
One is visual, one is textual,

196
00:08:46,763 --> 00:08:48,522
and the other is a Property editor.

197
00:08:48,523 --> 00:08:51,519
But we can make changes in any of these and they'll show up

198
00:08:51,520 --> 00:08:53,908
in the other one, so they're all connected together.

199
00:08:53,909 --> 00:08:56,553
The other thing that I want to do is I'm actually going to

200
00:08:56,554 --> 00:08:58,484
change the font size.

201
00:08:58,485 --> 00:09:01,897
So I'm going to go to the Text section of the Properties window

202
00:09:01,898 --> 00:09:05,118
and I'm going to change this from 11.25 points

203
00:09:05,119 --> 00:09:09,651
to, oh let's scroll down and it's off the screen here,

204
00:09:09,652 --> 00:09:12,365
but I'm going to change it to 48 points.

205
00:09:12,788 --> 00:09:15,613
And when I do, you can see the Click Me button

206
00:09:15,614 --> 00:09:16,499
is very large.

207
00:09:16,500 --> 00:09:18,248
Now that's not actually what I wanted to do.

208
00:09:18,249 --> 00:09:19,890
Let's change this back to like 12 points.

209
00:09:19,891 --> 00:09:21,488
All right, that seems reasonable.

210
00:09:21,489 --> 00:09:23,749
Instead, what I wanted to do was actually go over here

211
00:09:23,750 --> 00:09:26,992
to the TextBlock control in the Toolbox.

212
00:09:26,993 --> 00:09:30,384
I'm going to drag and drop that onto my design surface as well.

213
00:09:30,385 --> 00:09:33,065
You can see now that it also

214
00:09:34,394 --> 00:09:37,102
is represented on the visual surface.

215
00:09:37,103 --> 00:09:39,961
It's here in our XAML editor, and now we can also

216
00:09:39,962 --> 00:09:43,278
make changes to it and, for example, change the name

217
00:09:43,279 --> 00:09:46,899
to ResultTextBlock.

218
00:09:47,183 --> 00:09:49,112
And here's where I wanted to actually change

219
00:09:49,113 --> 00:09:52,195
the text property to 48 point.

220
00:09:52,196 --> 00:09:56,120
And you can see that it made that font very large.

221
00:09:56,121 --> 00:10:00,493
And it's showing, currently, the text value "TextBlock",

222
00:10:00,494 --> 00:10:04,898
but I can type anything here and it will be displayed.

223
00:10:04,899 --> 00:10:06,199
Whoops.

224
00:10:07,320 --> 00:10:10,057
It'll be displayed in that TextBlock.

225
00:10:10,058 --> 00:10:12,105
And that TextBlock is just basically like a label.

226
00:10:12,106 --> 00:10:14,665
Somewhere where we can put static text.

227
00:10:14,666 --> 00:10:18,174
But actually, I'm going to clear this out completely.

228
00:10:18,175 --> 00:10:20,072
I'm going to go to the end of this line.

229
00:10:20,073 --> 00:10:23,326
And notice that the font size is set to 64.

230
00:10:23,327 --> 00:10:25,928
And you might say, "Wait a second here.

231
00:10:25,929 --> 00:10:29,363
I see that it's 48 point over here in the Properties editor,

232
00:10:29,364 --> 00:10:34,363
but it's 64 units here in the Font Size attribute

233
00:10:34,409 --> 00:10:35,677
in the XAML editor.

234
00:10:35,678 --> 00:10:37,596
I thought those were supposed to be the same."

235
00:10:37,597 --> 00:10:40,145
Well actually, they are the same.

236
00:10:40,146 --> 00:10:43,025
The XAML editor is rendering values

237
00:10:43,026 --> 00:10:46,875
in device independent pixels, or rather DIPs.

238
00:10:46,876 --> 00:10:51,875
The Properties window is actually representing values

239
00:10:51,936 --> 00:10:56,137
in points, which are a fixed size of 1/72nd of an inch.

240
00:10:56,138 --> 00:10:58,025
So, it's a very complicated topic,

241
00:10:58,026 --> 00:11:01,065
but we're going to revisit this when we take into consideration

242
00:11:01,066 --> 00:11:03,316
the various screen sizes and resolutions

243
00:11:03,317 --> 00:11:06,451
on the various form factors that Windows 10 will run on

244
00:11:06,452 --> 00:11:08,937
as we're building our applications.

245
00:11:08,938 --> 00:11:11,305
As you know, you can have a large screen

246
00:11:11,306 --> 00:11:13,886
with a low resolution, or vice versa.

247
00:11:13,887 --> 00:11:16,584
And so, units of measurement like inches

248
00:11:16,585 --> 00:11:18,781
are kind of irrelevant.

249
00:11:18,782 --> 00:11:21,267
Instead we need a new unit of measurement that accounts

250
00:11:21,268 --> 00:11:25,096
for both screen size and resolution to determine

251
00:11:25,097 --> 00:11:28,994
the sizes of things like controls that we add to our apps.

252
00:11:30,099 --> 00:11:31,954
All right, the next thing that I want to do

253
00:11:31,955 --> 00:11:34,781
is actually select the button control

254
00:11:34,782 --> 00:11:37,874
and then, over here in the Properties window,

255
00:11:37,875 --> 00:11:41,287
I'm going to select this little bolt of lightning

256
00:11:41,288 --> 00:11:45,180
button over here, and that will show us

257
00:11:45,181 --> 00:11:48,572
all of the events that will be handled for the button.

258
00:11:48,573 --> 00:11:50,364
And the very first one is the Click event.

259
00:11:50,365 --> 00:11:53,478
So I'm just going to double click inside of that text box

260
00:11:53,479 --> 00:11:56,166
in the Property editor, and we'll open up

261
00:11:56,167 --> 00:11:59,067
the MainPage.xaml.cs file.

262
00:11:59,068 --> 00:12:02,320
Now notice here in our Solution Explorer,

263
00:12:02,321 --> 00:12:05,808
that the MainPage.xaml is related

264
00:12:05,809 --> 00:12:08,965
to the MainPage.xaml.cs file.

265
00:12:08,966 --> 00:12:13,349
They're actually two parts of the same puzzle.

266
00:12:13,350 --> 00:12:15,813
Two pieces of the same puzzle.

267
00:12:15,814 --> 00:12:17,488
We'll talk about that more later.

268
00:12:17,489 --> 00:12:20,154
But here, what I want to do is, whenever somebody clicks

269
00:12:20,155 --> 00:12:22,501
the Click Me button, we want to change the value

270
00:12:22,502 --> 00:12:24,495
inside of the Result Label.

271
00:12:24,496 --> 00:12:28,751
So let's set the ResultTextBlock.Text

272
00:12:28,752 --> 00:12:31,550
equals "Hello World".

273
00:12:33,232 --> 00:12:34,867
All right.

274
00:12:35,322 --> 00:12:37,294
And now what I want to do is actually

275
00:12:37,295 --> 00:12:39,705
see our application running, so I'm going to go up

276
00:12:39,706 --> 00:12:41,444
to our Toolbar

277
00:12:41,445 --> 00:12:45,364
and, there's a little green arrow

278
00:12:45,365 --> 00:12:48,670
that indicates that we can run the application

279
00:12:48,671 --> 00:12:49,961
in debug mode.

280
00:12:49,962 --> 00:12:52,478
Notice that I'm going to be running it on my local machine,

281
00:12:52,479 --> 00:12:54,494
but if I use this little drop-down arrow,

282
00:12:54,495 --> 00:12:56,862
you can see that there are some other options as well,

283
00:12:56,863 --> 00:13:00,669
including a Simulator, and an Emulator,

284
00:13:00,670 --> 00:13:04,503
as well as an actual physical device.

285
00:13:04,595 --> 00:13:06,013
So the first time that we run this,

286
00:13:06,014 --> 00:13:09,047
I'm going to actually just run it on the local machine.

287
00:13:11,955 --> 00:13:14,279
And it opens up our application, and it's actually

288
00:13:14,280 --> 00:13:17,388
quite large, but I'm going to resize this down.

289
00:13:17,811 --> 00:13:18,812
All right.

290
00:13:18,813 --> 00:13:21,436
And if we click the Click This button you can see the text

291
00:13:21,437 --> 00:13:25,046
"Hello World" appears, as we would expect.

292
00:13:26,173 --> 00:13:29,958
And so, working in debug mode is great because we're able

293
00:13:29,959 --> 00:13:31,964
to set break points like we learned about

294
00:13:31,965 --> 00:13:35,238
in the C# Fundamentals for Absolute Beginners series,

295
00:13:35,239 --> 00:13:39,857
and inspect values as the application is currently running.

296
00:13:39,858 --> 00:13:44,176
We're able to also see our app, 

297
00:13:44,177 --> 00:13:47,237
our Universal Windows Platform app running

298
00:13:47,238 --> 00:13:49,029
without having to deploy our app

299
00:13:49,030 --> 00:13:52,698
to an actual, physical Windows device.

300
00:13:52,699 --> 00:13:54,597
It's just running on our desktop.

301
00:13:54,598 --> 00:13:57,264
Now for most of this course, I'm going to be running the app

302
00:13:57,265 --> 00:13:59,471
on my local machine, like we've done here.

303
00:13:59,472 --> 00:14:03,503
Because really it's the fastest way to test what we've done.

304
00:14:03,504 --> 00:14:07,375
However, at times I'm going to want to test on emulators.

305
00:14:07,376 --> 00:14:11,183
And so, an emulator is a virtual machine that emulates,

306
00:14:11,184 --> 00:14:13,625
or mimics, a physical device.

307
00:14:13,626 --> 00:14:17,390
And that physical device could be a phone or a tablet,

308
00:14:17,391 --> 00:14:20,153
or even an XBox, although we don't have that emulator

309
00:14:20,154 --> 00:14:22,329
just yet to work with.

310
00:14:22,330 --> 00:14:25,006
Now, at this time, since I'm using the beta,

311
00:14:25,007 --> 00:14:29,016
I can only access, actually, the phone emulators,

312
00:14:29,017 --> 00:14:33,870
and then the simulator that is like the Microsoft Surface.

313
00:14:33,871 --> 00:14:37,699
So, what I want to do is run our application again,

314
00:14:37,700 --> 00:14:38,819
but this time I'm going to choose

315
00:14:38,820 --> 00:14:43,237
this Emulator 10.0.1.0 WVGA

316
00:14:43,238 --> 00:14:45,796
4 inch 512 megabyte.

317
00:14:45,797 --> 00:14:48,879
That specification that I chose,

318
00:14:48,880 --> 00:14:53,828
Emulator 10.0.1.0 WVGA 4 inch 512 megabyte,

319
00:14:53,829 --> 00:14:58,126
it specifies which physical phone

320
00:14:58,127 --> 00:14:59,822
that we're going to be emulating.

321
00:14:59,823 --> 00:15:02,916
So, if we take a look, we can see that our application

322
00:15:02,917 --> 00:15:04,814
has been loaded up in this emulator

323
00:15:04,815 --> 00:15:06,329
that looks just like a phone.

324
00:15:06,330 --> 00:15:08,633
And if I click the Click This button, you can see

325
00:15:08,634 --> 00:15:12,419
that it actually then displays in the main area.

326
00:15:12,420 --> 00:15:14,808
I can also hit the Windows button to go back

327
00:15:14,809 --> 00:15:17,496
and just like a Windows phone, I can view all apps

328
00:15:17,497 --> 00:15:21,109
and even see some of the built in apps

329
00:15:21,110 --> 00:15:23,690
in the phone.

330
00:15:23,691 --> 00:15:27,466
Now, in order to stop debugging using the emulator,

331
00:15:27,467 --> 00:15:28,650
I can do one of two things.

332
00:15:28,651 --> 00:15:29,983
I can click this little close button

333
00:15:29,984 --> 00:15:31,957
in the upper right-hand corner of the emulator.

334
00:15:31,958 --> 00:15:34,271
However, you should get in the habit of just leaving

335
00:15:34,272 --> 00:15:37,759
the emulator up and running, even when you're not debugging.

336
00:15:37,760 --> 00:15:39,679
And there's a couple of reasons for this.

337
00:15:39,680 --> 00:15:43,241
First of all, the emulator is running as a virtual machine

338
00:15:43,242 --> 00:15:45,609
and it takes time to essentially reboot.

339
00:15:45,610 --> 00:15:48,510
To shut it down and then to turn it back on.

340
00:15:48,511 --> 00:15:52,009
And then, secondly, any app data that you save

341
00:15:52,010 --> 00:15:54,633
to the phone between debugging sessions

342
00:15:54,634 --> 00:15:58,238
will be lost whenever you shut down the simulator.

343
00:15:58,239 --> 00:16:00,446
So if you have data that you want to keep around

344
00:16:00,447 --> 00:16:04,510
between debugging sessions, do not close down the emulator.

345
00:16:04,511 --> 00:16:07,101
The other option you have is to actually click

346
00:16:07,102 --> 00:16:09,544
the Stop Debugging button in the Toolbar up here,

347
00:16:09,545 --> 00:16:11,304
and I'll actually click that.

348
00:16:11,305 --> 00:16:13,352
But as you'll see, the emulator is still running.

349
00:16:13,353 --> 00:16:15,858
We just go out to the main Windows screen.

350
00:16:15,859 --> 00:16:17,394
And I know that there's a little bit

351
00:16:17,395 --> 00:16:19,101
of emulator weirdness here.

352
00:16:19,102 --> 00:16:22,514
Eventually these physical buttons on the phone will work

353
00:16:22,515 --> 00:16:24,178
instead of these little software buttons here

354
00:16:24,179 --> 00:16:26,268
that they have represented.

355
00:16:26,269 --> 00:16:27,292
All right.

356
00:16:27,293 --> 00:16:29,660
Actually, I'm going to close this anyway.

357
00:16:29,661 --> 00:16:32,561
Now, hopefully you're able to see the relationship

358
00:16:32,562 --> 00:16:36,924
between the work that we did in the XAML editor

359
00:16:36,925 --> 00:16:39,665
and in the design view and the Properties window

360
00:16:39,666 --> 00:16:42,481
with the work that we did in this code behind file,

361
00:16:42,482 --> 00:16:44,774
this MainPage.xaml.cs file.

362
00:16:44,775 --> 00:16:47,163
And you're then actually able to see the result

363
00:16:47,164 --> 00:16:50,118
of the work that we did when we ran the application,

364
00:16:50,119 --> 00:16:53,478
whether it be in our, on our local machine

365
00:16:53,479 --> 00:16:55,963
or in one of the phone emulators, okay?

366
00:16:55,964 --> 00:16:58,384
And so, what we'll do is we'll come back

367
00:16:58,385 --> 00:17:00,634
in the next lesson, and we're going to investigate further

368
00:17:00,635 --> 00:17:03,429
what we did, why we did it,

369
00:17:03,430 --> 00:17:06,490
and then kind of use this, again, as a jumping off point

370
00:17:06,491 --> 00:17:11,006
for learning more about the Universal Windows Platform API.

371
00:17:11,007 --> 00:17:11,777
Okay.

372
00:17:11,778 --> 00:17:13,568
So we'll see you in the next lesson.

373
00:17:13,569 --> 00:17:15,023
Thank you.  

