[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: uwp02
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
Original Translation: @MSP-天堂迈舞蹈
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: uwp02FirstApp_high.mp4
Video File: uwp02FirstApp_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.625000
Video Position: 231

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,微软雅黑,48,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,0,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:04.00,Default,,0,0,0,,创建第一个UWP应用  翻译@MSP-天堂迈舞
Dialogue: 0,0:00:04.00,0:00:08.00,Default,,0,0,0,,Hi,我是Bob，来自www.learnvisualstudio.net
Dialogue: 0,0:00:08.00,0:00:14.00,Default,,0,0,0,,如果你看过我一年前为MVA录制的
Dialogue: 0,0:00:14.00,0:00:16.00,Default,,0,0,0,,C#入门视频
Dialogue: 0,0:00:16.00,0:00:18.00,Default,,0,0,0,,也可以在Channel 9上找到这个视频
Dialogue: 0,0:00:18.00,0:00:22.00,Default,,0,0,0,,我想向你们展示用C#编程的优势
Dialogue: 0,0:00:22.00,0:00:26.00,Default,,0,0,0,,为了演示，我创建了两个完全不同的应用
Dialogue: 0,0:00:26.00,0:00:30.00,Default,,0,0,0,,但是他们有一样的工作流，同样的运行结果
Dialogue: 0,0:00:30.00,0:00:33.00,Default,,0,0,0,,我创建了一个ASP.NET WebForm应用
Dialogue: 0,0:00:33.00,0:00:40.00,Default,,0,0,0,,我也创建了一个WPF应用，也就是Windows Presentation Foundation应用
Dialogue: 0,0:00:40.00,0:00:44.00,Default,,0,0,0,,我用一些基本的步骤来创建这些应用
Dialogue: 0,0:00:44.00,0:00:46.00,Default,,0,0,0,,得到一些基本的结果
Dialogue: 0,0:00:46.00,0:00:52.00,Default,,0,0,0,,一个是在浏览器上呈现的，一个是在Windows Form上呈现
Dialogue: 0,0:00:52.00,0:00:56.00,Default,,0,0,0,,我在窗口上放置了一个按钮
Dialogue: 0,0:00:56.00,0:00:58.00,Default,,0,0,0,,你可以点击这个按钮
Dialogue: 0,0:00:58.00,0:01:00.00,Default,,0,0,0,,然后我们来处理这个按钮的点击事件
Dialogue: 0,0:01:00.00,0:01:05.00,Default,,0,0,0,,然后，我们用代码来改变标签控件上的文本
Dialogue: 0,0:01:05.00,0:01:08.50,Default,,0,0,0,,让它显示Hello World
Dialogue: 0,0:01:08.50,0:01:13.02,Default,,0,0,0,,这是我们学习C#不错的方式
Dialogue: 0,0:01:13.02,0:01:16.59,Default,,0,0,0,,并且，这可以给你一些信心
Dialogue: 0,0:01:16.59,0:01:19.59,Default,,0,0,0,,看！我知道怎么做一个应用程序啦
Dialogue: 0,0:01:19.59,0:01:23.86,Default,,0,0,0,,我也可以用同样的方式做一个别的应用
Dialogue: 0,0:01:23.86,0:01:28.03,Default,,0,0,0,,那么，好消息是你可以这些知识
Dialogue: 0,0:01:28.03,0:01:31.24,Default,,0,0,0,,来创建Universal Windows Platform应用
Dialogue: 0,0:01:31.24,0:01:33.17,Default,,0,0,0,,在这节课中，我要做的就是
Dialogue: 0,0:01:33.17,0:01:37.44,Default,,0,0,0,,重建一个相同的Hello World应用
Dialogue: 0,0:01:37.44,0:01:44.30,Default,,0,0,0,,但是，这次我做的是一个简单的UWP应用
Dialogue: 0,0:01:44.30,0:01:46.30,Default,,0,0,0,,我建议你跟我一起做
Dialogue: 0,0:01:46.30,0:01:48.02,Default,,0,0,0,,在跟我一块做之前
Dialogue: 0,0:01:48.02,0:01:52.59,Default,,0,0,0,,请确保你已经安装了Visual Studio 2015
Dialogue: 0,0:01:52.59,0:01:58.53,Default,,0,0,0,,什么版本都可以，Express/Community或者是付费版本都可以
Dialogue: 0,0:01:58.53,0:02:03.70,Default,,0,0,0,,还有，你要安装好模拟器，正如我们在前一节课里讲的
Dialogue: 0,0:02:03.70,0:02:11.44,Default,,0,0,0,,确保你都安装好了，我不会演示怎么安装，网上有很多教程哒
Dialogue: 0,0:02:11.44,0:02:15.04,Default,,0,0,0,,那我就当你安装好了
Dialogue: 0,0:02:15.04,0:02:19.22,Default,,0,0,0,,那么我们准备新建一个新项目啦
Dialogue: 0,0:02:19.22,0:02:21.55,Default,,0,0,0,,在Visual Studio中有很多种方式来新建一个项目
Dialogue: 0,0:02:21.55,0:02:27.36,Default,,0,0,0,,我就在这里点击新建项目好了，在开始页上就有
Dialogue: 0,0:02:27.36,0:02:30.23,Default,,0,0,0,,这会在VS中打开一个新建项目对话框
Dialogue: 0,0:02:30.23,0:02:37.74,Default,,0,0,0,,在左边一栏中选择已安装-模板-Visual C#-Windows-Windows Universal
Dialogue: 0,0:02:37.74,0:02:42.01,Default,,0,0,0,,在中间我们可以看到很多模板
Dialogue: 0,0:02:42.01,0:02:44.71,Default,,0,0,0,,我们选择第一个，空白应用
Dialogue: 0,0:02:44.71,0:02:47.65,Default,,0,0,0,,Windows通用应用模板
Dialogue: 0,0:02:47.65,0:02:53.75,Default,,0,0,0,,我再给项目重命名一下，就叫HelloWorld吧
Dialogue: 0,0:02:53.75,0:02:56.99,Default,,0,0,0,,按下右下角的完成按钮
Dialogue: 0,0:02:56.99,0:03:04.60,Default,,0,0,0,,等待Visual Studio为我们创建完这个项目
Dialogue: 0,0:03:04.60,0:03:11.10,Default,,0,0,0,,好啦，我们要做的第一件事就是在右边的解决方案管理器中
Dialogue: 0,0:03:11.10,0:03:15.01,Default,,0,0,0,,双击MainPage.xaml文件
Dialogue: 0,0:03:15.01,0:03:19.64,Default,,0,0,0,,打开以后你会看到有两个小窗口的设计器
Dialogue: 0,0:03:19.64,0:03:22.01,Default,,0,0,0,,上面的是可视化设计器，展示了界面
Dialogue: 0,0:03:22.01,0:03:26.85,Default,,0,0,0,,下面的是界面对应代码
Dialogue: 0,0:03:26.85,0:03:33.29,Default,,0,0,0,,可以在这里编辑用来生成界面的代码
Dialogue: 0,0:03:33.29,0:03:40.50,Default,,0,0,0,,我们就在下面编写页面代码，以后我们叫它XAML编辑器
Dialogue: 0,0:03:40.50,0:03:43.00,Default,,0,0,0,,从这节课开始，我们介绍XAML
Dialogue: 0,0:03:43.00,0:03:49.00,Default,,0,0,0,,在上面的界面你可以看到我们应用的样子
Dialogue: 0,0:03:49.00,0:04:06.16,Default,,0,0,0,,你可以看到这其实是一个5英寸，分辨率1920*1080的手机界面
Dialogue: 0,0:04:06.16,0:04:08.16,Default,,0,0,0,,现在是3倍大小的屏幕
Dialogue: 0,0:04:08.16,0:04:14.63,Default,,0,0,0,,看上去很大，我们一会儿可以改变它的大小
Dialogue: 0,0:04:14.63,0:04:22.17,Default,,0,0,0,,我们也可以看到我们的应用在手机竖直或者翻转状态下的UI
Dialogue: 0,0:04:22.17,0:04:25.44,Default,,0,0,0,,点顶上的这两个按钮就可以
Dialogue: 0,0:04:25.44,0:04:31.12,Default,,0,0,0,,但是，现在看上去似乎有点大啊 要通过滚动条来看到整个界面
Dialogue: 0,0:04:31.12,0:04:35.49,Default,,0,0,0,,我们可以在左下改变缩放的尺寸
Dialogue: 0,0:04:35.49,0:04:38.00,Default,,0,0,0,,我选择缩放到33.33%
Dialogue: 0,0:04:38.00,0:04:45.66,Default,,0,0,0,,这样就可以看的比较全了，虽然上面的东西会变得小一点
Dialogue: 0,0:04:45.66,0:04:52.50,Default,,0,0,0,,我们要做的就是在这个页面上放一些控件
Dialogue: 0,0:04:52.50,0:04:56.14,Default,,0,0,0,,让我们来看看要怎么做
Dialogue: 0,0:04:56.14,0:05:00.38,Default,,0,0,0,,在左侧，我们可以看到工具箱
Dialogue: 0,0:05:00.38,0:05:04.88,Default,,0,0,0,,点开工具箱窗口
Dialogue: 0,0:05:04.88,0:05:14.16,Default,,0,0,0,,我要把这个窗口钉在左边，不让它隐藏，点这个按钮就行了
Dialogue: 0,0:05:14.16,0:05:18.60,Default,,0,0,0,,现在工具箱窗口就被固定在左边啦
Dialogue: 0,0:05:18.60,0:05:28.17,Default,,0,0,0,,要是你觉得它大了或者小了，用你的鼠标来调整它的宽度吧
Dialogue: 0,0:05:28.17,0:05:34.78,Default,,0,0,0,,你会发现在工具栏里，控件被分成了三类
Dialogue: 0,0:05:34.78,0:05:39.05,Default,,0,0,0,,常用XAML控件，所有XAML控件
Dialogue: 0,0:05:39.05,0:05:41.92,Default,,0,0,0,,我会在本课程中会陆续介绍很多控件给大家
Dialogue: 0,0:05:41.92,0:05:45.56,Default,,0,0,0,,我们先从最基本的控件开始，就在常用XAML控件中就可以找到
Dialogue: 0,0:05:45.56,0:05:50.86,Default,,0,0,0,,我现在从工具箱从拖一个(Button)按钮控件到我们的设计界面
Dialogue: 0,0:05:50.86,0:05:53.06,Default,,0,0,0,,那我开始咯，拖出来，然后放到这里松开鼠标
Dialogue: 0,0:05:53.06,0:05:56.60,Default,,0,0,0,,它会放在我松开鼠标的那个位置
Dialogue: 0,0:05:56.60,0:06:00.77,Default,,0,0,0,,你应该发现了XAML编辑器中发生了一些变化
Dialogue: 0,0:06:00.77,0:06:04.38,Default,,0,0,0,,VS为你自动的添加了一行代码，就在第11行上
Dialogue: 0,0:06:04.38,0:06:11.55,Default,,0,0,0,,它创建了一个标签，放在一对尖括号里面
Dialogue: 0,0:06:11.55,0:06:16.12,Default,,0,0,0,,和你所见过的HTML代码非常相似，但这并不是HTML代码
Dialogue: 0,0:06:16.12,0:06:22.89,Default,,0,0,0,,和你用HTML来布局设计一个网页的感觉差不多
Dialogue: 0,0:06:22.89,0:06:34.81,Default,,0,0,0,,我们用XAML语言能够非常容易的为我们的程序设计布局
Dialogue: 0,0:06:34.81,0:06:39.81,Default,,0,0,0,,注意到，我们创建的Button控件，它有一些属性
Dialogue: 0,0:06:39.81,0:06:49.39,Default,,0,0,0,,Name属性，Content属性，水平(Horizontal)对齐,垂直(Vertical)对齐，外边距(Margin)属性
Dialogue: 0,0:06:49.39,0:06:55.06,Default,,0,0,0,,至于Margin属性，你可以在设计界面上看到
Dialogue: 0,0:06:55.06,0:07:00.37,Default,,0,0,0,,距离顶部10像素，左边68像素
Dialogue: 0,0:07:00.37,0:07:05.50,Default,,0,0,0,,这就是对齐的效果了，HorizontalAlignment水平对齐方式为居左
Dialogue: 0,0:07:05.50,0:07:11.51,Default,,0,0,0,,Margin属性中第一个数字表示距离左边68像素，第二个数字表示距离顶部10像素
Dialogue: 0,0:07:11.51,0:07:18.38,Default,,0,0,0,,右和下的边距为0，现在不用管这两个边距，我们会在后面说到
Dialogue: 0,0:07:18.38,0:07:26.52,Default,,0,0,0,,再看到XAML编辑器里的这行代码，一个控件元素，还有这个控件的一些属性
Dialogue: 0,0:07:26.52,0:07:29.89,Default,,0,0,0,,如果我要更改按钮的Name
Dialogue: 0,0:07:29.89,0:07:47.61,Default,,0,0,0,,我们可以在代码里把Name属性值改成'CLickMeButton',Content(内容)属性改成‘Click Me’
Dialogue: 0,0:07:47.61,0:07:56.75,Default,,0,0,0,,注意到在我改Content属性的时候，界面里的按钮显示的文本就从之前的变成了'Click Me'
Dialogue: 0,0:07:56.75,0:08:04.70,Default,,0,0,0,,我们还有一种方式来修改这个按钮控件的属性
Dialogue: 0,0:08:04.70,0:08:08.43,Default,,0,0,0,,在右边有一个属性窗口，我们也可以在这里修改属性值
Dialogue: 0,0:08:08.43,0:08:12.60,Default,,0,0,0,,只要找到一个我们想要修改的属性就可以了
Dialogue: 0,0:08:12.60,0:08:17.54,Default,,0,0,0,,比如说文本属性啊，一般属性像Content属性
Dialogue: 0,0:08:17.54,0:08:25.72,Default,,0,0,0,,我们可以在这里修改它的值
Dialogue: 0,0:08:25.72,0:08:33.19,Default,,0,0,0,,一旦我更改了Content值，你就可以在设计界面和XAML编辑器中看到变化
Dialogue: 0,0:08:33.19,0:08:36.26,Default,,0,0,0,,看到Button空间的Content属性值已经变成了‘Click This’
Dialogue: 0,0:08:36.26,0:08:45.34,Default,,0,0,0,,我第一个向你们演示的就是，我们有三种不同方式来修改属性值
Dialogue: 0,0:08:45.34,0:08:48.57,Default,,0,0,0,,一个是在设计界面，一个是在XAML编辑器中，一个是在属性窗口中
Dialogue: 0,0:08:48.57,0:08:54.01,Default,,0,0,0,,在任何一个地方修改以后，另外两个地方都会跟着改变
Dialogue: 0,0:08:54.01,0:08:58.88,Default,,0,0,0,,我还要做一件事情，改一下字体大小
Dialogue: 0,0:08:58.88,0:09:12.76,Default,,0,0,0,,在Text属性组里可以找到，我把字体大小从11.25点改到48点
Dialogue: 0,0:09:12.76,0:09:21.44,Default,,0,0,0,,改完以后，发现按钮变得好大啊！我并不想改这么大的，容我改小一点
Dialogue: 0,0:09:21.44,0:09:30.42,Default,,0,0,0,,然后我在工具箱里找到TextBlock控件，拖拽到设计界面
Dialogue: 0,0:09:30.42,0:09:39.36,Default,,0,0,0,,好啦，它也出现在了设计界面里，XAML编辑器里也有它的代码啦
Dialogue: 0,0:09:39.36,0:09:46.53,Default,,0,0,0,,我再改改它的Name属性，改成ResultTextBlock吧
Dialogue: 0,0:09:46.53,0:09:56.34,Default,,0,0,0,,再把字体大小改成48点吧，看上去非常大啊
Dialogue: 0,0:09:56.34,0:10:07.82,Default,,0,0,0,,现在它的Text属性值是TextBlock，我可以再这里修改它的值，什么文字都行
Dialogue: 0,0:10:07.82,0:10:09.82,Default,,0,0,0,,这些文字就会在TextBlock控件上显示出来
Dialogue: 0,0:10:09.82,0:10:12.32,Default,,0,0,0,,TextBlock控件就好像是一个标签一样
Dialogue: 0,0:10:12.32,0:10:14.32,Default,,0,0,0,,我们可以在上面放一些静态的文本
Dialogue: 0,0:10:14.32,0:10:18.63,Default,,0,0,0,,现在我把Text的属性值清空
Dialogue: 0,0:10:18.63,0:10:23.53,Default,,0,0,0,,到这行代码的尾部，看到字体大小的属性值是64
Dialogue: 0,0:10:23.53,0:10:35.68,Default,,0,0,0,,咦！等一下，在属性窗口里它明明是48啊，在XAML编辑器里怎么是64？
Dialogue: 0,0:10:35.68,0:10:37.08,Default,,0,0,0,,他们不应该是一致的么？！
Dialogue: 0,0:10:37.08,0:10:42.75,Default,,0,0,0,,:-O，事实上他们确实是一致的，只是他们的单位不一样
Dialogue: 0,0:10:42.75,0:10:47.23,Default,,0,0,0,,在XAML里的字号表示的是在设备上的单位，独立像素
Dialogue: 0,0:10:47.23,0:10:56.17,Default,,0,0,0,,而属性窗口里的值，代表了像素点的个数，单位是每英寸点的个数
Dialogue: 0,0:10:56.17,0:11:04.31,Default,,0,0,0,,这是一个非常复杂主题，在讲到屏幕尺寸和分辨率的时候会详细讲
Dialogue: 0,0:11:04.31,0:11:08.91,Default,,0,0,0,,Win10上用到的计算大小的方式
Dialogue: 0,0:11:08.91,0:11:13.95,Default,,0,0,0,,你一定知道有的手机屏幕大分辨率却不高，或者恰好相反
Dialogue: 0,0:11:13.95,0:11:18.69,Default,,0,0,0,,这时候再用英寸来作为尺寸单位就不大合适了
Dialogue: 0,0:11:18.69,0:11:24.70,Default,,0,0,0,,我们需要一种新的测量单位来平衡好屏幕大小和分辨率之间的问题
Dialogue: 0,0:11:24.70,0:11:29.23,Default,,0,0,0,,让我们应用里空间的大小合适
Dialogue: 0,0:11:29.23,0:11:34.91,Default,,0,0,0,,下面，我选择这个按钮控件
Dialogue: 0,0:11:34.91,0:11:44.18,Default,,0,0,0,,然后 在属性窗口 点这个像闪电的按钮
Dialogue: 0,0:11:44.18,0:11:48.99,Default,,0,0,0,,这里有这个按钮能够处理的所有事件
Dialogue: 0,0:11:48.99,0:11:55.23,Default,,0,0,0,,最前面一个就是按钮的点击事件，我在这个文本框里双击
Dialogue: 0,0:11:55.23,0:11:59.26,Default,,0,0,0,,打开了MainPagexaml.cs文件
Dialogue: 0,0:11:59.26,0:12:02.80,Default,,0,0,0,,看一下我们的解决方案管理器
Dialogue: 0,0:12:02.81,0:12:08.47,Default,,0,0,0,,MainPage.xaml和MainPagexaml.cs文件他们是相关联的
Dialogue: 0,0:12:08.47,0:12:17.48,Default,,0,0,0,,事实上，他们其实是一个东西的两个部分，我们会在后面再讲到
Dialogue: 0,0:12:17.48,0:12:19.18,Default,,0,0,0,,这里我要做的就是
Dialogue: 0,0:12:19.18,0:12:21.18,Default,,0,0,0,,当有人来点击这个按钮的时候
Dialogue: 0,0:12:21.18,0:12:24.46,Default,,0,0,0,,我们来改变在ResultLable上显示的文本
Dialogue: 0,0:12:24.46,0:12:33.43,Default,,0,0,0,,我们设置ResultTextBlock(控件的Name)点 Text(属性),等于 “Hello World”
Dialogue: 0,0:12:33.43,0:12:35.43,Default,,0,0,0,,好了:-D
Dialogue: 0,0:12:35.43,0:12:38.94,Default,,0,0,0,,我现在就先保存一下，然后运行看看效果
Dialogue: 0,0:12:38.94,0:12:49.98,Default,,0,0,0,,在工具栏上找到一个按钮，上面有个绿色的箭头，我们可以点这个按钮以Debug模式运行程序
Dialogue: 0,0:12:49.98,0:12:57.19,Default,,0,0,0,,它显示的是本地计算机，我打开下拉菜单，里面有很多选项
Dialogue: 0,0:12:57.19,0:13:04.70,Default,,0,0,0,,包括各种配置的模拟器，当然也有实体机的选项
Dialogue: 0,0:13:04.70,0:13:10.90,Default,,0,0,0,,我们第一次运行就选本地计算机好了，点击运行
Dialogue: 0,0:13:10.90,0:13:18.48,Default,,0,0,0,,变大一点，太大了，再变小点，好嘞
Dialogue: 0,0:13:18.48,0:13:24.95,Default,,0,0,0,,我们点‘Click This’这个按钮，(⊙０⊙)出 现了我们想要的结果
Dialogue: 0,0:13:24.95,0:13:28.32,Default,,0,0,0,,在Debug模式下运行程序很棒的
Dialogue: 0,0:13:28.32,0:13:35.63,Default,,0,0,0,,因为我们可以在代码里设置断点，和C#入门课程中讲的一样
Dialogue: 0,0:13:35.63,0:13:39.90,Default,,0,0,0,,在程序运行的时候，可以监视变量的值
Dialogue: 0,0:13:39.90,0:13:47.44,Default,,0,0,0,,我们也可以看到我们的UWP应用运行
Dialogue: 0,0:13:47.64,0:13:52.98,Default,,0,0,0,,而不需要把它部署到一台物理Windows设备上
Dialogue: 0,0:13:52.98,0:13:54.58,Default,,0,0,0,,现在它运行在桌面环境下
Dialogue: 0,0:13:54.58,0:13:59.52,Default,,0,0,0,,在我的课程中，大部分情况下我都会在我的本地计算机上运行
Dialogue: 0,0:13:59.52,0:14:03.62,Default,,0,0,0,,因为这其实是测试我们的程序的最快方法
Dialogue: 0,0:14:03.62,0:14:07.46,Default,,0,0,0,,我有时候也会在模拟器上测试
Dialogue: 0,0:14:07.46,0:14:13.73,Default,,0,0,0,,模拟器是一台虚拟机，模拟一台物理设备的功能
Dialogue: 0,0:14:13.73,0:14:18.67,Default,,0,0,0,,虚拟机可以是手机，平板，甚至是Xbox
Dialogue: 0,0:14:18.67,0:14:22.61,Default,,0,0,0,,虽然我们现在还没有Xbox来模拟。。。
Dialogue: 0,0:14:22.61,0:14:34.25,Default,,0,0,0,,这次我用手机的模拟器运行，当然还有类似Surface的模拟器
Dialogue: 0,0:14:34.25,0:14:46.06,Default,,0,0,0,,我选10.0.1.0WVGA 4寸 512M的手机模拟器
Dialogue: 0,0:14:46.06,0:15:00.18,Default,,0,0,0,,这个配置就相当于我们拿有相同配置的一台手机来模拟运行我们的程序
Dialogue: 0,0:15:00.18,0:15:06.12,Default,,0,0,0,,那么我们的程序就在一个手机模样的地方运行啦
Dialogue: 0,0:15:06.12,0:15:08.12,Default,,0,0,0,,按一下这个按钮
Dialogue: 0,0:15:08.12,0:15:12.52,Default,,0,0,0,,我们的‘Hello World’又出现了
Dialogue: 0,0:15:12.52,0:15:14.46,Default,,0,0,0,,我按一下Windows键返回
Dialogue: 0,0:15:14.46,0:15:24.10,Default,,0,0,0,,和Windows Phone一样，我可以浏览应用列表，有一些内置的应用在里面
Dialogue: 0,0:15:24.10,0:15:31.94,Default,,0,0,0,,要停止模拟器调试的话，你可以在这里点关闭
Dialogue: 0,0:15:31.94,0:15:38.28,Default,,0,0,0,,然而，你最好还是让它运行着吧，即使你没用它来调试
Dialogue: 0,0:15:38.28,0:15:39.75,Default,,0,0,0,,为什么呢 
Dialogue: 0,0:15:39.75,0:15:48.39,Default,,0,0,0,,第一，模拟器在虚拟机里运行，关了以后下次运行还要花一段时间打开
Dialogue: 0,0:15:48.39,0:15:58.54,Default,,0,0,0,,第二，你在调试中保存的所有数据都会因为模拟器的关闭而丢失
Dialogue: 0,0:15:58.54,0:16:04.98,Default,,0,0,0,,所以，如果你有保存的数据还要在下次调试的时候使用的话 {\b1\c&H0000FF&}!!!不要关闭模拟器{\b0}!!!
Dialogue: 0,0:16:04.98,0:16:11.38,Default,,0,0,0,,你要做的就是，在工具栏上点击停止调试按钮，像我这样做
Dialogue: 0,0:16:11.38,0:16:13.38,Default,,0,0,0,,那么，模拟机就i还在运行着
Dialogue: 0,0:16:13.38,0:16:16.02,Default,,0,0,0,,回到主屏幕
Dialogue: 0,0:16:16.02,0:16:19.12,Default,,0,0,0,,我知道这个模拟器这长得有点诡异
Dialogue: 0,0:16:19.12,0:16:25.96,Default,,0,0,0,,又有实体键，又有虚拟机这是要闹哪样
Dialogue: 0,0:16:25.96,0:16:29.73,Default,,0,0,0,,好吧，我要把它关了  23333
Dialogue: 0,0:16:29.73,0:16:39.54,Default,,0,0,0,,希望你已经了解到设计界面，XAML编辑器和属性窗口之间的联系啦
Dialogue: 0,0:16:39.54,0:16:44.95,Default,,0,0,0,,还有我们在后台代码(MainPage.xaml.cs文件)中做的事情
Dialogue: 0,0:16:44.95,0:16:50.52,Default,,0,0,0,,然后查看我们程序的运行结果，运行我们的应用
Dialogue: 0,0:16:50.52,0:16:55.99,Default,,0,0,0,,使用本机和手机模拟器运行我们的应用
Dialogue: 0,0:16:55.99,0:17:03.13,Default,,0,0,0,,我们下次课再见，深入来了解一下我们做了什么，为什么怎么做
Dialogue: 0,0:17:03.13,0:17:11.68,Default,,0,0,0,,这是是为了以后能使用更多UWP API的起点　　OK
Dialogue: 0,0:17:11.68,0:17:13.68,Default,,0,0,0,,我们下节课再见　谢谢　( ^_^ )/~~
Dialogue: 0,0:17:13.68,0:17:15.68,Default,,0,0,0,,微软大法好！
