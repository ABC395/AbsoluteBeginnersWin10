[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: uwp61WeatherLiveTiles_high.mp4
Video File: uwp61WeatherLiveTiles_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.375000
Scroll Position: 76
Active Line: 83
Video Position: 17030

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: yahei,微软雅黑,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,yahei,,0,0,0,,UWP天气-动态磁贴（周期性更新磁贴通知）\N翻译：shi
Dialogue: 0,0:00:05.00,0:00:08.37,yahei,,0,0,0,,我们的app主要功能设置已经完成了
Dialogue: 0,0:00:08.57,0:00:13.14,yahei,,0,0,0,,可能还有一些小的界面美化设置
Dialogue: 0,0:00:13.14,0:00:19.34,yahei,,0,0,0,,然后就都交给你们了，你们可以继续调试或者添加更多功能
Dialogue: 0,0:00:19.34,0:00:24.65,yahei,,0,0,0,,在这之前，我还要再加一个非常棒的功能
Dialogue: 0,0:00:24.65,0:00:33.28,yahei,,0,0,0,,就是怎样设置动态磁贴，也就是磁贴会根据app的内容自动更新
Dialogue: 0,0:00:33.28,0:00:40.77,yahei,,0,0,0,,这里面分为两种情况\N在第一种里，磁贴会按需更改内容
Dialogue: 0,0:00:40.77,0:00:45.77,yahei,,0,0,0,,也就是程序会积极向磁贴推送数据
Dialogue: 0,0:00:45.77,0:00:50.68,yahei,,0,0,0,,而第二种则是设置周期性的推送通知
Dialogue: 0,0:00:50.68,0:00:55.91,yahei,,0,0,0,,提供一些获取数据的网址，再将成果展示给用户
Dialogue: 0,0:00:55.91,0:01:01.05,yahei,,0,0,0,,这部分很繁杂，不过在这里我只会展示一种简单的方法
Dialogue: 0,0:01:01.05,0:01:11.77,yahei,,0,0,0,,希望你掌握了这个，还要读文档的方法后\N可以继续扩展，学到更多东西
Dialogue: 0,0:01:11.77,0:01:16.91,yahei,,0,0,0,,应用到手机和电脑的开始菜单中
Dialogue: 0,0:01:16.91,0:01:26.37,yahei,,0,0,0,,就像我屏幕显示的，我创建了一个新的程序叫做TileUpdateManagerExample
Dialogue: 0,0:01:26.45,0:01:40.31,yahei,,0,0,0,,也是用于学习和理解的便笺应用\N当我掌握了之后就可以应用的实际程序中去
Dialogue: 0,0:01:40.31,0:01:44.42,yahei,,0,0,0,,这个程序中包含了两个主要特性
Dialogue: 0,0:01:44.42,0:01:52.37,yahei,,0,0,0,,我要展示的第一种就是如何将新的内容系统的推送到动态磁贴中
Dialogue: 0,0:01:52.37,0:01:59.45,yahei,,0,0,0,,虽然这么说，但是我还是需要写代码来控制
Dialogue: 0,0:01:59.45,0:02:08.02,yahei,,0,0,0,,或者我就需要预定好通知时间\N比如每半个小时去从网络服务器获取一些数据回来
Dialogue: 0,0:02:08.02,0:02:10.02,yahei,,0,0,0,,我们也会讲创建这个网络服务器的相关知识的
Dialogue: 0,0:02:10.02,0:02:17.62,yahei,,0,0,0,,既然这个app正常运行，我们要做的就是到所有程序列表中找到它
Dialogue: 0,0:02:17.62,0:02:22.48,yahei,,0,0,0,,然后右键，钉到开始界面
Dialogue: 0,0:02:22.77,0:02:32.60,yahei,,0,0,0,,在开始菜单上，动态磁贴此时是默认图标
Dialogue: 0,0:02:32.60,0:02:39.71,yahei,,0,0,0,,然后在程序中键入一些非常简单的东西（比如Hello World）\N然后点击更改磁贴内容
Dialogue: 0,0:02:39.71,0:02:46.51,yahei,,0,0,0,,当我下一次到开始菜单的时候\N磁贴就会翻转并出现我键入的东西
Dialogue: 0,0:02:46.51,0:02:56.08,yahei,,0,0,0,,那再做一次试试呢？\N键入Hello Periodic（啊地儿不够了）
Dialogue: 0,0:02:56.08,0:03:00.91,yahei,,0,0,0,,也是一样的，磁贴翻转并出现了“Hello Periodic”
Dialogue: 0,0:03:00.91,0:03:11.54,yahei,,0,0,0,,那我接下来讲一下怎么系统的强制更改吧\N这部分比较重要，所以再讲更高级的东西之前我要把这部分讲清楚
Dialogue: 0,0:03:11.54,0:03:21.54,yahei,,0,0,0,,这里有一个TileUpdateManager（class）\N是windows.ui.notificationsnamespace的一部分
Dialogue: 0,0:03:21.54,0:03:26.80,yahei,,0,0,0,,首先要做的就是创建一个模板和其中的内容
Dialogue: 0,0:03:26.80,0:03:32.54,yahei,,0,0,0,,and there are a number of enumerations in this ileTemplateType ???
Dialogue: 0,0:03:32.54,0:03:36.65,yahei,,0,0,0,,你看这么下拉的话有一大堆呢
Dialogue: 0,0:03:36.65,0:03:45.88,yahei,,0,0,0,,它们的详细列表可以在这个链接中找到\N我先打开给你们看一下
Dialogue: 0,0:03:45.88,0:03:49.68,yahei,,0,0,0,,（把这个关掉）
Dialogue: 0,0:03:49.68,0:03:52.14,yahei,,0,0,0,,这就是磁贴模板的列表了
Dialogue: 0,0:03:52.14,0:03:58.77,yahei,,0,0,0,,大概看一下列表，能看到所有enumeration
Dialogue: 0,0:03:58.77,0:04:02.22,yahei,,0,0,0,,比如这里的150*150的磁贴图片
Dialogue: 0,0:04:02.22,0:04:09.88,yahei,,0,0,0,,是如何在桌面端和手机端的开始菜单显示的
Dialogue: 0,0:04:10.00,0:04:11.88,yahei,,0,0,0,,其实它们看起来都差不多
Dialogue: 0,0:04:11.88,0:04:19.80,yahei,,0,0,0,,不过中间可能会有一点差距，根据菜单界面的不同
Dialogue: 0,0:04:19.80,0:04:26.45,yahei,,0,0,0,,所以你可以在这其中选择合适的
Dialogue: 0,0:04:26.45,0:04:32.11,yahei,,0,0,0,,比如我选了TileSquare150x150Text04，点击它
Dialogue: 0,0:04:32.11,0:04:42.42,yahei,,0,0,0,,然后就会跳转到详情介绍这一块
Dialogue: 0,0:04:42.42,0:04:48.60,yahei,,0,0,0,,这部分包括了磁贴模板的功能，以及如何使用
Dialogue: 0,0:04:48.60,0:04:57.14,yahei,,0,0,0,,可以看到这部分可以进行内容排版\N所以直接甩锅，把长串的内容交给它好啦
Dialogue: 0,0:04:57.14,0:05:03.94,yahei,,0,0,0,,还有一种就是需要将内容分别填进四行中的
Dialogue: 0,0:05:03.94,0:05:12.31,yahei,,0,0,0,,所以不同的模板之间会有一点不同\N希望你能找到在哪里找到这些信息
Dialogue: 0,0:05:12.31,0:05:16.37,yahei,,0,0,0,,然后这部分就是我们会用到的XML
Dialogue: 0,0:05:16.82,0:05:25.02,yahei,,0,0,0,,那我们首先来看一下TileSquare150x150Text01大概是什么样子
Dialogue: 0,0:05:25.45,0:05:32.65,yahei,,0,0,0,,所以先返回顶部，然后Ctrl+F在网页中搜索
Dialogue: 0,0:05:32.65,0:05:35.65,yahei,,0,0,0,,嗯，我们需要的就是这个啦
Dialogue: 0,0:05:35.65,0:05:42.37,yahei,,0,0,0,,点击然后查看详情，这部分就是我们所用的模板部分啦
Dialogue: 0,0:05:45.65,0:05:49.62,yahei,,0,0,0,,啊不对，是这部分╮(╯-╰)╭
Dialogue: 0,0:05:49.62,0:05:54.45,yahei,,0,0,0,,我们待会要在这两行代码中详细修改这个XMl，所以要多了解一下
Dialogue: 0,0:05:54.45,0:06:06.48,yahei,,0,0,0,,我们要做的就是找到带有“text”的元件\N并在文本框输入内容的第一个元件中附加子项（child）
Dialogue: 0,0:06:06.48,0:06:14.80,yahei,,0,0,0,,所以现在要创建文本节点，然后将它作为子项（child）附入 
Dialogue: 0,0:06:14.80,0:06:21.05,yahei,,0,0,0,,现在回去看网页中的部分\N并找到第一个”text“出现的元件
Dialogue: 0,0:06:21.05,0:06:28.11,yahei,,0,0,0,,然后附加子项，并在这部分中填充相应内容
Dialogue: 0,0:06:28.11,0:06:36.91,yahei,,0,0,0,,这部分完成之后，我们将要这个新的XML添加到新的磁贴通知中
Dialogue: 0,0:06:37.45,0:06:48.74,yahei,,0,0,0,,并通过磁贴更新管理器，将这个修改借用的模板更新至我们的应用程序
Dialogue: 0,0:06:48.97,0:06:52.60,yahei,,0,0,0,,这就是最简便的过程啦，五行就可以解决
Dialogue: 0,0:06:52.60,0:06:57.62,yahei,,0,0,0,,接下来我们要更进一步
Dialogue: 0,0:06:57.62,0:07:03.85,yahei,,0,0,0,,在下一个点击按钮事件中需要包含的是
Dialogue: 0,0:07:03.85,0:07:15.08,yahei,,0,0,0,,与其明确的将信息推送到管理器中并更新磁贴
Dialogue: 0,0:07:15.08,0:07:20.42,yahei,,0,0,0,,我要让它每隔一段时间自动更新这个URL中的内容
Dialogue: 0,0:07:20.42,0:07:31.80,yahei,,0,0,0,,所以接下来就需要创建一个可以每次返回类似这样XML的web服务器 
Dialogue: 0,0:07:31.80,0:07:43.77,yahei,,0,0,0,,我这里还有一个包含单一控件的ASP.NET MVC 5程序\N里面的主控件只返回一个view
Dialogue: 0,0:07:43.80,0:07:46.25,yahei,,0,0,0,,然后打开index.cshtml
Dialogue: 0,0:07:46.25,0:07:51.85,yahei,,0,0,0,,所以它的作用只是抓取当前时间并转为字符串
Dialogue: 0,0:07:52.20,0:07:54.65,yahei,,0,0,0,,然后在客户端中显示
Dialogue: 0,0:07:54.65,0:07:59.88,yahei,,0,0,0,,这里用到了和之前不同的模板，TileSquare150x150Text04
Dialogue: 0,0:07:59.88,0:08:10.08,yahei,,0,0,0,,然后还是一样，在网页中找到这一模板的XML
Dialogue: 0,0:08:10.08,0:08:20.40,yahei,,0,0,0,,然后将里面的这部分（Text filed）替换为当前时间
Dialogue: 0,0:08:20.80,0:08:26.37,yahei,,0,0,0,,做完这一切之后，我们要将它调到Azure中去
Dialogue: 0,0:08:26.37,0:08:34.85,yahei,,0,0,0,,拖拽并右键弹出菜单，选择发布然后发到我的Azure账户去\N（哎呀你们看不到呢残念）
Dialogue: 0,0:08:37.60,0:08:46.02,yahei,,0,0,0,,然后如果我点击这里\N啊还是单开一个窗口比较好
Dialogue: 0,0:08:46.02,0:08:49.37,yahei,,0,0,0,,它就会显示当前时间
Dialogue: 0,0:08:49.37,0:08:59.20,yahei,,0,0,0,,当你们看视频的时候可能periodic.azurewebsite.net已经不可用了\N每次有人拿到这个我都要花钱
Dialogue: 0,0:08:59.20,0:09:09.14,yahei,,0,0,0,,点击查看源文件，可以看到之前的那个模板\N只不过中间的文本元件换成了当前时间
Dialogue: 0,0:09:09.14,0:09:12.51,yahei,,0,0,0,,是不是很厉害！\N（那也要关掉）
Dialogue: 0,0:09:12.51,0:09:22.25,yahei,,0,0,0,,既然已经建好了通知服务器，那接下来就回到磁贴更新管理器
Dialogue: 0,0:09:22.25,0:09:28.25,yahei,,0,0,0,,tileContent和requestInterval都已经设好
Dialogue: 0,0:09:28.25,0:09:31.85,yahei,,0,0,0,,所以大概意思就是告诉管理器，希望你能每半小时更新一次（微笑）
Dialogue: 0,0:09:31.85,0:09:33.85,yahei,,0,0,0,,
