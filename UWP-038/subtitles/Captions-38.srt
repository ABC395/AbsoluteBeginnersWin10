1
00:00:05,120 --> 00:00:08,389
<v ->Hi, Bob Tabor with www.learnvisualstudio.net</v>

2
00:00:08,390 --> 00:00:11,949
and in this lesson I wanted to talk about adaptive layout.

3
00:00:11,950 --> 00:00:14,119
This kind of takes the conversation

4
00:00:14,120 --> 00:00:17,089
that we started with in the previous lesson

5
00:00:17,090 --> 00:00:18,819
to a higher level, and in the previous lesson

6
00:00:18,820 --> 00:00:20,289
we talked about the nuts and bolts

7
00:00:20,290 --> 00:00:23,049
of actually using the Visual State Manager

8
00:00:23,050 --> 00:00:25,889
and AdapativeTrigers to change

9
00:00:25,890 --> 00:00:29,989
attributes of objects in XAML based on screen size.

10
00:00:29,990 --> 00:00:33,919
Now we wanna talk about kind of at a higher level,

11
00:00:33,920 --> 00:00:36,019
the patterns that you might follow

12
00:00:36,020 --> 00:00:41,019
or the general thought process behind an adaptive layout.

13
00:00:41,190 --> 00:00:43,349
Again, adaptive layout, super critical

14
00:00:43,350 --> 00:00:46,189
to the Universal Windows Platform story,

15
00:00:46,190 --> 00:00:49,319
where we build one code base and we can use it across

16
00:00:49,320 --> 00:00:50,949
multiple form factors.

17
00:00:50,950 --> 00:00:54,449
So, I found a very creative example

18
00:00:54,450 --> 00:00:57,249
that illustrates this idea very well

19
00:00:57,250 --> 00:00:58,889
on Wintellect's Blog.

20
00:00:58,890 --> 00:01:01,719
So this gentleman by the name of Jeff Prosise,

21
00:01:01,720 --> 00:01:04,449
who I highly esteem and respect

22
00:01:04,450 --> 00:01:06,789
came up with this example and let me put this URL

23
00:01:06,790 --> 00:01:09,269
on screen right now here.

24
00:01:10,350 --> 00:01:13,149
Came up with this great example of what I'm talking about

25
00:01:13,150 --> 00:01:15,881
in this article 'Using AdapativeTrigers

26
00:01:15,882 --> 00:01:19,389
'To Build Adaptive UIs in Windows 10'.

27
00:01:19,390 --> 00:01:22,289
And, in the body of this lesson,

28
00:01:22,290 --> 00:01:23,689
he kind of, or this article,

29
00:01:23,690 --> 00:01:27,689
he kind of outlines this Contoso Cookbook example.

30
00:01:27,690 --> 00:01:30,249
So I took that idea and ran with it

31
00:01:30,250 --> 00:01:34,919
and I've created a little news-style application

32
00:01:34,920 --> 00:01:37,419
that has an image of my cat,

33
00:01:37,420 --> 00:01:39,419
some information about Mr. Tibbles

34
00:01:39,420 --> 00:01:44,419
and some lorem ipsum text that we'll use.

35
00:01:44,790 --> 00:01:47,619
And, really the core of this again

36
00:01:47,620 --> 00:01:50,449
is the VisualStates that have been defined

37
00:01:50,450 --> 00:01:54,149
for a Wide layout and a Narrow layout in this case.

38
00:01:54,150 --> 00:01:55,949
And so, let's look at this in action.

39
00:01:55,950 --> 00:02:00,089
First of all, let's look at it on...

40
00:02:00,090 --> 00:02:01,369
whoops,

41
00:02:02,490 --> 00:02:05,249
on our local machine,

42
00:02:05,250 --> 00:02:07,689
and you'll see what I'm talking about.

43
00:02:07,690 --> 00:02:10,249
Okay, so you see we're in the Wide layout right now

44
00:02:10,250 --> 00:02:12,419
and we have a photo and a headline,

45
00:02:12,420 --> 00:02:15,549
I haven't spent a lot of time designing this.

46
00:02:15,550 --> 00:02:19,919
And two paragraphs of text.

47
00:02:19,920 --> 00:02:22,789
Now as I resize the application,

48
00:02:22,790 --> 00:02:24,349
notice that it goes from three columns

49
00:02:24,350 --> 00:02:28,049
to just one column, and now I can scroll down

50
00:02:28,050 --> 00:02:30,389
and read everything about Mr. Tibbles,

51
00:02:30,390 --> 00:02:33,899
if I knew Latin and if this was actually about Mr. Tibbles.

52
00:02:33,900 --> 00:02:35,149
But hopefully you get the idea

53
00:02:35,150 --> 00:02:37,919
how we dramatically change the layout

54
00:02:37,920 --> 00:02:41,549
of our content based on the screen width.

55
00:02:41,550 --> 00:02:44,649
Now let's see this at play and how it actually works

56
00:02:44,650 --> 00:02:47,149
inside of the phone emulators.

57
00:02:47,150 --> 00:02:50,489
So let me change there to the Mobile Emulator,

58
00:02:50,490 --> 00:02:53,519
the four inch, have it deploy out there really quickly

59
00:02:53,520 --> 00:02:55,089
and you can see in this case,

60
00:02:55,090 --> 00:02:57,319
we just get that single-column view.

61
00:02:57,320 --> 00:02:58,789
Now how does this all work?

62
00:02:58,790 --> 00:03:00,989
Well, let's talk a look at the actual code

63
00:03:00,990 --> 00:03:02,609
that makes this happen.

64
00:03:02,610 --> 00:03:04,489
First of all, it starts off with a series

65
00:03:04,490 --> 00:03:06,819
of StackPanels that hold the Content.

66
00:03:06,820 --> 00:03:09,789
So on my first StackPanel, second StackPanel

67
00:03:09,790 --> 00:03:11,089
and third StackPanel, and notice

68
00:03:11,090 --> 00:03:13,481
the Names that I gave them: "First"

69
00:03:13,482 --> 00:03:16,919
which contains the image of Mr. Tibbles and the TextBlock.

70
00:03:16,920 --> 00:03:20,949
The "Second" just contains that first paragraph of lorem ipsum

71
00:03:20,950 --> 00:03:22,849
and then the "Third" StackPanel which contains

72
00:03:22,850 --> 00:03:24,589
some more lorem ipsum.

73
00:03:24,590 --> 00:03:27,749
Now, by default, you can see that,

74
00:03:27,750 --> 00:03:28,949
what am I doing here?

75
00:03:28,950 --> 00:03:30,289
I'm setting the, yeah,

76
00:03:30,290 --> 00:03:33,449
the Rows and everything, I set them

77
00:03:33,450 --> 00:03:36,419
to are kind of irrelevant because that's going to be set here

78
00:03:36,420 --> 00:03:38,889
in the Visual State Manager.

79
00:03:38,890 --> 00:03:41,219
So I have two VisualStates again,

80
00:03:41,220 --> 00:03:42,789
the Wide State and the Narrow State.

81
00:03:42,790 --> 00:03:44,519
Whenever we're in the Wide State,

82
00:03:44,520 --> 00:03:47,749
we're going to utilize all three Columns

83
00:03:47,750 --> 00:03:50,489
that have been defined.

84
00:03:50,490 --> 00:03:54,319
And then we begin to put each of our StackPanels

85
00:03:54,320 --> 00:03:56,849
inside of a specific Row and Column.

86
00:03:56,850 --> 00:04:00,249
So we put the "First" StackPanel

87
00:04:00,250 --> 00:04:05,249
in Row 0, Column 0, we put the "Second" StackPanel

88
00:04:05,390 --> 00:04:09,619
in Row 0, Column 1,

89
00:04:09,620 --> 00:04:13,649
and then we put the third in Row 0, Column 2.

90
00:04:13,650 --> 00:04:17,489
Furthermore, we set the ColumnSpan to 1,

91
00:04:17,490 --> 00:04:19,979
so in other words we don't want

92
00:04:19,980 --> 00:04:23,749
any of our StackPanels to span more than one Column,

93
00:04:23,750 --> 00:04:27,809
makes sense, and so that's how we get that Wide layout

94
00:04:27,810 --> 00:04:31,789
that we saw as we ran the application originally.

95
00:04:31,790 --> 00:04:36,209
So that is this layout.

96
00:04:36,210 --> 00:04:39,619
One Column, two Columns, three Columns, alright.

97
00:04:39,620 --> 00:04:43,869
But whenever we shrink, the State or the size

98
00:04:43,870 --> 00:04:47,089
of the window below 800,

99
00:04:47,090 --> 00:04:51,219
we fall into the territory of the Narrow VisualState

100
00:04:51,220 --> 00:04:56,089
so the Trigger here is 800, and we hit that minimum width

101
00:04:56,090 --> 00:04:59,889
of 799, we're now into our Narrow State

102
00:04:59,890 --> 00:05:04,689
and we begin to change the Grid.Row and Column

103
00:05:04,690 --> 00:05:07,519
for each of our StackPanels.

104
00:05:07,520 --> 00:05:09,949
The "First", "Second" or "Third" StackPanel are now all set

105
00:05:09,950 --> 00:05:14,949
to the same Column, just different Rows.

106
00:05:15,590 --> 00:05:18,179
Furthermore, for each of the StackPanels

107
00:05:18,180 --> 00:05:22,319
we set its ColumnSpan to 3, so take the entire width,

108
00:05:22,320 --> 00:05:26,529
all the Columns, as the width of your content.

109
00:05:27,320 --> 00:05:29,449
And so that's how we get the effect

110
00:05:29,450 --> 00:05:32,849
whenever we then resize,

111
00:05:32,850 --> 00:05:36,389
now we're taking each of the StackPanels,

112
00:05:36,390 --> 00:05:38,019
this is the "First" StackPanel,

113
00:05:38,020 --> 00:05:40,889
and we're spanning three Columns.

114
00:05:40,890 --> 00:05:42,489
And here's our "Second" StackPanel,

115
00:05:42,490 --> 00:05:43,719
we're spanning three Columns,

116
00:05:43,720 --> 00:05:45,849
and our "Third" StackPanel, we're spanning three Columns.

117
00:05:45,850 --> 00:05:47,749
Okay, so hopefully you get the idea

118
00:05:47,750 --> 00:05:51,549
of what's possible and the layout that changes

119
00:05:51,550 --> 00:05:54,419
that we can accommodate based on screen size.

120
00:05:54,420 --> 00:05:57,289
Now again, I want to emphasize something I said previously.

121
00:05:57,290 --> 00:05:59,649
I don't know that there are any specific guidelines

122
00:05:59,650 --> 00:06:02,619
regarding what you should do

123
00:06:02,620 --> 00:06:07,119
for the various AdaptiveTriggers in your applications.

124
00:06:07,120 --> 00:06:08,819
It's really up to you and the layout

125
00:06:08,820 --> 00:06:10,689
of your specific application.

126
00:06:10,690 --> 00:06:14,019
What you can do is take a look at the stock applications

127
00:06:14,020 --> 00:06:17,549
in Windows 10, both on the desktop and on the phone.

128
00:06:17,550 --> 00:06:22,549
So, if you take a look here on our News App on the desktop,

129
00:06:22,560 --> 00:06:24,719
we still, we have our hamburger navigation,

130
00:06:24,720 --> 00:06:26,719
we have our Search fields here at the top,

131
00:06:26,720 --> 00:06:31,719
there's this little edit button here on the top bar as well,

132
00:06:32,390 --> 00:06:36,219
there is, we can expand some things, okay.

133
00:06:36,220 --> 00:06:37,919
So you get the general idea, right?

134
00:06:37,920 --> 00:06:39,649
Let's take a look at the News app then

135
00:06:39,650 --> 00:06:43,019
inside of the phone.

136
00:06:43,020 --> 00:06:47,319
Alright, same stories, same hamburger navigation.

137
00:06:48,050 --> 00:06:49,519
Notice that some of the icons

138
00:06:49,520 --> 00:06:51,049
might be a little bit different.

139
00:06:51,050 --> 00:06:53,849
Notice that the Edits icon here is at

140
00:06:53,850 --> 00:06:56,649
the bottom instead of the top.

141
00:06:56,650 --> 00:06:58,939
So we could accommodate that

142
00:06:58,940 --> 00:07:00,619
based on what we've learned.

143
00:07:00,620 --> 00:07:04,449
Okay, this listing is in a list,

144
00:07:04,450 --> 00:07:07,249
as opposed, in a vertical list

145
00:07:07,250 --> 00:07:10,189
as opposed to kind of of,

146
00:07:10,190 --> 00:07:11,682
well I guess this isn't a vertical list too,

147
00:07:11,683 --> 00:07:13,489
it just has multiple columns, okay.

148
00:07:13,490 --> 00:07:17,449
So, you can see how adaptive layout works

149
00:07:17,450 --> 00:07:20,819
in the stock applications in Windows.

150
00:07:20,820 --> 00:07:22,919
So I guess the moral of the story is this,

151
00:07:22,920 --> 00:07:27,779
you have the tools to make your application

152
00:07:27,780 --> 00:07:31,519
change form, however that makes sense

153
00:07:31,520 --> 00:07:32,949
for your application.

154
00:07:32,950 --> 00:07:35,549
You get to decide the break points,

155
00:07:35,550 --> 00:07:38,719
you get to decide what layout changes need to happen.

156
00:07:38,720 --> 00:07:40,669
It's all up to you.

157
00:07:40,670 --> 00:07:42,719
And perhaps that's where you need to

158
00:07:42,720 --> 00:07:44,219
for your specific type of application,

159
00:07:44,220 --> 00:07:46,649
you could take a cue from obviously the News App

160
00:07:46,650 --> 00:07:49,619
or the other apps that are bundled with Windows.

161
00:07:49,620 --> 00:07:52,419
But beyond that, there's not a lot of guidance.

162
00:07:52,420 --> 00:07:54,819
So you want to choose carefully, you want to test,

163
00:07:55,630 --> 00:07:58,489
and think logically what would make sense

164
00:07:58,490 --> 00:08:01,549
if I'm holding it versus I'm clicking on it with a mouse

165
00:08:01,550 --> 00:08:05,349
versus if I'm sitting, you know, back in my couch,

166
00:08:05,350 --> 00:08:08,189
scrolling through or working with the application, okay,

167
00:08:08,190 --> 00:08:11,649
and how would I want the UI to change

168
00:08:11,650 --> 00:08:13,449
based on those layouts.

169
00:08:13,450 --> 00:08:16,189
Okay, so that's the notion of adaptive layout

170
00:08:16,190 --> 00:08:17,219
and something that we're going to add

171
00:08:17,220 --> 00:08:19,389
to a few of our applications coming up.

172
00:08:19,390 --> 00:08:19,989
Alright?

173
00:08:19,990 --> 00:08:21,719
So let's continue on.

174
00:08:21,720 --> 00:08:23,219
We're going to look at a few more concepts

175
00:08:23,220 --> 00:08:26,689
before we begin to depart from the more

176
00:08:26,690 --> 00:08:29,589
educational aspect of this, and more into

177
00:08:29,590 --> 00:08:32,219
the actual hands on, let's build real apps,

178
00:08:32,220 --> 00:08:33,981
which comes in the second half of the series.

179
00:08:33,982 --> 00:08:36,349
So, hang in there, you're doing great,

180
00:08:36,350 --> 00:08:38,999
we'll see you in the next lesson, thanks.  

