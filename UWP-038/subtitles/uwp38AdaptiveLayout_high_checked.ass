[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None

[Aegisub Project Garbage]
Audio File: uwp38AdaptiveLayout_high.mp4
Video File: uwp38AdaptiveLayout_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.250000
Scroll Position: 66
Active Line: 69
Video Position: 6370

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:05.12,0:00:08.38,Default,,0,0,0,,大家好， 这里是 www.learnvisualstudio.net 的 Bob Tabor （萌叔）
Dialogue: 0,0:00:08.39,0:00:11.94,Default,,0,0,0,,这节课我们会讲到自适应布局
Dialogue: 0,0:00:11.95,0:00:18.36,Default,,0,0,0,,这次我们所讲到的话题是对之前课程的升华
Dialogue: 0,0:00:18.36,0:00:20.28,Default,,0,0,0,,在之前的课程中，我们讲到一些基本话题
Dialogue: 0,0:00:20.29,0:00:24.30,Default,,0,0,0,,使用 VisualStateManager 和 AdapativeTriggers
Dialogue: 0,0:00:24.30,0:00:30.04,Default,,0,0,0,,基于屏幕尺寸改变 Xaml 中的对象属性
Dialogue: 0,0:00:30.04,0:00:33.91,Default,,0,0,0,,现在我打算说一下较为高层次的、
Dialogue: 0,0:00:33.92,0:00:36.01,Default,,0,0,0,,一些你需要遵循的模式
Dialogue: 0,0:00:36.02,0:00:41.01,Default,,0,0,0,,或是自适应布局背后的一些原理过程
Dialogue: 0,0:00:41.19,0:00:43.34,Default,,0,0,0,,再次强调，自适应布局十分重要
Dialogue: 0,0:00:43.35,0:00:46.18,Default,,0,0,0,,特别是对于UWP开发
Dialogue: 0,0:00:46.19,0:00:50.94,Default,,0,0,0,,（球M$ 广告费）\N我们可以一次编码，多平台共用
Dialogue: 0,0:00:50.95,0:00:54.44,Default,,0,0,0,,我找了一个很有代表性的例程
Dialogue: 0,0:00:54.45,0:00:57.24,Default,,0,0,0,,很好的说明了自适应布局
Dialogue: 0,0:00:57.25,0:00:58.88,Default,,0,0,0,,在 Wintellect 的博客上
Dialogue: 0,0:00:58.89,0:01:01.71,Default,,0,0,0,,作者是一位名叫 Jeff Prosise 的先生
Dialogue: 0,0:01:01.72,0:01:04.44,Default,,0,0,0,,我很尊重他~~
Dialogue: 0,0:01:04.45,0:01:05.94,Default,,0,0,0,,我现在打开给你们看看
Dialogue: 0,0:01:05.94,0:01:09.26,Default,,0,0,0,,在屏幕上转到这个URL
Dialogue: 0,0:01:10.35,0:01:13.14,Default,,0,0,0,,就我刚才提到的话题他想出了一个很好的例子
Dialogue: 0,0:01:13.15,0:01:15.88,Default,,0,0,0,,在这篇文章
Dialogue: 0,0:01:15.88,0:01:19.38,Default,,0,0,0,,《Using AdapativeTrigers To Build Adaptive UIs in Windows 10》
Dialogue: 0,0:01:19.39,0:01:22.28,Default,,0,0,0,,然后他在这篇文章中
Dialogue: 0,0:01:22.29,0:01:23.68,Default,,0,0,0,,他看起来有点，在这篇文章中
Dialogue: 0,0:01:23.69,0:01:27.68,Default,,0,0,0,,他大概是用 Contoso Cookbook 这个例程来解释.
Dialogue: 0,0:01:27.69,0:01:30.24,Default,,0,0,0,,所以我借用了他的想法
Dialogue: 0,0:01:30.25,0:01:34.91,Default,,0,0,0,,并且我也这样做了，做了一个小小的、新闻风格的应用出来
Dialogue: 0,0:01:34.92,0:01:37.41,Default,,0,0,0,,有我家猫的照片
Dialogue: 0,0:01:37.42,0:01:39.41,Default,,0,0,0,,一些关于 Tibbles 先生的消息
Dialogue: 0,0:01:39.42,0:01:44.41,Default,,0,0,0,,还有一些 lorem ipsum 例文放在这里
Dialogue: 0,0:01:44.79,0:01:47.61,Default,,0,0,0,,再次强调，这里的重点
Dialogue: 0,0:01:47.62,0:01:54.14,Default,,0,0,0,,是已经定义好了适用于宽布局和窄布局的 VisualStates （严肃脸 
Dialogue: 0,0:01:54.15,0:01:55.94,Default,,0,0,0,,让我们生成部署一下看看效果
Dialogue: 0,0:01:55.95,0:02:00.08,Default,,0,0,0,,首先，我们来看看
Dialogue: 0,0:02:00.09,0:02:01.36,Default,,0,0,0,,Whoops， （表感叹）
Dialogue: 0,0:02:02.49,0:02:05.24,Default,,0,0,0,,部署到本地计算机
Dialogue: 0,0:02:05.25,0:02:07.68,Default,,0,0,0,,然后就是见证奇迹的时刻了
Dialogue: 0,0:02:07.69,0:02:10.24,Default,,0,0,0,,Ok！ 可以看到我们现在是处在宽布局的情况下
Dialogue: 0,0:02:10.25,0:02:12.41,Default,,0,0,0,,我们有一张图片和一个标题
Dialogue: 0,0:02:12.42,0:02:15.54,Default,,0,0,0,,我并没有花很多时间去设计他们
Dialogue: 0,0:02:15.55,0:02:19.91,Default,,0,0,0,,还有两段文本
Dialogue: 0,0:02:19.92,0:02:22.78,Default,,0,0,0,,然后现在我缩放这个app
Dialogue: 0,0:02:22.79,0:02:24.34,Default,,0,0,0,,你会发现它从三列
Dialogue: 0,0:02:24.35,0:02:28.04,Default,,0,0,0,,变成了一列，滚动一下看看
Dialogue: 0,0:02:28.05,0:02:30.38,Default,,0,0,0,,（注 : 这里Bob叔用的是例文，并没有实际意义）\N你可以阅读这些和Tibbles先生有关的文章
Dialogue: 0,0:02:30.38,0:02:33.89,Default,,0,0,0,,（注 : 这里Bob叔用的是例文，并没有实际意义）\N如果我真的会拉丁语并且这真的是关于Tibbles的文章
Dialogue: 0,0:02:33.90,0:02:35.14,Default,,0,0,0,,希望你已经大概知道
Dialogue: 0,0:02:35.15,0:02:37.91,Default,,0,0,0,,我们是如何戏剧性的改变我们的布局
Dialogue: 0,0:02:37.92,0:02:41.54,Default,,0,0,0,,基于屏幕尺寸
Dialogue: 0,0:02:41.55,0:02:44.64,Default,,0,0,0,,现在让我们看看它
Dialogue: 0,0:02:44.65,0:02:47.14,Default,,0,0,0,,在手机模拟器上表现如何
Dialogue: 0,0:02:47.15,0:02:50.48,Default,,0,0,0,,改为部署到手机模拟器
Dialogue: 0,0:02:50.49,0:02:53.51,Default,,0,0,0,,选择4英寸的， 这样部署会比较快
Dialogue: 0,0:02:53.52,0:02:55.08,Default,,0,0,0,,你可以看见在这里
Dialogue: 0,0:02:55.09,0:02:57.31,Default,,0,0,0,,我们只有一行
Dialogue: 0,0:02:57.32,0:02:58.78,Default,,0,0,0,,所以它到底是如何做到的呢？
Dialogue: 0,0:02:58.79,0:03:00.98,Default,,0,0,0,,回过头来看看实际的代码
Dialogue: 0,0:03:00.99,0:03:02.60,Default,,0,0,0,,这就是自适应布局的奥秘所在
Dialogue: 0,0:03:02.61,0:03:03.70,Default,,0,0,0,,首先
Dialogue: 0,0:03:03.70,0:03:06.81,Default,,0,0,0,,我们从一系列包含内容的 StackPanel 开始
Dialogue: 0,0:03:06.82,0:03:09.78,Default,,0,0,0,,在第一个StackPanel ，第二个StackPanel
Dialogue: 0,0:03:09.79,0:03:11.08,Default,,0,0,0,,还有第三个StackPanel，你可以发现
Dialogue: 0,0:03:11.09,0:03:13.48,Default,,0,0,0,,我命名了它们，“First”
Dialogue: 0,0:03:13.48,0:03:16.91,Default,,0,0,0,,包含了一张图片和一个关于 Tibbles 先生的文本框
Dialogue: 0,0:03:16.92,0:03:20.94,Default,,0,0,0,,"Second" StackPanel 包含了一段例文
Dialogue: 0,0:03:20.95,0:03:22.84,Default,,0,0,0,,然后 "Third" StackPanel 包含了
Dialogue: 0,0:03:22.85,0:03:24.58,Default,,0,0,0,,更多的例文
Dialogue: 0,0:03:24.59,0:03:27.74,Default,,0,0,0,,现在，如往常一样，你可以发现
Dialogue: 0,0:03:27.75,0:03:28.95,Default,,0,0,0,, (⊙ˍ⊙)\N我在干嘛
Dialogue: 0,0:03:28.95,0:03:30.29,Default,,0,0,0,, (＞ˍ＜)\N我在设置！没错
Dialogue: 0,0:03:30.29,0:03:33.44,Default,,0,0,0,,设置了行还有其他的一切
Dialogue: 0,0:03:33.45,0:03:34.86,Default,,0,0,0,,不管其他无关紧要的东西
Dialogue: 0,0:03:34.86,0:03:38.88,Default,,0,0,0,,它们需要在这个 VisualStateManager 里面被设置
Dialogue: 0,0:03:38.89,0:03:41.21,Default,,0,0,0,,所以我就有两个 VisualStates 了
Dialogue: 0,0:03:41.22,0:03:42.78,Default,,0,0,0,,一个对应宽布局，另外一个对应窄布局
Dialogue: 0,0:03:42.79,0:03:44.51,Default,,0,0,0,,只要我们处在宽布局的状态
Dialogue: 0,0:03:44.52,0:03:47.74,Default,,0,0,0,,我们就会启用
Dialogue: 0,0:03:47.75,0:03:50.48,Default,,0,0,0,,我们事先定义好的三列
Dialogue: 0,0:03:50.49,0:03:54.31,Default,,0,0,0,,然后我们就把每个 StackPanel
Dialogue: 0,0:03:54.32,0:03:56.84,Default,,0,0,0,,放到这些特定的行和列中
Dialogue: 0,0:03:56.85,0:04:00.24,Default,,0,0,0,,我们把"First" StackPanel 放到
Dialogue: 0,0:04:00.25,0:04:05.24,Default,,0,0,0,,第0行，第0列，把 "Second" StackPanel 放到
Dialogue: 0,0:04:05.39,0:04:09.61,Default,,0,0,0,,第0行，第1列
Dialogue: 0,0:04:09.62,0:04:13.64,Default,,0,0,0,,然后把 “Third”StackPanel 放到第0行，第2列中
Dialogue: 0,0:04:13.65,0:04:17.48,Default,,0,0,0,,此外，我们还将ColumnSpan（列跨距）的值设置为1
Dialogue: 0,0:04:17.49,0:04:19.97,Default,,0,0,0,,换句话说
Dialogue: 0,0:04:19.98,0:04:23.74,Default,,0,0,0,,我们不希望 StackPanel 不跨越任何一列
Dialogue: 0,0:04:23.75,0:04:27.80,Default,,0,0,0,,这就是我们如何实现宽界面布局
Dialogue: 0,0:04:27.81,0:04:31.78,Default,,0,0,0,,就像我们最初运行的时候看到的那样
Dialogue: 0,0:04:31.79,0:04:36.20,Default,,0,0,0,,这就是这个布局
Dialogue: 0,0:04:36.21,0:04:39.61,Default,,0,0,0,,一列，两列，三列，Ok！
Dialogue: 0,0:04:39.62,0:04:43.86,Default,,0,0,0,,不管我们如何缩放界面
Dialogue: 0,0:04:43.87,0:04:47.08,Default,,0,0,0,,一旦宽度低于 800
Dialogue: 0,0:04:47.09,0:04:51.21,Default,,0,0,0,,我们就会跳转到窄界面布局
Dialogue: 0,0:04:51.22,0:04:56.08,Default,,0,0,0,,所以自适应触发器就是 800，如果我们的宽度变成了
Dialogue: 0,0:04:56.09,0:04:59.88,Default,,0,0,0,,799，那么现在我们就是窄界面了
Dialogue: 0,0:04:59.89,0:05:04.68,Default,,0,0,0,,我们正在改变 Grid.Row 和Column
Dialogue: 0,0:05:04.69,0:05:07.51,Default,,0,0,0,,对于每一个 StackPanel
Dialogue: 0,0:05:07.52,0:05:09.94,Default,,0,0,0,,"First"， "Second" 和 "Third" StackPanel 现在通通
Dialogue: 0,0:05:09.95,0:05:14.94,Default,,0,0,0,,归到同一列中，只是出于不同行中
Dialogue: 0,0:05:15.59,0:05:18.17,Default,,0,0,0,,并且对于每一个 StackPanel
Dialogue: 0,0:05:18.18,0:05:22.31,Default,,0,0,0,,我们设置 ColumnSpan （列跨距）为 3，这样就能充满
Dialogue: 0,0:05:22.32,0:05:26.52,Default,,0,0,0,,全部列，就好像内容的宽度自适应了一样
Dialogue: 0,0:05:27.32,0:05:29.44,Default,,0,0,0,,这就是我们得到的效果
Dialogue: 0,0:05:29.45,0:05:32.84,Default,,0,0,0,,无论何时，当我们缩放这个界面的时候
Dialogue: 0,0:05:32.85,0:05:36.38,Default,,0,0,0,,现在我们来说说这个 StackPanel，
Dialogue: 0,0:05:36.39,0:05:38.01,Default,,0,0,0,,这是"First" StackPanel，
Dialogue: 0,0:05:38.02,0:05:40.88,Default,,0,0,0,,并且跨越了 3 列
Dialogue: 0,0:05:40.89,0:05:42.48,Default,,0,0,0,,这里是 "Second" StackPanel，
Dialogue: 0,0:05:42.49,0:05:43.71,Default,,0,0,0,,同样的跨越了 3 列
Dialogue: 0,0:05:43.72,0:05:45.84,Default,,0,0,0,,还有 "Third" StackPanel， 也是跨越了 3 列
Dialogue: 0,0:05:45.85,0:05:47.74,Default,,0,0,0,,Ok！希望你已经有了一些关于
Dialogue: 0,0:05:47.75,0:05:51.54,Default,,0,0,0,,界面布局的改变
Dialogue: 0,0:05:51.55,0:05:54.41,Default,,0,0,0,,基于屏幕尺寸的触发自适应界面
Dialogue: 0,0:05:54.42,0:05:57.28,Default,,0,0,0,,再次强调
Dialogue: 0,0:05:57.29,0:05:59.64,Default,,0,0,0,,我不知道有任何一本指导书
Dialogue: 0,0:05:59.65,0:06:02.61,Default,,0,0,0,,告诉你在应用中你应该怎么做
Dialogue: 0,0:06:02.62,0:06:07.11,Default,,0,0,0,,对于不同的 AdaptiveTrigger
Dialogue: 0,0:06:07.12,0:06:10.68,Default,,0,0,0,,这只取决于你和你特定的应用场景
Dialogue: 0,0:06:10.69,0:06:14.01,Default,,0,0,0,,你能做的就是看看那些已有的应用
Dialogue: 0,0:06:14.02,0:06:17.54,Default,,0,0,0,,比如在 Windows 10 中，桌面版本和手机版本共有的应用
Dialogue: 0,0:06:17.55,0:06:22.54,Default,,0,0,0,,所以，如果你看看这个桌面版本的新闻应用
Dialogue: 0,0:06:22.56,0:06:24.71,Default,,0,0,0,,我们有汉堡导航菜单
Dialogue: 0,0:06:24.72,0:06:26.71,Default,,0,0,0,,在顶部有搜索框
Dialogue: 0,0:06:26.72,0:06:31.71,Default,,0,0,0,,在顶部栏还有一个小的编辑按钮
Dialogue: 0,0:06:32.39,0:06:36.21,Default,,0,0,0,,这里点击后还可以展开一些东西
Dialogue: 0,0:06:36.22,0:06:37.91,Default,,0,0,0,,所以你应该大概知道怎么做了把？
Dialogue: 0,0:06:37.92,0:06:43.01,Default,,0,0,0,,然后让我们看看这个应用的手机版本
Dialogue: 0,0:06:43.02,0:06:47.31,Default,,0,0,0,,好的，一样的新闻内容，一样的汉堡导航菜单
Dialogue: 0,0:06:48.05,0:06:49.51,Default,,0,0,0,,你会发现有一些图标
Dialogue: 0,0:06:49.52,0:06:51.04,Default,,0,0,0,,可能会有一点不同
Dialogue: 0,0:06:51.05,0:06:53.84,Default,,0,0,0,,还有编辑按钮
Dialogue: 0,0:06:53.85,0:06:56.64,Default,,0,0,0,,在底部而不是顶部
Dialogue: 0,0:06:56.65,0:06:58.93,Default,,0,0,0,,所以我们可以容纳它们
Dialogue: 0,0:06:58.94,0:07:00.61,Default,,0,0,0,,基于我们所学到的
Dialogue: 0,0:07:00.62,0:07:04.44,Default,,0,0,0,,Ok！这个列表应该是放在一个 List 中
Dialogue: 0,0:07:04.45,0:07:07.24,Default,,0,0,0,,在一个垂直的 List 中
Dialogue: 0,0:07:07.25,0:07:10.18,Default,,0,0,0,,与之相对的
Dialogue: 0,0:07:10.19,0:07:11.68,Default,,0,0,0,,我猜这也是一个垂直的 List
Dialogue: 0,0:07:11.68,0:07:13.48,Default,,0,0,0,,只是它跨越了很多列
Dialogue: 0,0:07:13.49,0:07:20.81,Default,,0,0,0,,所以，现在你应该知道自适应界面是如何在 Windows 已有的一些应用中使用的了 
Dialogue: 0,0:07:20.82,0:07:22.91,Default,,0,0,0,,我猜这个故事的寓意就是
Dialogue: 0,0:07:22.92,0:07:29.29,Default,,0,0,0,,你的工具可以使应用的界面变化
Dialogue: 0,0:07:29.29,0:07:32.94,Default,,0,0,0,,但对于你的应用来说
Dialogue: 0,0:07:32.95,0:07:35.54,Default,,0,0,0,,你可以决定设定触发界面调整的阈值
Dialogue: 0,0:07:35.55,0:07:38.71,Default,,0,0,0,,你需要决定界面布局改变何时发生
Dialogue: 0,0:07:38.72,0:07:40.66,Default,,0,0,0,,全部取决于你
Dialogue: 0,0:07:40.67,0:07:42.71,Default,,0,0,0,,也许这正是你所需要的
Dialogue: 0,0:07:42.72,0:07:44.21,Default,,0,0,0,,对于你的特别的应用来说
Dialogue: 0,0:07:44.22,0:07:46.64,Default,,0,0,0,,很明显你可以从刚刚那个新闻应用得到一些提示
Dialogue: 0,0:07:46.65,0:07:49.61,Default,,0,0,0,,或者其他 Windows 中的内置应用
Dialogue: 0,0:07:49.62,0:07:52.41,Default,,0,0,0,,但除此之外，并没有很多提示
Dialogue: 0,0:07:52.42,0:07:54.81,Default,,0,0,0,,所以你需要小心选择，你需要测试
Dialogue: 0,0:07:55.63,0:07:58.48,Default,,0,0,0,,还有考虑清楚你想要什么效果
Dialogue: 0,0:07:58.49,0:08:01.54,Default,,0,0,0,,如果我正拿着手机，或者我用鼠标点击
Dialogue: 0,0:08:01.55,0:08:05.34,Default,,0,0,0,,或者我正坐着，依靠在我的沙发上（好文艺）
Dialogue: 0,0:08:05.35,0:08:08.18,Default,,0,0,0,,滚动浏览，用应用工作等
Dialogue: 0,0:08:08.19,0:08:11.64,Default,,0,0,0,,我想要什么样的用户界面
Dialogue: 0,0:08:11.65,0:08:13.44,Default,,0,0,0,,基于上面这些布局
Dialogue: 0,0:08:13.45,0:08:16.18,Default,,0,0,0,,Ok！这就是我对于自适应界面的一些理解
Dialogue: 0,0:08:16.19,0:08:17.21,Default,,0,0,0,,然后我们会增加一些新的东西
Dialogue: 0,0:08:17.22,0:08:19.38,Default,,0,0,0,,到我们即将开始创建的应用中
Dialogue: 0,0:08:19.39,0:08:19.98,Default,,0,0,0,,好的
Dialogue: 0,0:08:19.99,0:08:21.71,Default,,0,0,0,,让我们继续吧
Dialogue: 0,0:08:21.72,0:08:23.21,Default,,0,0,0,,接下来，我们会继续探讨几个概念
Dialogue: 0,0:08:23.22,0:08:29.59,Default,,0,0,0,,在此之后，我们会讨论一些没有那么多教育意义
Dialogue: 0,0:08:29.59,0:08:32.21,Default,,0,0,0,,而是面向实践的内容， 让我们做一些实际的应用
Dialogue: 0,0:08:32.22,0:08:33.98,Default,,0,0,0,,这部分内容将会在这个系列的下半部分涉及
Dialogue: 0,0:08:33.98,0:08:36.34,Default,,0,0,0,,保持激情，你可以做得很好！
Dialogue: 0,0:08:36.35,0:08:38.99,Default,,0,0,0,,下节课见！谢谢
