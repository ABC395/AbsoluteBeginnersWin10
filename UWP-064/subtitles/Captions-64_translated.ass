[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None

[Aegisub Project Garbage]
Scroll Position: 426

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:05.35,0:00:06.64,Default,,0,0,0,,<v ->好的，那我们开始吧！</v>
Dialogue: 0,0:00:06.64,0:00:08.73,Default,,0,0,0,,你知道我喜欢在开始的时候
Dialogue: 0,0:00:08.73,0:00:11.38,Default,,0,0,0,,解决应用最困难的部分。比如在这个应用中，
Dialogue: 0,0:00:11.38,0:00:16.38,Default,,0,0,0,,从用户的硬盘和设备上
Dialogue: 0,0:00:16.70,0:00:20.20,Default,,0,0,0,,检索他们的用户文件将会是最困难的部分。
Dialogue: 0,0:00:20.20,0:00:23.31,Default,,0,0,0,,除此之外，从他们的曲库中检索音乐
Dialogue: 0,0:00:23.31,0:00:26.69,Default,,0,0,0,,并随机寻找歌曲，比如 10 首随机歌曲
Dialogue: 0,0:00:26.69,0:00:31.69,Default,,0,0,0,,以及他们的相关元数据，如关联的专辑封面
Dialogue: 0,0:00:31.82,0:00:36.03,Default,,0,0,0,,当量达到一定程度的时候，
Dialogue: 0,0:00:36.03,0:00:38.65,Default,,0,0,0,,也是很困难的部分，
Dialogue: 0,0:00:38.65,0:00:41.03,Default,,0,0,0,,我猜你对这个部分也很疑惑，
Dialogue: 0,0:00:41.03,0:00:44.01,Default,,0,0,0,,所以我决定先针对这个部分来讲。
Dialogue: 0,0:00:44.01,0:00:45.77,Default,,0,0,0,,那么在这个项目里，我们将要从
Dialogue: 0,0:00:45.77,0:00:47.99,Default,,0,0,0,,创建一个新项目开始，
Dialogue: 0,0:00:48.00,0:00:51.95,Default,,0,0,0,,我们这回不从交互界面开始下手，
Dialogue: 0,0:00:51.95,0:00:54.87,Default,,0,0,0,,我就先象征性的做一些界面，
Dialogue: 0,0:00:54.87,0:00:57.75,Default,,0,0,0,,以满足实现搜索功能的需要。
Dialogue: 0,0:00:57.75,0:01:00.49,Default,,0,0,0,,我们要从曲库中提取出所有歌曲，
Dialogue: 0,0:01:00.50,0:01:04.64,Default,,0,0,0,,确保我能存取他们，
Dialogue: 0,0:01:04.65,0:01:07.94,Default,,0,0,0,,随意生成 10 首歌，以及相关联的专辑
Dialogue: 0,0:01:07.94,0:01:11.39,Default,,0,0,0,,接着确保能存取相关的
Dialogue: 0,0:01:11.39,0:01:13.86,Default,,0,0,0,,歌曲的元数据。
Dialogue: 0,0:01:13.86,0:01:16.21,Default,,0,0,0,,那我们开始吧 =w=
Dialogue: 0,0:01:16.21,0:01:19.81,Default,,0,0,0,,我要把摄像头关掉，新建一个项目
Dialogue: 0,0:01:19.81,0:01:24.09,Default,,0,0,0,,一定要确保我新建的是
Dialogue: 0,0:01:24.09,0:01:27.35,Default,,0,0,0,,空白通用应用应用（Blank App，Universal Windows App）
Dialogue: 0,0:01:27.35,0:01:32.35,Default,,0,0,0,,专辑封面配对游戏……（AlbumCoverMatchGame）
Dialogue: 0,0:01:38.98,0:01:43.98,Default,,0,0,0,,好的搞定 OvO
Dialogue: 0,0:01:44.88,0:01:47.13,Default,,0,0,0,,关掉帧计数器……
Dialogue: 0,0:01:47.13,0:01:49.42,Default,,0,0,0,,打开 MainPage.xaml ，
Dialogue: 0,0:01:49.42,0:01:52.26,Default,,0,0,0,,做一点微小的工作：
Dialogue: 0,0:01:52.26,0:01:54.83,Default,,0,0,0,,在这里加一个按钮控件 （Button Control）
Dialogue: 0,0:01:54.83,0:01:57.57,Default,,0,0,0,,等下我会把这个删掉，但现在请允许我把它做成这样，
Dialogue: 0,0:01:57.57,0:02:02.57,Default,,0,0,0,,整个过程只需要点击这个 “点击我”（Click Me） 按钮
Dialogue: 0,0:02:05.07,0:02:09.59,Default,,0,0,0,,再次声明，我之所以这样做，
Dialogue: 0,0:02:09.59,0:02:13.79,Default,,0,0,0,,只是为了我能有办法执行这个动作，
Dialogue: 0,0:02:13.79,0:02:16.70,Default,,0,0,0,,等会儿再来纠结用户交互界面的事情 (╯‵□′)╯︵┻━┻
Dialogue: 0,0:02:16.70,0:02:19.76,Default,,0,0,0,,等下三件微小的工作需要在这里完成
Dialogue: 0,0:02:19.77,0:02:24.75,Default,,0,0,0,,首先呢，我需要能访问曲库，
Dialogue: 0,0:02:26.41,0:02:30.41,Default,,0,0,0,,接着呢
Dialogue: 0,0:02:30.41,0:02:35.41,Default,,0,0,0,,我想要随机选择歌曲
Dialogue: 0,0:02:36.26,0:02:38.64,Default,,0,0,0,,我猜第三件我想要做的事是
Dialogue: 0,0:02:38.64,0:02:43.64,Default,,0,0,0,,从随机选取的歌曲里，
Dialogue: 0,0:02:46.59,0:02:49.73,Default,,0,0,0,,获得我需要的元数据，要是我能在这个视频里搞定
Dialogue: 0,0:02:49.73,0:02:52.23,Default,,0,0,0,,我一定会好开心哒！
Dialogue: 0,0:02:52.24,0:02:54.09,Default,,0,0,0,,好的，所以我要把所有的东西
Dialogue: 0,0:02:54.09,0:02:56.75,Default,,0,0,0,,都放在这里，以后呢
Dialogue: 0,0:02:56.75,0:02:59.14,Default,,0,0,0,,我会开始把东西分到它们各自所属的方法（methods）里，
Dialogue: 0,0:02:59.14,0:03:02.24,Default,,0,0,0,,它们会各归其所，事情会渐渐明朗起来
Dialogue: 0,0:03:02.24,0:03:04.38,Default,,0,0,0,,任务会被分配到这个应用里
Dialogue: 0,0:03:04.38,0:03:08.94,Default,,0,0,0,,不同的方法（methods）里去，
Dialogue: 0,0:03:08.94,0:03:12.79,Default,,0,0,0,,连接曲库吼吼吼，
Dialogue: 0,0:03:12.79,0:03:17.46,Default,,0,0,0,,这里展示了我有大量的精选音乐
Dialogue: 0,0:03:17.46,0:03:20.04,Default,,0,0,0,,但我们不想要一股脑地把它们播出来，
Dialogue: 0,0:03:20.04,0:03:22.39,Default,,0,0,0,,所以呢我问了一个我的朋友，
Dialogue: 0,0:03:22.39,0:03:24.45,Default,,0,0,0,,其实我把他贴到人人上面去了（facebook 是个不存在的网站 雾）,
Dialogue: 0,0:03:24.45,0:03:27.80,Default,,0,0,0,,(｡･∀･)ﾉﾞ嗨，朋友们能帮帮忙嘛？我需要大概额 15 段
Dialogue: 0,0:03:27.80,0:03:29.75,Default,,0,0,0,,每段 20 秒？
Dialogue: 0,0:03:29.75,0:03:33.78,Default,,0,0,0,,我的朋友 Boyd，他刚刚漫不经心地弹奏了，
Dialogue: 0,0:03:33.79,0:03:38.32,Default,,0,0,0,,几次吉他，而我把那些文件赋值了几次
Dialogue: 0,0:03:38.32,0:03:43.32,Default,,0,0,0,,如你所见，
Dialogue: 0,0:03:43.96,0:03:47.00,Default,,0,0,0,,我将每首歌的元数据编辑了，
Dialogue: 0,0:03:47.00,0:03:49.92,Default,,0,0,0,,确保它有正确的专辑和艺术家标签，
Dialogue: 0,0:03:49.92,0:03:54.92,Default,,0,0,0,,接着我请了一位平面设计师
Dialogue: 0,0:03:56.12,0:03:59.67,Default,,0,0,0,,设计了一些专辑，充当这些专辑的封面
Dialogue: 0,0:03:59.67,0:04:03.04,Default,,0,0,0,,所以如果你去看这些专辑的特大图标的话 （Extra Large Icons）
Dialogue: 0,0:04:03.04,0:04:08.04,Default,,0,0,0,,你能看见部分他为我所创作的封面，
Dialogue: 0,0:04:08.47,0:04:13.47,Default,,0,0,0,,所以这些封面，
Dialogue: 0,0:04:14.33,0:04:17.62,Default,,0,0,0,,将会显示为所选的随机歌曲的封面
Dialogue: 0,0:04:17.62,0:04:19.59,Default,,0,0,0,,但是，我想要做的是 (｡･∀･)ﾉﾞ
Dialogue: 0,0:04:19.60,0:04:23.03,Default,,0,0,0,,将我音乐库里的所有文件夹迭代（iterate ）
Dialogue: 0,0:04:23.03,0:04:27.47,Default,,0,0,0,,并创建一个包含所有 mp3 文件的清单，
Dialogue: 0,0:04:27.47,0:04:32.11,Default,,0,0,0,,并把 png 图片文件排除在外
Dialogue: 0,0:04:32.11,0:04:36.18,Default,,0,0,0,,呐，是时候开始了
Dialogue: 0,0:04:36.18,0:04:39.27,Default,,0,0,0,,在这个过程中，我要访问一个
Dialogue: 0,0:04:42.07,0:04:44.03,Default,,0,0,0,,叫做已知文件夹（KnownFolders）
Dialogue: 0,0:04:44.70,0:04:47.84,Default,,0,0,0,,的东西
Dialogue: 0,0:04:47.84,0:04:52.08,Default,,0,0,0,,它在 Windows.Storage namespace 下
Dialogue: 0,0:04:52.08,0:04:57.08,Default,,0,0,0,,如你可见，我在这里添加了它，
Dialogue: 0,0:05:02.66,0:05:06.15,Default,,0,0,0,,Windows.Storage 我想要得到一个指定的已知文件夹，
Dialogue: 0,0:05:06.15,0:05:09.19,Default,,0,0,0,,我想要指向音乐库（MusicLibrary ），
Dialogue: 0,0:05:09.19,0:05:13.34,Default,,0,0,0,,这样我们就可以访问
Dialogue: 0,0:05:13.34,0:05:15.74,Default,,0,0,0,,在台设备以及每台 Windows 10 桌面上的
Dialogue: 0,0:05:15.74,0:05:19.68,Default,,0,0,0,,音乐库（Music Libary） ，我们得到了一个可供参考的位置，
Dialogue: 0,0:05:19.69,0:05:24.14,Default,,0,0,0,,当然我可以用 var folder equals 来做，
Dialogue: 0,0:05:24.14,0:05:27.34,Default,,0,0,0,,但这里它会返回一个类型（type）为
Dialogue: 0,0:05:27.34,0:05:30.48,Default,,0,0,0,,StorageFolder 的值，
Dialogue: 0,0:05:30.48,0:05:34.49,Default,,0,0,0,,这里很重要，要记住
Dialogue: 0,0:05:34.49,0:05:38.37,Default,,0,0,0,,StorageFolders 是一个类（classes） ，它给我们
Dialogue: 0,0:05:38.37,0:05:43.37,Default,,0,0,0,,有关文件夹的信息，StorageFile 将会是另一个类（classes）
Dialogue: 0,0:05:44.11,0:05:46.71,Default,,0,0,0,,给我们关于一个文件在文件系统里的信息，
Dialogue: 0,0:05:46.71,0:05:51.19,Default,,0,0,0,,这个部分接下来会讲 <(￣︶￣)↗
Dialogue: 0,0:05:51.19,0:05:55.57,Default,,0,0,0,,我现在要获取一个所有歌曲的清单，
Dialogue: 0,0:05:55.57,0:05:58.98,Default,,0,0,0,,包含了音乐库（Music Library）里所有子文件夹的歌曲，
Dialogue: 0,0:05:58.98,0:06:03.98,Default,,0,0,0,,所以我知道我需要一个集合，
Dialogue: 0,0:06:04.57,0:06:07.07,Default,,0,0,0,,这个集合将要是可更新的，
Dialogue: 0,0:06:07.08,0:06:09.14,Default,,0,0,0,,我要先从可见的部分开始：
Dialogue: 0,0:06:09.14,0:06:14.14,Default,,0,0,0,,所以我们 var allSongs equals
Dialogue: 0,0:06:15.94,0:06:20.44,Default,,0,0,0,,ObservableCollection<t>
Dialogue: 0,0:06:20.44,0:06:22.55,Default,,0,0,0,,我们要加入 System.Collections.ObjectModel
Dialogue: 0,0:06:22.56,0:06:27.24,Default,,0,0,0,,接着是我们要用来作为排序的 type，
Dialogue: 0,0:06:27.24,0:06:31.90,Default,,0,0,0,,StorageFiles，棒极了！
Dialogue: 0,0:06:34.95,0:06:39.08,Default,,0,0,0,,新建一个关于 StorageFile 的 ObservableCollection
Dialogue: 0,0:06:39.08,0:06:41.73,Default,,0,0,0,,好~ b（￣▽￣）d　
Dialogue: 0,0:06:41.73,0:06:45.67,Default,,0,0,0,,现在我们要获取文件夹里所有的文件
Dialogue: 0,0:06:45.67,0:06:48.63,Default,,0,0,0,,我们在这里看到了一个机会 <(￣︶￣)↗
Dialogue: 0,0:06:48.63,0:06:51.92,Default,,0,0,0,,或许可以这样来解决：
Dialogue: 0,0:06:51.92,0:06:54.45,Default,,0,0,0,,我们可以用一个递归方法（recursive method），
Dialogue: 0,0:06:54.45,0:06:58.84,Default,,0,0,0,,递归会反复调用本身，直到遍历完所有
Dialogue: 0,0:06:58.84,0:07:02.98,Default,,0,0,0,,文件夹和子文件夹1，2，3，4，......
Dialogue: 0,0:07:02.98,0:07:06.07,Default,,0,0,0,,并将所有内容提取出来。
Dialogue: 0,0:07:10.23,0:07:12.33,Default,,0,0,0,,新建一个私有的（private）…
Dialogue: 0,0:07:15.45,0:07:20.13,Default,,0,0,0,,private void retrieveFilesInFolders 之类的东西
Dialogue: 0,0:07:20.13,0:07:23.34,Default,,0,0,0,,我要把
Dialogue: 0,0:07:23.34,0:07:28.34,Default,,0,0,0,,StorageFile 的 ObservableCollection 传递进去
Dialogue: 0,0:07:32.43,0:07:35.36,Default,,0,0,0,,(⊙﹏⊙) 我打错地方了……
Dialogue: 0,0:07:35.36,0:07:38.92,Default,,0,0,0,,我们就这么叫它吧……
Dialogue: 0,0:07:38.92,0:07:42.49,Default,,0,0,0,,接着我也要传递一个
Dialogue: 0,0:07:42.49,0:07:46.55,Default,,0,0,0,,Parent 的 StorageFolder
Dialogue: 0,0:07:46.56,0:07:50.80,Default,,0,0,0,,这将是最顶层级的存储文件夹，
Dialogue: 0,0:07:50.80,0:07:55.80,Default,,0,0,0,,这里它会是 KnownFolder.MusicLibrary 好的~
Dialogue: 0,0:07:57.19,0:08:02.19,Default,,0,0,0,,这里我要做一个 foreach
Dialogue: 0,0:08:04.61,0:08:09.61,Default,,0,0,0,,那么每个项遍历 parent.GetFilesAsync()，
Dialogue: 0,0:08:14.72,0:08:18.09,Default,,0,0,0,,这将会给我们父文件夹里的所有文件
Dialogue: 0,0:08:18.09,0:08:22.50,Default,,0,0,0,,第一次传递进的的值将会是
Dialogue: 0,0:08:22.50,0:08:26.82,Default,,0,0,0,,我们刚刚看见的 Music Library folder，
Dialogue: 0,0:08:26.82,0:08:31.81,Default,,0,0,0,,就刚刚还在桌面上的，
Dialogue: 0,0:08:31.81,0:08:36.81,Default,,0,0,0,,接着我们将会传递进子文件夹，
Dialogue: 0,0:08:37.17,0:08:39.96,Default,,0,0,0,,并递归调用读取所有的文件夹和文件，
Dialogue: 0,0:08:39.96,0:08:42.72,Default,,0,0,0,,现在我们看见一条红色的曲线，为什么呢？
Dialogue: 0,0:08:42.72,0:08:46.90,Default,,0,0,0,,啊，这是因为它是一个异步操作，
Dialogue: 0,0:08:46.90,0:08:50.01,Default,,0,0,0,,还记得关于异步操作的原则吗？
Dialogue: 0,0:08:50.01,0:08:52.78,Default,,0,0,0,,我们可以等待他们的完成，
Dialogue: 0,0:08:52.78,0:08:55.50,Default,,0,0,0,,我们需要用一个异步的关键字来修饰（adorn）
Dialogue: 0,0:08:55.50,0:08:58.42,Default,,0,0,0,,我们所期待的，是一个
Dialogue: 0,0:08:58.42,0:09:02.86,Default,,0,0,0,,承诺，
Dialogue: 0,0:09:04.62,0:09:07.39,Default,,0,0,0,,简单的来说是一个保证当它完成的时候，
Dialogue: 0,0:09:07.39,0:09:10.40,Default,,0,0,0,,他会继续，所以我们不会给它一个任务（Task）<T>,
Dialogue: 0,0:09:10.41,0:09:13.52,Default,,0,0,0,,它会继续规律的老任务，但它会用
Dialogue: 0,0:09:13.52,0:09:17.97,Default,,0,0,0,,用 System.Threading.Tasks namespace 添加。
Dialogue: 0,0:09:18.71,0:09:21.95,Default,,0,0,0,,好的，现在我们需要做的是
Dialogue: 0,0:09:21.95,0:09:25.75,Default,,0,0,0,,阅览当前文件夹里所有的文件，
Dialogue: 0,0:09:25.75,0:09:30.75,Default,,0,0,0,,如果它是一个 mp3 文件
Dialogue: 0,0:09:33.53,0:09:37.17,Default,,0,0,0,,我们将要把它添加进来，
Dialogue: 0,0:09:37.17,0:09:42.17,Default,,0,0,0,,list.Add(item) 到 StorageFiles 的 ObservableCollection
Dialogue: 0,0:09:43.32,0:09:48.32,Default,,0,0,0,,再次强调，我们这里是要生成一个列表，
Dialogue: 0,0:09:48.33,0:09:52.94,Default,,0,0,0,,包含音乐库里所有子文件夹里的所有 mp3 文件。
Dialogue: 0,0:09:52.94,0:09:56.50,Default,,0,0,0,,下一件要做的事是：
Dialogue: 0,0:09:56.50,0:10:00.43,Default,,0,0,0,,我们不仅想要所有的文件，
Dialogue: 0,0:10:00.43,0:10:05.00,Default,,0,0,0,,我们还要看所有的父文件夹里的所有子文件夹！
Dialogue: 0,0:10:05.00,0:10:10.00,Default,,0,0,0,,在每个子文件夹里，我们将要调用 GetFoldersAsync
Dialogue: 0,0:10:14.03,0:10:19.03,Default,,0,0,0,,相似的，它也是可以等待的，
Dialogue: 0,0:10:19.41,0:10:23.54,Default,,0,0,0,,我们将要添加一个代表那个子文件夹的项，
Dialogue: 0,0:10:23.55,0:10:28.02,Default,,0,0,0,,调用我们所在的每一个方法（method），
Dialogue: 0,0:10:28.02,0:10:33.02,Default,,0,0,0,,RetrieveFilesInFolders 并传递到
Dialogue: 0,0:10:33.53,0:10:37.97,Default,,0,0,0,,StorageFile 的 ObservableCollection
Dialogue: 0,0:10:37.97,0:10:40.96,Default,,0,0,0,,将现有的父文件夹传递进去，此时他是一个项。
Dialogue: 0,0:10:42.59,0:10:44.79,Default,,0,0,0,,那为什么我们看见了一条绿色曲线呢？
Dialogue: 0,0:10:44.79,0:10:49.06,Default,,0,0,0,,因为它是可等待的（awaitable）所以这应该可以解决，
Dialogue: 0,0:10:49.06,0:10:50.85,Default,,0,0,0,,好的，大致搞定了，
Dialogue: 0,0:10:50.85,0:10:53.48,Default,,0,0,0,,再加几行，递归的方法就可以
Dialogue: 0,0:10:53.48,0:10:58.48,Default,,0,0,0,,遍历音乐库里所有的文件夹了，
Dialogue: 0,0:10:59.40,0:11:04.27,Default,,0,0,0,,以及所有的子文件夹们，
Dialogue: 0,0:11:04.27,0:11:07.33,Default,,0,0,0,,直到我们无法找到未遍历的子文件夹。
Dialogue: 0,0:11:07.33,0:11:11.19,Default,,0,0,0,,我们将要生成一个包含所有 mp3 文件的列表
Dialogue: 0,0:11:11.19,0:11:15.28,Default,,0,0,0,,将它们添加到 StorageFiles 的 ObservableCollection
Dialogue: 0,0:11:15.28,0:11:17.66,Default,,0,0,0,,所以每首歌曲都会在我们的集合里面。
Dialogue: 0,0:11:17.67,0:11:21.15,Default,,0,0,0,,嗯，到目前为止一切都好，
Dialogue: 0,0:11:21.15,0:11:23.42,Default,,0,0,0,,现在我们有了一个包含所有歌曲的集合，
Dialogue: 0,0:11:23.43,0:11:26.17,Default,,0,0,0,,我们需要调用它，
Dialogue: 0,0:11:26.17,0:11:31.17,Default,,0,0,0,,这也是可等待的（awaitable），对吧？
Dialogue: 0,0:11:31.20,0:11:36.20,Default,,0,0,0,,因为获取文件以及文件夹的操作是异步的（Async）
Dialogue: 0,0:11:41.16,0:11:45.76,Default,,0,0,0,,我们将要把所有歌曲传递进去，
Dialogue: 0,0:11:45.76,0:11:49.84,Default,,0,0,0,,传递进父文件夹，
Dialogue: 0,0:11:51.76,0:11:53.65,Default,,0,0,0,,额 (⊙﹏⊙) 现在我们看见一条红色曲线的原因是
Dialogue: 0,0:11:53.65,0:11:55.82,Default,,0,0,0,,我们用了一个 await 关键字，
Dialogue: 0,0:11:55.82,0:11:59.11,Default,,0,0,0,,那我们需要添加什么呢……
Dialogue: 0,0:12:00.32,0:12:05.32,Default,,0,0,0,,啊，异步（async）！
Dialogue: 0,0:12:05.85,0:12:10.05,Default,,0,0,0,,下一步……
Dialogue: 0,0:12:10.05,0:12:14.46,Default,,0,0,0,,我们需要在库里随机选取音乐，
Dialogue: 0,0:12:16.07,0:12:20.16,Default,,0,0,0,,让我们想想应该怎么做，新建另一个
Dialogue: 0,0:12:20.16,0:12:25.16,Default,,0,0,0,,私有的 helper method，
Dialogue: 0,0:12:25.36,0:12:28.15,Default,,0,0,0,,它不仅仅只在那一个方法里存在，
Dialogue: 0,0:12:28.15,0:12:33.15,Default,,0,0,0,,private void pick random songs
Dialogue: 0,0:12:34.38,0:12:37.20,Default,,0,0,0,,我期待从这个返回的值并不是 void
Dialogue: 0,0:12:37.20,0:12:41.40,Default,,0,0,0,,而是 StorageFile 的一个列表
Dialogue: 0,0:12:44.79,0:12:48.06,Default,,0,0,0,,好的那是我们在这里的目标，
Dialogue: 0,0:12:48.06,0:12:53.06,Default,,0,0,0,,我们要把 StorageFile 的 ObservableCollection 传递进来
Dialogue: 0,0:12:53.71,0:12:58.71,Default,,0,0,0,,叫做 allFiles 或者 allSongs
Dialogue: 0,0:13:01.98,0:13:03.57,Default,,0,0,0,,我们看见了一条红曲线
Dialogue: 0,0:13:03.57,0:13:05.21,Default,,0,0,0,,因为我们还没有返回任何值
Dialogue: 0,0:13:05.21,0:13:08.33,Default,,0,0,0,,很快我们就能搞定。
Dialogue: 0,0:13:08.33,0:13:11.79,Default,,0,0,0,,我们说到要随机选择列表，
Dialogue: 0,0:13:11.79,0:13:15.14,Default,,0,0,0,,这意味着我们需要使用 random object
Dialogue: 0,0:13:15.14,0:13:20.14,Default,,0,0,0,,那么 Random random equals new random
Dialogue: 0,0:13:22.11,0:13:26.50,Default,,0,0,0,,我要确保我找到的歌曲是随机的，
Dialogue: 0,0:13:26.50,0:13:31.50,Default,,0,0,0,,但我要确保两件事情不会发生，
Dialogue: 0,0:13:33.33,0:13:34.42,Default,,0,0,0,,第一是保证
Dialogue: 0,0:13:34.42,0:13:39.42,Default,,0,0,0,,我不会两次随机到同一首歌曲
Dialogue: 0,0:13:39.47,0:13:44.38,Default,,0,0,0,,其次我要保证
Dialogue: 0,0:13:44.38,0:13:49.38,Default,,0,0,0,,我不会从一张我已经选择过的专辑里
Dialogue: 0,0:13:51.81,0:13:55.39,Default,,0,0,0,,再选一首歌曲。
Dialogue: 0,0:13:55.39,0:13:56.68,Default,,0,0,0,,不要再选择过的专辑里
Dialogue: 0,0:13:56.68,0:13:57.59,Default,,0,0,0,,再选一次歌曲。
Dialogue: 0,0:13:57.59,0:13:59.70,Default,,0,0,0,,呐，这很有道理，
Dialogue: 0,0:13:59.70,0:14:01.53,Default,,0,0,0,,我不想要从同一个专辑里选择两首歌，因为
Dialogue: 0,0:14:01.53,0:14:04.58,Default,,0,0,0,,我向用户展示的每一个图标都应该是不同的专辑封面。
Dialogue: 0,0:14:04.58,0:14:07.09,Default,,0,0,0,,额，这反生产力啊……
Dialogue: 0,0:14:07.09,0:14:09.94,Default,,0,0,0,,如果我为了这个而去做那个的话，我将要
Dialogue: 0,0:14:09.94,0:14:14.60,Default,,0,0,0,,创建一个while 循环并继续
Dialogue: 0,0:14:14.61,0:14:17.93,Default,,0,0,0,,直到一个条件被满足，循环才终止。
Dialogue: 0,0:14:17.93,0:14:22.90,Default,,0,0,0,,直到我收集到了正确数量的歌曲……
Dialogue: 0,0:14:22.90,0:14:27.90,Default,,0,0,0,,到这个随机歌曲的单子里，
Dialogue: 0,0:14:27.94,0:14:31.49,Default,,0,0,0,,这里让我新建一个叫 random songs 的变量，
Dialogue: 0,0:14:31.49,0:14:35.93,Default,,0,0,0,,这是我的目的所在，然后我要
Dialogue: 0,0:14:35.93,0:14:39.66,Default,,0,0,0,,在这个私有的 helper method 末端返回
Dialogue: 0,0:14:39.66,0:14:44.66,Default,,0,0,0,,新建一个 StorageFile 的列表，
Dialogue: 0,0:14:45.52,0:14:50.52,Default,,0,0,0,,那么在这个末尾，它就会返回一个值啦。 =w=
Dialogue: 0,0:14:50.92,0:14:55.92,Default,,0,0,0,,棒极了，
Dialogue: 0,0:14:58.52,0:15:02.44,Default,,0,0,0,,刚刚我说我需要 10 首歌
Dialogue: 0,0:15:02.44,0:15:07.20,Default,,0,0,0,,那么我需要在歌曲数目达到 10 的时候停止，
Dialogue: 0,0:15:07.20,0:15:09.25,Default,,0,0,0,,从 while 循环中退出。
Dialogue: 0,0:15:09.25,0:15:11.68,Default,,0,0,0,,这个循环将会持续到我们获得了足够数量的，
Dialogue: 0,0:15:11.68,0:15:15.52,Default,,0,0,0,,且满足我们要求的歌曲的时候。
Dialogue: 0,0:15:15.52,0:15:19.16,Default,,0,0,0,,第一件事，生成一个随机数，
Dialogue: 0,0:15:25.61,0:15:30.61,Default,,0,0,0,,randomNumber equals
Dialogue: 0,0:15:31.78,0:15:33.31,Default,,0,0,0,,Random.Next()
Dialogue: 0,0:15:39.45,0:15:42.09,Default,,0,0,0,,接着我需要给它一个
Dialogue: 0,0:15:42.10,0:15:45.88,Default,,0,0,0,,最大值
Dialogue: 0,0:15:47.50,0:15:49.32,Default,,0,0,0,,这是我所能接受的，
Dialogue: 0,0:15:49.32,0:15:54.32,Default,,0,0,0,,所以我需要获得歌曲数目的最大数
Dialogue: 0,0:15:54.71,0:15:59.36,Default,,0,0,0,,或者一个 count 函数，
Dialogue: 0,0:15:59.37,0:16:03.41,Default,,0,0,0,,so songCount = allSongs.Count
Dialogue: 0,0:16:03.41,0:16:06.54,Default,,0,0,0,,这将返回一个歌曲数目的最大值，
Dialogue: 0,0:16:06.54,0:16:10.67,Default,,0,0,0,,所以我刚刚说的是：给我一个随机数，
Dialogue: 0,0:16:10.67,0:16:15.60,Default,,0,0,0,,这个随机数应该落在 0 与歌曲数量之间。
Dialogue: 0,0:16:17.40,0:16:20.16,Default,,0,0,0,,好的，那么我们继续
Dialogue: 0,0:16:20.17,0:16:24.48,Default,,0,0,0,,随机获取一首歌，
Dialogue: 0,0:16:24.49,0:16:29.49,Default,,0,0,0,,allSongs sub random number， 好的，
Dialogue: 0,0:16:34.72,0:16:37.76,Default,,0,0,0,,这样就可以了，
Dialogue: 0,0:16:37.76,0:16:42.76,Default,,0,0,0,,randomSongs.Add
Dialogue: 0,0:16:44.45,0:16:47.33,Default,,0,0,0,,随机生成一首歌，额等下……
Dialogue: 0,0:16:47.33,0:16:50.27,Default,,0,0,0,,我们还不能直接这么做，我们需要检查一下，
Dialogue: 0,0:16:50.27,0:16:55.27,Default,,0,0,0,,我们要在这里…
Dialogue: 0,0:16:57.87,0:16:59.77,Default,,0,0,0,,所以我们确保这些值不为真，接着才可以进行，
Dialogue: 0,0:16:59.77,0:17:03.21,Default,,0,0,0,,首先呢，
Dialogue: 0,0:17:03.21,0:17:05.71,Default,,0,0,0,,我要提取这首歌的属性，
Dialogue: 0,0:17:05.71,0:17:08.32,Default,,0,0,0,,所以我可以知道这首 mp3
Dialogue: 0,0:17:08.32,0:17:13.21,Default,,0,0,0,,属于哪一张专辑，
Dialogue: 0,0:17:13.21,0:17:18.21,Default,,0,0,0,,所以我需要这么写， randomSong.Properties.GetMusicPropertiesAsync()
Dialogue: 0,0:17:21.79,0:17:25.62,Default,,0,0,0,,randomSong.Properties.GetMusicPropertiesAsync() ... 你看清楚了吗？<(￣︶￣)↗
Dialogue: 0,0:17:25.62,0:17:30.62,Default,,0,0,0,,依靠 StorageFile 我们可以取得
Dialogue: 0,0:17:32.82,0:17:37.82,Default,,0,0,0,,我们所需的特定元数据，
Dialogue: 0,0:17:38.05,0:17:40.51,Default,,0,0,0,,这也取决于文件类型，
Dialogue: 0,0:17:40.51,0:17:42.62,Default,,0,0,0,,现在我们知道我们在处理音乐文件，
Dialogue: 0,0:17:42.62,0:17:47.62,Default,,0,0,0,,所以我们要调用 GetMusicPropertiesAsync()
Dialogue: 0,0:17:48.09,0:17:50.81,Default,,0,0,0,,看起来我们不需要给它任何输入，
Dialogue: 0,0:17:50.81,0:17:55.81,Default,,0,0,0,,我们会获得一个叫做 MusicProperties 的返回
Dialogue: 0,0:18:00.46,0:18:05.46,Default,,0,0,0,,go MusicProperties randomSongMusicProperties =
Dialogue: 0,0:18:08.97,0:18:11.71,Default,,0,0,0,,因为这事可等待的，所以我们要加入
Dialogue: 0,0:18:11.71,0:18:15.31,Default,,0,0,0,,equals await
Dialogue: 0,0:18:15.31,0:18:19.30,Default,,0,0,0,,randomsong.Properties.GetMusicPropertiesAsync
Dialogue: 0,0:18:19.30,0:18:23.46,Default,,0,0,0,,不幸的是我们需要添加
Dialogue: 0,0:18:23.46,0:18:27.93,Default,,0,0,0,,Windows.Storage.FileProperties 的数据类型，
Dialogue: 0,0:18:27.93,0:18:31.80,Default,,0,0,0,,我想我们在这里有一个可等待的情况，
Dialogue: 0,0:18:33.27,0:18:37.55,Default,,0,0,0,,所以我们用异步处理它，接着我们需要一个保证
Dialogue: 0,0:18:37.55,0:18:42.43,Default,,0,0,0,,当它完成的时候返回一个 StorageFile 列表的任务
Dialogue: 0,0:18:42.43,0:18:46.26,Default,,0,0,0,,看我刚刚是如何处理 t 的，在这里
Dialogue: 0,0:18:46.26,0:18:50.26,Default,,0,0,0,,t 是一个 StorageFile，好， 它是一个混乱的网状结构，
Dialogue: 0,0:18:50.26,0:18:53.64,Default,,0,0,0,,但它是合情合理的，所以我们继续。
Dialogue: 0,0:18:53.64,0:18:55.19,Default,,0,0,0,,所以现在我们有了随机歌曲的 MusicProperties
Dialogue: 0,0:18:55.19,0:19:00.05,Default,,0,0,0,,我们将要一路搜寻下去，
Dialogue: 0,0:19:00.05,0:19:04.80,Default,,0,0,0,,保证我们 randomSongs 列表里的每一首歌，
Dialogue: 0,0:19:04.80,0:19:08.03,Default,,0,0,0,,我们刚刚添加的每一首歌，
Dialogue: 0,0:19:08.04,0:19:12.73,Default,,0,0,0,,都被搜索过，
Dialogue: 0,0:19:12.73,0:19:17.73,Default,,0,0,0,,我们要比较我们现有的每一首歌的专辑，
Dialogue: 0,0:19:18.74,0:19:23.74,Default,,0,0,0,,并于新一首歌的专辑名称比较
Dialogue: 0,0:19:25.03,0:19:27.61,Default,,0,0,0,,是的，与刚刚添加到 randomSongs 里面的歌曲比较，
Dialogue: 0,0:19:27.61,0:19:29.72,Default,,0,0,0,,那么……
Dialogue: 0,0:19:29.72,0:19:34.72,Default,,0,0,0,,SongMusicProperties = song.Properties.GetMusicPropertiesAsync()
Dialogue: 0,0:19:45.45,0:19:47.28,Default,,0,0,0,,这也是可等待的，
Dialogue: 0,0:19:48.88,0:19:53.22,Default,,0,0,0,,现在我们要来作比较啦 (｡･∀･)ﾉﾞ
Dialogue: 0,0:19:53.23,0:19:58.23,Default,,0,0,0,,字符串是 null 或者 空（empty） ……SongMusicProperties.album
Dialogue: 0,0:20:05.92,0:20:09.00,Default,,0,0,0,,其实这不是我们需要检查的，
Dialogue: 0,0:20:09.00,0:20:12.74,Default,,0,0,0,,其实我要 do random，
Dialogue: 0,0:20:12.74,0:20:14.58,Default,,0,0,0,,额是 "random" 不是 "ransom",
Dialogue: 0,0:20:14.58,0:20:17.32,Default,,0,0,0,,肌肉记忆正在折腾我……
Dialogue: 0,0:20:17.32,0:20:22.32,Default,,0,0,0,,好啦，如果新歌的专辑是
Dialogue: 0,0:20:24.37,0:20:27.00,Default,,0,0,0,,IsNullOrEmpty()，那么我们不想要，
Dialogue: 0,0:20:27.00,0:20:30.43,Default,,0,0,0,,因为这会毁了我们整个计划，
Dialogue: 0,0:20:33.12,0:20:36.61,Default,,0,0,0,,所以这就是我们需要做的检查
Dialogue: 0,0:20:36.61,0:20:41.61,Default,,0,0,0,,如果 RandomSongMusicProperties.Album 等于
Dialogue: 0,0:20:42.81,0:20:47.81,Default,,0,0,0,,SongMusicProperties.Album ，两种情况
Dialogue: 0,0:20:48.71,0:20:53.71,Default,,0,0,0,,我们要把它标记为重复，
Dialogue: 0,0:20:54.61,0:20:59.61,Default,,0,0,0,,所以我要新建一个布尔值：
Dialogue: 0,0:20:59.82,0:21:04.82,Default,,0,0,0,,isDuplicate = false
Dialogue: 0,0:21:08.49,0:21:11.68,Default,,0,0,0,,如果它的值为真，
Dialogue: 0,0:21:15.62,0:21:20.55,Default,,0,0,0,,那我们需要 isDuplicate=true;
Dialogue: 0,0:21:20.72,0:21:22.21,Default,,0,0,0,,可以吗？
Dialogue: 0,0:21:22.67,0:21:26.18,Default,,0,0,0,,好的，当我们循环过所有的歌曲后，
Dialogue: 0,0:21:26.18,0:21:28.64,Default,,0,0,0,,我们就知道我们有没有重复了，
Dialogue: 0,0:21:28.64,0:21:33.64,Default,,0,0,0,,假如没有重复，那么
Dialogue: 0,0:21:34.80,0:21:39.80,Default,,0,0,0,,我们把它添加到随机歌曲的列表里。
Dialogue: 0,0:21:40.64,0:21:43.03,Default,,0,0,0,,ok 了吗？
Dialogue: 0,0:21:43.03,0:21:47.84,Default,,0,0,0,,看起来可以。
Dialogue: 0,0:21:47.84,0:21:49.49,Default,,0,0,0,,棒极了~
Dialogue: 0,0:21:51.81,0:21:56.22,Default,,0,0,0,,让我们在这里调用选取随机歌曲的方法，
Dialogue: 0,0:21:59.68,0:22:03.84,Default,,0,0,0,,调用以后传递所有的歌曲，
Dialogue: 0,0:22:03.84,0:22:08.84,Default,,0,0,0,,很简单，
Dialogue: 0,0:22:08.90,0:22:13.90,Default,,0,0,0,,在这里我们的操作是可以等待的，
Dialogue: 0,0:22:16.57,0:22:21.05,Default,,0,0,0,,randomSongs,，
Dialogue: 0,0:22:21.05,0:22:23.63,Default,,0,0,0,,现在我们知道怎么提取源数据了，
Dialogue: 0,0:22:23.63,0:22:28.63,Default,,0,0,0,,我们要把那个处理好，
Dialogue: 0,0:22:28.85,0:22:31.12,Default,,0,0,0,,这里有些会涉及到一些____逻辑（game logic）,
Dialogue: 0,0:22:31.12,0:22:34.84,Default,,0,0,0,,我知道我需要存储部分额外的信息，
Dialogue: 0,0:22:34.84,0:22:39.21,Default,,0,0,0,,但我却不能简单地添加新属性，
Dialogue: 0,0:22:41.49,0:22:46.49,Default,,0,0,0,,比如说，我想要看这首歌是否已经
Dialogue: 0,0:22:48.12,0:22:51.69,Default,,0,0,0,,被用户播放了，或者
Dialogue: 0,0:22:51.70,0:22:55.16,Default,,0,0,0,,已经被选中了，
Dialogue: 0,0:22:55.16,0:22:57.90,Default,,0,0,0,,我这里想要做的，
Dialogue: 0,0:22:57.90,0:23:02.90,Default,,0,0,0,,转换随机歌曲，
Dialogue: 0,0:23:03.38,0:23:08.38,Default,,0,0,0,,或 StorageFiles 为一个不同类型（type）的类（class）
Dialogue: 0,0:23:09.46,0:23:14.46,Default,,0,0,0,,所以我要新建一个叫"Models" 的文件夹，
Dialogue: 0,0:23:15.97,0:23:18.93,Default,,0,0,0,,新建一个类 （class）
Dialogue: 0,0:23:18.93,0:23:22.44,Default,,0,0,0,,Add Class我们要把它叫 "song"
Dialogue: 0,0:23:22.44,0:23:24.74,Default,,0,0,0,,它会是一个简单的 POCO，
Dialogue: 0,0:23:24.74,0:23:28.27,Default,,0,0,0,,仅包含我们需要这个 app 需要的信息：
Dialogue: 0,0:23:29.39,0:23:32.49,Default,,0,0,0,,所以我需要 ID,
Dialogue: 0,0:23:33.68,0:23:37.95,Default,,0,0,0,,我需要歌曲名称,
Dialogue: 0,0:23:38.55,0:23:40.50,Default,,0,0,0,,我需要艺术家,
Dialogue: 0,0:23:42.31,0:23:45.53,Default,,0,0,0,,我需要专辑名，
Dialogue: 0,0:23:46.70,0:23:50.13,Default,,0,0,0,,我还需要…
Dialogue: 0,0:23:50.14,0:23:53.25,Default,,0,0,0,,接着 StorageFile
Dialogue: 0,0:23:59.01,0:24:03.36,Default,,0,0,0,,我需要一些属性，比如说：
Dialogue: 0,0:24:03.37,0:24:05.69,Default,,0,0,0,,它是不是已经被用户选中了，以及其他一些
Dialogue: 0,0:24:05.69,0:24:07.98,Default,,0,0,0,,我们将要提到的部分
Dialogue: 0,0:24:07.98,0:24:11.70,Default,,0,0,0,,请确保我们用这条语句添加了 Windows.Storage
Dialogue: 0,0:24:11.70,0:24:14.55,Default,,0,0,0,,很快，我们就会回到这里，
Dialogue: 0,0:24:14.56,0:24:16.69,Default,,0,0,0,,但现在我要做的是
Dialogue: 0,0:24:16.69,0:24:21.69,Default,,0,0,0,,将所有的随机歌曲的元数据，
Dialogue: 0,0:24:21.71,0:24:24.33,Default,,0,0,0,,新建一个实例（instance）
Dialogue: 0,0:24:24.34,0:24:27.83,Default,,0,0,0,,Song 对象的实例，
Dialogue: 0,0:24:27.83,0:24:32.39,Default,,0,0,0,,我要把它加到即合理，同时我要新建一个
Dialogue: 0,0:24:32.39,0:24:36.73,Default,,0,0,0,,叫  songs 的 ObservableCollection。
Dialogue: 0,0:24:36.73,0:24:41.73,Default,,0,0,0,,包含歌曲的叫 songs 的 private ObservableCollection
Dialogue: 0,0:24:44.90,0:24:49.90,Default,,0,0,0,,歌曲将会在 models namespace 里，
Dialogue: 0,0:24:52.98,0:24:56.97,Default,,0,0,0,,所以我要加入一个语句，
Dialogue: 0,0:24:56.97,0:24:59.92,Default,,0,0,0,,这是给 models namespace 的，
Dialogue: 0,0:24:59.92,0:25:04.22,Default,,0,0,0,,好的在这里我接着
Dialogue: 0,0:25:04.22,0:25:08.33,Default,,0,0,0,,做转换工作，我想你会把它叫做
Dialogue: 0,0:25:08.33,0:25:10.11,Default,,0,0,0,,折腾数据 =_=
Dialogue: 0,0:25:12.88,0:25:15.48,Default,,0,0,0,,在这里新建另外一个
Dialogue: 0,0:25:15.92,0:25:19.28,Default,,0,0,0,,private helper method
Dialogue: 0,0:25:25.76,0:25:30.76,Default,,0,0,0,,传递一个 StorageFile 的列表进去
Dialogue: 0,0:25:36.49,0:25:38.30,Default,,0,0,0,,名为 files。
Dialogue: 0,0:25:43.28,0:25:47.45,Default,,0,0,0,,好的让我们干他一把吧！
Dialogue: 0,0:25:52.62,0:25:55.35,Default,,0,0,0,,这是十首随机歌曲，
Dialogue: 0,0:25:55.35,0:25:58.61,Default,,0,0,0,,我要遍历每一个文件
Dialogue: 0,0:26:04.70,0:26:06.83,Default,,0,0,0,,提取 MusicProperties，每一个都要提取
Dialogue: 0,0:26:06.83,0:26:09.34,Default,,0,0,0,,所以呢……MusicProperties
Dialogue: 0,0:26:09.34,0:26:09.85,Default,,0,0,0,,调用它，
Dialogue: 0,0:26:09.85,0:26:14.85,Default,,0,0,0,,songproperties = File.Properties.GetMusicPropertiesAsync
Dialogue: 0,0:26:17.98,0:26:22.85,Default,,0,0,0,,它是可等待的，好极了，
Dialogue: 0,0:26:22.86,0:26:27.86,Default,,0,0,0,,现在我们要提取专辑封面，
Dialogue: 0,0:26:28.66,0:26:33.66,Default,,0,0,0,,让我们把注意力集中到那上面去，
Dialogue: 0,0:26:34.92,0:26:39.92,Default,,0,0,0,,我先我需要额……
Dialogue: 0,0:26:40.35,0:26:45.35,Default,,0,0,0,,啊我知道了我需要一个位图（bitmap），
Dialogue: 0,0:26:55.93,0:26:59.54,Default,,0,0,0,,BitmpapImage，被我称为 AlbumCovers
Dialogue: 0,0:26:59.54,0:27:04.06,Default,,0,0,0,,所以我要保存它，好极了，
Dialogue: 0,0:27:04.60,0:27:09.14,Default,,0,0,0,,让我们先提取它，
Dialogue: 0,0:27:10.89,0:27:13.32,Default,,0,0,0,,我想要一个缩略图
Dialogue: 0,0:27:17.15,0:27:18.48,Default,,0,0,0,,所以我要
Dialogue: 0,0:27:18.48,0:27:23.48,Default,,0,0,0,,File.GetThumbnailAsync()
Dialogue: 0,0:27:26.25,0:27:30.33,Default,,0,0,0,,我需要选择一个缩略图模式，
Dialogue: 0,0:27:31.52,0:27:33.20,Default,,0,0,0,,所以我要基于缩略图的目的来选择它，
Dialogue: 0,0:27:33.20,0:27:36.55,Default,,0,0,0,,在这个情况下，
Dialogue: 0,0:27:36.55,0:27:41.55,Default,,0,0,0,,我是要在音乐的 music view 里使用，
Dialogue: 0,0:27:42.24,0:27:47.24,Default,,0,0,0,,所以我想尺寸应该是 200，
Dialogue: 0,0:27:48.60,0:27:53.60,Default,,0,0,0,,那是推荐的尺寸，但我想我 75 就够了，
Dialogue: 0,0:27:55.55,0:28:00.54,Default,,0,0,0,,我想我可能会修改它，但我们也可以选择基于
Dialogue: 0,0:28:00.54,0:28:04.48,Default,,0,0,0,,当前缩放程度来选择缩略图，
Dialogue: 0,0:28:04.49,0:28:08.41,Default,,0,0,0,,不要缩放，就用当前的比例就好了
Dialogue: 0,0:28:08.41,0:28:12.94,Default,,0,0,0,,额，为什么你要耍小情绪了呢……
Dialogue: 0,0:28:13.40,0:28:16.30,Default,,0,0,0,,看看……哦好的，这样子！
Dialogue: 0,0:28:16.30,0:28:21.30,Default,,0,0,0,,异步处理，这里是一个任务，好极了！
Dialogue: 0,0:28:23.76,0:28:27.45,Default,,0,0,0,,好的，这里会返回一个值，
Dialogue: 0,0:28:27.45,0:28:29.96,Default,,0,0,0,,一个 StorageItemThumbnail，
Dialogue: 0,0:28:29.96,0:28:31.49,Default,,0,0,0,,我将会把这个输入，而不是用一个变量，
Dialogue: 0,0:28:31.49,0:28:34.88,Default,,0,0,0,,StorageItemThumbnail 这个名字简直酷毙了~
Dialogue: 0,0:28:34.88,0:28:39.88,Default,,0,0,0,,尤其是对于与文件相关联的图片来说 =w=
Dialogue: 0,0:28:40.20,0:28:45.20,Default,,0,0,0,,我觉得这也是可等待的，直接把它
Dialogue: 0,0:28:45.89,0:28:49.26,Default,,0,0,0,,设置为可等待的，酷~
Dialogue: 0,0:28:52.74,0:28:57.74,Default,,0,0,0,,好的 var song=new Song object;
Dialogue: 0,0:28:59.81,0:29:02.13,Default,,0,0,0,,现在我们推而广之，比如
Dialogue: 0,0:29:02.13,0:29:04.61,Default,,0,0,0,,ID equals
Dialogue: 0,0:29:07.10,0:29:11.85,Default,,0,0,0,,我们需要获取一个 ID 那么我们新建一个
Dialogue: 0,0:29:12.70,0:29:17.70,Default,,0,0,0,,int id=0;
Dialogue: 0,0:29:17.99,0:29:22.96,Default,,0,0,0,,在底部这里每一个递归都增加所以歌曲 ID
Dialogue: 0,0:29:22.96,0:29:27.96,Default,,0,0,0,,就是这样的， ID，Song.Title=SongProperties.Title
Dialogue: 0,0:29:31.86,0:29:36.86,Default,,0,0,0,,song.Artist = SongProperties.Artist
Dialogue: 0,0:29:39.50,0:29:44.50,Default,,0,0,0,,song.Album = SongProperties.
Dialogue: 0,0:29:45.28,0:29:47.88,Default,,0,0,0,,你可以看见在这里所有的信息
Dialogue: 0,0:29:47.88,0:29:52.03,Default,,0,0,0,,我们能从歌曲里获取的是各种各样的元数据，
Dialogue: 0,0:29:52.03,0:29:56.11,Default,,0,0,0,,这些元数据我们也可以从别的常见的 mp3 上获得，
Dialogue: 0,0:29:56.12,0:29:59.95,Default,,0,0,0,,我只需要选择我用到的部分，
Dialogue: 0,0:30:00.69,0:30:03.20,Default,,0,0,0,,.AlbumCover ... 希望你了解了这种思想，
Dialogue: 0,0:30:03.20,0:30:08.20,Default,,0,0,0,,这将会是一个类型（type） 为 BitmapImage 的
Dialogue: 0,0:30:13.89,0:30:16.83,Default,,0,0,0,,我应该怎么做呢？
Dialogue: 0,0:30:16.83,0:30:20.76,Default,,0,0,0,,我们 new Bitmap ——
Dialogue: 0,0:30:22.70,0:30:26.27,Default,,0,0,0,,BitmapImage,添加
Dialogue: 0,0:30:26.27,0:30:30.49,Default,,0,0,0,,Windows.UI.XAML.Media.Imaging 接着
Dialogue: 0,0:30:30.49,0:30:35.49,Default,,0,0,0,,传递进 URISource ，也就是当前的缩略图
Dialogue: 0,0:30:38.41,0:30:43.14,Default,,0,0,0,,但愿，额不是，不是这样
Dialogue: 0,0:30:44.35,0:30:47.11,Default,,0,0,0,,啊我知道我需要做什么了，
Dialogue: 0,0:30:47.11,0:30:49.63,Default,,0,0,0,,这是我们需要做的：
Dialogue: 0,0:30:49.63,0:30:54.33,Default,,0,0,0,,var album cover=new BitmapImage
Dialogue: 0,0:30:56.67,0:30:58.92,Default,,0,0,0,,bitmapImage.
Dialogue: 0,0:30:58.92,0:31:00.69,Default,,0,0,0,,呐一切都好，
Dialogue: 0,0:31:00.69,0:31:04.38,Default,,0,0,0,,AlbumCover.SetSource 接着你也可以
Dialogue: 0,0:31:04.38,0:31:08.90,Default,,0,0,0,,得到 CurrentThumbnail
Dialogue: 0,0:31:08.90,0:31:13.10,Default,,0,0,0,,接着 albumcover=albumcover,
Dialogue: 0,0:31:13.11,0:31:17.27,Default,,0,0,0,,像这样，挺疯狂的但是管用，
Dialogue: 0,0:31:17.27,0:31:22.03,Default,,0,0,0,,终于在这里了，我要添加
Dialogue: 0,0:31:22.03,0:31:27.03,Default,,0,0,0,,SongFile 就像我们刚刚递归的一样，
Dialogue: 0,0:31:28.47,0:31:33.47,Default,,0,0,0,,既然它是一个
Dialogue: 0,0:31:35.51,0:31:38.09,Default,,0,0,0,,类（class） 内可见的，我就直接…
Dialogue: 0,0:31:38.09,0:31:41.82,Default,,0,0,0,,而不是传递到 Songs.Add
Dialogue: 0,0:31:41.82,0:31:45.08,Default,,0,0,0,,歌曲本身，好的。
Dialogue: 0,0:31:45.76,0:31:47.75,Default,,0,0,0,,好啦我们看看这个管不管用，
Dialogue: 0,0:31:47.75,0:31:52.63,Default,,0,0,0,,调用 PopulateSongLists
Dialogue: 0,0:31:54.14,0:31:59.14,Default,,0,0,0,,PopulateSongList 传递 randomSongs
Dialogue: 0,0:32:00.91,0:32:05.39,Default,,0,0,0,,这也是可等待的，啊哈好极了。
Dialogue: 0,0:32:06.74,0:32:09.88,Default,,0,0,0,,现在我需要设置断点（breakpoint），
Dialogue: 0,0:32:09.88,0:32:13.29,Default,,0,0,0,,在这儿，看看我能不能 build 它
Dialogue: 0,0:32:13.29,0:32:16.29,Default,,0,0,0,,我们写了很多代码。
Dialogue: 0,0:32:16.29,0:32:20.16,Default,,0,0,0,,一般来说我会在这里尝试
Dialogue: 0,0:32:20.16,0:32:22.39,Default,,0,0,0,,把它们分解成小部分
Dialogue: 0,0:32:22.39,0:32:23.95,Default,,0,0,0,,但我已经过了一次了，我也已经知道
Dialogue: 0,0:32:23.95,0:32:28.01,Default,,0,0,0,,整个过程，所以我只希望
Dialogue: 0,0:32:28.01,0:32:30.38,Default,,0,0,0,,看看我会不会遇到问题，
Dialogue: 0,0:32:30.38,0:32:33.99,Default,,0,0,0,,接着针对问题来解决它，让我们点击按钮~
Dialogue: 0,0:32:33.99,0:32:38.94,Default,,0,0,0,,┗|｀O′|┛ 嗷~~一上来就遇到了问题
Dialogue: 0,0:32:40.62,0:32:43.41,Default,,0,0,0,,让我们看一下调用栈（call stack），尝试看看发生了什么……
Dialogue: 0,0:32:43.42,0:32:47.48,Default,,0,0,0,,(⊙﹏⊙) 看起来并不是很有帮助的样子……
Dialogue: 0,0:32:51.86,0:32:56.37,Default,,0,0,0,,好吧，所以我们必须要做如下的工作，
Dialogue: 0,0:32:57.74,0:33:02.47,Default,,0,0,0,,停下来，设置断点，
Dialogue: 0,0:33:08.03,0:33:11.74,Default,,0,0,0,,仔细的检查这个程序，
Dialogue: 0,0:33:18.18,0:33:21.87,Default,,0,0,0,,好吧 ╮(╯-╰)╭ 接下来是一段漫长的 debug 时间……
Dialogue: 0,0:33:21.87,0:33:24.35,Default,,0,0,0,,其实我希望不要花很多时间来 debug 的说……
Dialogue: 0,0:33:24.35,0:33:27.85,Default,,0,0,0,,有时候第一次就能搞定，但有时候……
Dialogue: 0,0:33:27.85,0:33:31.85,Default,,0,0,0,,whoa, 一点都不像正确的东西……
Dialogue: 0,0:33:31.85,0:33:36.85,Default,,0,0,0,,oh, ha-ha, okay, 嗨这里！你能看出来
Dialogue: 0,0:33:37.65,0:33:41.25,Default,,0,0,0,,它可能在代码的第一行就崩了吗！
Dialogue: 0,0:33:42.81,0:33:46.75,Default,,0,0,0,,一点都不符合逻辑，
Dialogue: 0,0:33:46.75,0:33:51.15,Default,,0,0,0,,我们什么都没干啊……有没有可能是我们没有申请容量（declare a capability）？
Dialogue: 0,0:33:51.15,0:33:53.84,Default,,0,0,0,,我觉得这就是问题所在。
Dialogue: 0,0:33:54.26,0:33:57.09,Default,,0,0,0,,我们去 package.appxmanifest 看看
Dialogue: 0,0:33:57.09,0:34:02.09,Default,,0,0,0,,是不是有一个容量
Dialogue: 0,0:34:03.43,0:34:06.03,Default,,0,0,0,,来获取 Music Library
Dialogue: 0,0:34:06.03,0:34:09.37,Default,,0,0,0,,肯定是……看看这个……
Dialogue: 0,0:34:09.37,0:34:12.65,Default,,0,0,0,,这莫过于是 “千里之堤，毁于蚁穴” 最好的例子了 =_=|||
Dialogue: 0,0:34:12.65,0:34:14.36,Default,,0,0,0,,好的，希望它可以能行，然后我们可以完成它了，
Dialogue: 0,0:34:14.36,0:34:19.36,Default,,0,0,0,,它确实 build 了，让我们试试看！
Dialogue: 0,0:34:26.15,0:34:28.34,Default,,0,0,0,,好吧，我们又遇到了另一个问题……
Dialogue: 0,0:34:28.34,0:34:31.67,Default,,0,0,0,,那么我们今天就到此为止吧，
Dialogue: 0,0:34:31.67,0:34:34.77,Default,,0,0,0,,让我仔细瞧瞧，哦，看起来
Dialogue: 0,0:34:34.77,0:34:37.25,Default,,0,0,0,,像是一个对象（object）引用了不属于它的一部分，
Dialogue: 0,0:34:37.25,0:34:39.15,Default,,0,0,0,,可能我忘了新建一些东西……
Dialogue: 0,0:34:39.15,0:34:40.75,Default,,0,0,0,,给我一些时间来让我解决它，
Dialogue: 0,0:34:40.75,0:34:42.98,Default,,0,0,0,,我们下一节课再见，这一节课已经拖蛮久的了。
Dialogue: 0,0:34:42.98,0:34:43.93,Default,,0,0,0,,好的，下节课见！
Dialogue: 0,0:34:43.93,0:34:45.40,Default,,0,0,0,,感谢你的观看！
