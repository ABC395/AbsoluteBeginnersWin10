[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: UWP030.mp4
Video File: UWP030.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.625000
Scroll Position: 104
Active Line: 122
Video Position: 21821

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: yahei,微软雅黑,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,50,1
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,yahei,,0,0,0,,复习提纲：控件，ScrollViewer，画布，图形，风格以及主题
Dialogue: 0,0:00:05.00,0:00:18.05,yahei,,0,0,0,,大家好我是www.LearnVisualStudio.net的Bob Tabor\N这节课我们复习25至29的内容
Dialogue: 0,0:00:18.28,0:00:30.34,yahei,,0,0,0,,好哒，那从25开始复习吧\N这节课中我们讲了更多xaml中的常见控件
Dialogue: 0,0:00:30.48,0:00:42.11,yahei,,0,0,0,,拿TimePicker来说\N它的ClockIdentifier能规定12或24小时制
Dialogue: 0,0:00:42.40,0:00:56.65,yahei,,0,0,0,,至于CalendarDatePicker控件,它首先显示一小块可供选择的区域\N点击控件之后则会随之弹出菜单或日历
Dialogue: 0,0:00:56.77,0:01:04.37,yahei,,0,0,0,,你可以选择在这一小块选择区域的占位符文本
Dialogue: 0,0:01:04.37,0:01:08.62,yahei,,0,0,0,,还有功能更丰富的CalendarView
Dialogue: 0,0:01:08.62,0:01:15.60,yahei,,0,0,0,,我们可以选择单个时间或多个时间
Dialogue: 0,0:01:15.60,0:01:19.64,yahei,,0,0,0,,这里我展示了如何处理 SelectedDateChanged（选中时间变化） 事件
Dialogue: 0,0:01:19.64,0:01:24.98,yahei,,0,0,0,,代码将所有的选中的日期显示在文本框中
Dialogue: 0,0:01:24.98,0:01:30.08,yahei,,0,0,0,,这部分基于[LINQ]语句获取具体的日期
Dialogue: 0,0:01:30.08,0:01:35.22,yahei,,0,0,0,,将日期全部放到一个数组里面\N然后用逗号连接起来
Dialogue: 0,0:01:35.22,0:01:38.26,yahei,,0,0,0,,之后我们讲解了 flyout menu 控件\N（口误，实际控件叫 flyout）
Dialogue: 0,0:01:38.26,0:01:42.34,yahei,,0,0,0,,我们为Button控件应用了一个 Flyout\N但是我们知道Flyout也可以应用在很多其他控件上
Dialogue: 0,0:01:42.34,0:01:47.36,yahei,,0,0,0,,事实上案例中的Flyout
Dialogue: 0,0:01:47.38,0:01:53.54,yahei,,0,0,0,,只会在电脑屏幕上创建一个对话框\N我们可以在对话框中加入任何控件
Dialogue: 0,0:01:53.60,0:02:00.88,yahei,,0,0,0,,我记得我放了一个StackPanel\N包含一个TexkBlock 和一个 Button
Dialogue: 0,0:02:00.88,0:02:05.02,yahei,,0,0,0,,而且控件打开之后也可以隐藏
Dialogue: 0,0:02:05.02,0:02:11.30,yahei,,0,0,0,,隐藏功能基于Flyout中Button的事件来实现
Dialogue: 0,0:02:11.30,0:02:14.04,yahei,,0,0,0,,我们只需要在句柄中调用MyFlyout.hide() 即可
Dialogue: 0,0:02:14.04,0:02:17.20,yahei,,0,0,0,,调用方式取决于你给Flyout取的名字\N(他的Flyout称为 MyFlyout，所以调用了myFlyout.hide())
Dialogue: 0,0:02:17.24,0:02:20.44,yahei,,0,0,0,,这个有一个拓展，叫做 flyout menu（飞出菜单）
Dialogue: 0,0:02:20.44,0:02:23.96,yahei,,0,0,0,,就是我刚刚口误说的那个= =
Dialogue: 0,0:02:23.92,0:02:30.86,yahei,,0,0,0,,这个可以从任何一个控件中打开一个大菜单，\N这里我们用的是按钮控件，你也可以用其他的
Dialogue: 0,0:02:30.86,0:02:38.80,yahei,,0,0,0,,除了我展示的\N创建FlyoutMenu项与处理按键或鼠标事件外
Dialogue: 0,0:02:38.80,0:02:43.44,yahei,,0,0,0,,我们还可以加上分隔符来创建视觉上的分隔\N分隔符通过项之间的横线来实现
Dialogue: 0,0:02:43.44,0:02:46.28,yahei,,0,0,0,,我们还可以利用MenuFlyoutSubItem元素
Dialogue: 0,0:02:46.36,0:02:49.58,yahei,,0,0,0,,来创建一个子菜单
Dialogue: 0,0:02:49.58,0:02:55.66,yahei,,0,0,0,,或者用 ToggleMenuFlyoutItem创建一个拖动按钮
Dialogue: 0,0:02:55.70,0:03:04.70,yahei,,0,0,0,,重申一次\NFlyout的这种小技巧也可以运用到其他类型的控件中
Dialogue: 0,0:03:04.70,0:03:06.70,yahei,,0,0,0,,在这个网页中你可以学习更多关于它的介绍
Dialogue: 0,0:03:06.70,0:03:10.42,yahei,,0,0,0,,好的那么接下来的任务中我们要讲解\NautoSuggestBox（提示输入框）
Dialogue: 0,0:03:10.42,0:03:15.04,yahei,,0,0,0,,这个功能非常厉害！在下一节挑战中我们将会碰到
Dialogue: 0,0:03:15.04,0:03:19.82,yahei,,0,0,0,,这里我们有
Dialogue: 0,0:03:19.82,0:03:21.84,yahei,,0,0,0,,我们能够修改一下 QueryIcon
Dialogue: 0,0:03:21.84,0:03:27.96,yahei,,0,0,0,,默认情况下设置为一个小型的放大镜
Dialogue: 0,0:03:27.96,0:03:29.96,yahei,,0,0,0,,我们可以把它改成 “Find” 这个图标
Dialogue: 0,0:03:29.96,0:03:31.66,yahei,,0,0,0,,我们也可以改一改这个占位符
Dialogue: 0,0:03:31.66,0:03:35.28,yahei,,0,0,0,,但是这个控件真正的强大之处是 TextChanged 事件句柄
Dialogue: 0,0:03:35.28,0:03:37.28,yahei,,0,0,0,,大家可以看到\N我们在这里处理了这个句柄
Dialogue: 0,0:03:37.28,0:03:41.56,yahei,,0,0,0,,这次我们用一个简单字符串的数组
Dialogue: 0,0:03:41.56,0:03:44.70,yahei,,0,0,0,,然后用一个 [LINQ]语法来筛选出我们需要的内容
Dialogue: 0,0:03:44.70,0:03:52.60,yahei,,0,0,0,,然后我们把它做成一个数组\N并把数组设置成AutoSuggestBox 的 ItemSource
Dialogue: 0,0:03:52.60,0:03:57.04,yahei,,0,0,0,,这样的话当我们在输入框中输入字符的时候\N选择框的内容就会相应变少
Dialogue: 0,0:03:57.04,0:04:00.86,yahei,,0,0,0,,然后我们就能用上下键选我们想要的
Dialogue: 0,0:04:00.88,0:04:05.16,yahei,,0,0,0,,接下来将这三个粘贴到一起\N虽然他们不一定相关
Dialogue: 0,0:04:05.16,0:04:12.44,yahei,,0,0,0,,首先关注到这个 slider 控件\N它在windows 10 的设置界面中很常用
Dialogue: 0,0:04:12.44,0:04:14.08,yahei,,0,0,0,,至于progress bar控件（进度条）
Dialogue: 0,0:04:14.08,0:04:17.70,yahei,,0,0,0,,我们可以在这个里面设置最大值与最小值
Dialogue: 0,0:04:17.70,0:04:20.66,yahei,,0,0,0,,啊，不对，只能设最大，不能最小！(-__-)b
Dialogue: 0,0:04:20.66,0:04:26.64,yahei,,0,0,0,,在这里我做了一个 binding（绑定），我们之后会讲到 x:bind 这个东西哦
Dialogue: 0,0:04:26.64,0:04:29.10,yahei,,0,0,0,,这个我把 ProgressBar 的值绑定了 Slider 的值
Dialogue: 0,0:04:29.10,0:04:33.04,yahei,,0,0,0,,这样当我们移动滚动条的时候进度条也会跟着动
Dialogue: 0,0:04:33.04,0:04:40.92,yahei,,0,0,0,,如果我们不想这么做的话\N我们也可以在代码中直接手动设置进度条的值
Dialogue: 0,0:04:40.92,0:04:43.94,yahei,,0,0,0,,最后是 Progress Ring控件（进度环）
Dialogue: 0,0:04:43.94,0:04:51.57,yahei,,0,0,0,,我们能够通过设置IsActive=True来打开Progress Ring\N或者通过设置成False来中止或隐藏它
Dialogue: 0,0:04:51.57,0:04:56.45,yahei,,0,0,0,,好哒，接下来一节课中我们讲了ScrollViewer（滚动视图）
Dialogue: 0,0:04:56.45,0:05:09.05,yahei,,0,0,0,,这部分也十分关键\N它能让我们添加无法在当前视窗尺寸显示的内容
Dialogue: 0,0:05:09.14,0:05:17.22,yahei,,0,0,0,,并且可以通过竖直和水平滚动来观看视窗
Dialogue: 0,0:05:17.22,0:05:26.68,yahei,,0,0,0,,虽然这里我将HorizontalScrollBarVisibility设为了Auto，\N但是你也可以设为Hidden（隐藏）或者always on（常开）
Dialogue: 0,0:05:26.68,0:05:32.94,yahei,,0,0,0,,我之前也说过，你可以在ScrollViewer中放任何需要的东西，\N但是不能把ScrollViewer放在StackPanel里面
Dialogue: 0,0:05:32.94,0:05:37.02,yahei,,0,0,0,,如果你放进去了，它就什么效果也没有了( ▼-▼ )
Dialogue: 0,0:05:37.02,0:05:44.25,yahei,,0,0,0,,那接下来我们还讲解过画布和图形\N我先把一部分内容粘贴过来
Dialogue: 0,0:05:44.25,0:05:48.31,yahei,,0,0,0,,只是为了让大家了解的更完整
Dialogue: 0,0:05:48.31,0:05:53.97,yahei,,0,0,0,,画布可以让你通过附加属性（attached properties）来建立绝对位置
Dialogue: 0,0:05:53.97,0:05:58.80,yahei,,0,0,0,,和RelativePanel（相对面板）或者Grid（格框）还有StackPanel（堆叠面板）不同
Dialogue: 0,0:05:58.80,0:06:00.80,yahei,,0,0,0,,画布是用来建立绝对位置的
Dialogue: 0,0:06:00.80,0:06:07.02,yahei,,0,0,0,,虽然这并不是一个很好的使用方法\N但也是能用的嘛（摆手
Dialogue: 0,0:06:07.02,0:06:12.91,yahei,,0,0,0,,尤其是当需要与直线，矩形椭圆等相结合时
Dialogue: 0,0:06:12.91,0:06:17.88,yahei,,0,0,0,,换句话说就是与绘画和绘图等包含视觉构件的相结合
Dialogue: 0,0:06:18.00,0:06:24.85,yahei,,0,0,0,,先说一下直线，我们其实可以在画布外面设置它
Dialogue: 0,0:06:24.85,0:06:35.82,yahei,,0,0,0,,但是折线呢，我们则需要用画布设置相对左和上边框偏移\N并设置Points（点）
Dialogue: 0,0:06:35.94,0:06:40.08,yahei,,0,0,0,,设置x和y的点位置来创建矩形
Dialogue: 0,0:06:40.08,0:06:49.25,yahei,,0,0,0,,我们还讲过矩形和椭圆形，虽然之前也用过，但是也没有好好讲过
Dialogue: 0,0:06:49.25,0:06:53.80,yahei,,0,0,0,,接下来就是画布附加属性中的Z指数（ZIndex）
Dialogue: 0,0:06:53.80,0:06:59.88,yahei,,0,0,0,,我们一般将其看做平面，但在必要的时候可以把它们转为3D
Dialogue: 0,0:06:59.91,0:07:03.28,yahei,,0,0,0,,这样我们就能更好的理解它们的堆放与叠加
Dialogue: 0,0:07:03.28,0:07:05.28,yahei,,0,0,0,,这就是Z指数的作用
Dialogue: 0,0:07:05.28,0:07:11.74,yahei,,0,0,0,,数字越大，位置就越高，覆盖的东西也更多
Dialogue: 0,0:07:11.74,0:07:17.97,yahei,,0,0,0,,然后我们还讲了XAML中的主题设置（style）
Dialogue: 0,0:07:18.22,0:07:30.40,yahei,,0,0,0,,从资源（resource）入手，我们创建了比如纯色画笔\N添加一个口令（key）并设置它特定的属性
Dialogue: 0,0:07:30.45,0:07:42.48,yahei,,0,0,0,,这个例子中指的就是颜色，所以我们可以通过引用key的方式在\N任何需要的地方使用这个特性，也就是这里的棕色
Dialogue: 0,0:07:42.54,0:07:51.48,yahei,,0,0,0,,当我们需要将棕色改为红色的时候，便只需要改这里就可以更改整个app中的设置了
Dialogue: 0,0:07:51.88,0:08:00.45,yahei,,0,0,0,,而style就像是resource的兄贵版（划）肌肉男版\N我们可以利用它来同时设置多个特性
Dialogue: 0,0:08:00.54,0:08:05.71,yahei,,0,0,0,,而这也需要赋予一个key并且选定一个目标类型
Dialogue: 0,0:08:05.85,0:08:09.42,yahei,,0,0,0,,比如这里的style就是特定用来设置按钮的
Dialogue: 0,0:08:09.42,0:08:15.57,yahei,,0,0,0,,而为实现这个功能，你需要用到绑定（Binding）语句
Dialogue: 0,0:08:15.57,0:08:22.62,yahei,,0,0,0,,绑定语句基本构架包含了开合大括号、StaticResource以及Resourece的名称
Dialogue: 0,0:08:22.62,0:08:29.68,yahei,,0,0,0,,比如上面的MyBrush口令或者MyButtonStyle口令
Dialogue: 0,0:08:29.68,0:08:41.54,yahei,,0,0,0,,然后我们讲到了在不同层级中创建资源字典（resource dictionary），\N比如在页面或者在程序中
Dialogue: 0,0:08:41.54,0:08:49.80,yahei,,0,0,0,,你也可以创建一个资源字典文档，在之前的项目（project）中我也展示了
Dialogue: 0,0:08:49.97,0:08:54.20,yahei,,0,0,0,,选择添加新项目，就能看到资源字典这个选项
Dialogue: 0,0:08:54.20,0:09:02.02,yahei,,0,0,0,,接着我们创建一个名为Dictionary1.xaml的文档并设定好纯色画笔\N然后在app中使用
Dialogue: 0,0:09:02.02,0:09:07.25,yahei,,0,0,0,,而使用的办法就是将所有指定的资源字典合并
Dialogue: 0,0:09:07.25,0:09:13.34,yahei,,0,0,0,,在这个例子中我不光在页面里添加了Dictionary1.xaml
Dialogue: 0,0:09:13.54,0:09:17.42,yahei,,0,0,0,,还添加了没在复习提纲里的Dictionary2.xaml
Dialogue: 0,0:09:17.42,0:09:23.57,yahei,,0,0,0,,这样我就可以在页面的其他地方引用任何主题设置
Dialogue: 0,0:09:23.57,0:09:28.48,yahei,,0,0,0,,无论是在页面中，程序中或是在任何一个资源字典中创建的
Dialogue: 0,0:09:28.91,0:09:34.88,yahei,,0,0,0,,资源字典帮助我们管理各种各样的主题设置\N而且可以在不同的项目中重复使用
Dialogue: 0,0:09:34.94,0:09:40.08,yahei,,0,0,0,,反正就像处女座一样的厉害o(*￣▽￣*)ブ\N（字幕君才不是处女座的呢）
Dialogue: 0,0:09:40.08,0:09:49.11,yahei,,0,0,0,,我们还讲过主题，我先提供一个包含更多主题知识的链接
Dialogue: 0,0:09:49.11,0:09:55.62,yahei,,0,0,0,,如果你发现了一些包含主题资源的绑定语句
Dialogue: 0,0:09:55.62,0:10:03.45,yahei,,0,0,0,,你可以将鼠标放在上面，然后按F12来看这个主题设置，然后会打开一个名为Generic.xmal 的文档
Dialogue: 0,0:10:03.57,0:10:08.82,yahei,,0,0,0,,可以看到我们可以从不同的主题设置中选择
Dialogue: 0,0:10:08.82,0:10:18.17,yahei,,0,0,0,,来实现用户选择的颜色或者主题色，无论是桌面端、手机端还是XBox One
Dialogue: 0,0:10:18.17,0:10:27.74,yahei,,0,0,0,,此外我们可以请求一个主题，比如之前课程中我们\N将默认请求白色主题的app转为黑色，并看到了它的效果
Dialogue: 0,0:10:27.74,0:10:32.00,yahei,,0,0,0,,但是，高对比度主题会强行覆盖你的所有主题和风格
Dialogue: 0,0:10:32.00,0:10:36.97,yahei,,0,0,0,,这是由于可用性的原因
Dialogue: 0,0:10:37.22,0:10:44.62,yahei,,0,0,0,,最后，我们讨论了很多与颜色无关的主题
Dialogue: 0,0:10:44.62,0:10:48.80,yahei,,0,0,0,,这些主题主要用于字体风格等
Dialogue: 0,0:10:48.80,0:10:59.42,yahei,,0,0,0,,为了阐述这些主题\N我们浏览了属性（property）窗口、样式属性（style property）、点击了设计器等
Dialogue: 0,0:10:59.51,0:11:05.45,yahei,,0,0,0,,就会弹出一个菜单供我们从各种预定义的主题设置中选择合适的
Dialogue: 0,0:11:05.45,0:11:11.48,yahei,,0,0,0,,我们选择了标题文本框等一些主题设置，
Dialogue: 0,0:11:11.48,0:11:19.05,yahei,,0,0,0,,然后可以看到这里的文本框就和我们在Win10中看到的部分特殊的主题一样啦
Dialogue: 0,0:11:19.05,0:11:27.60,yahei,,0,0,0,,最后的最后，Generic.xaml中的很多主题设置都包含了基于属性（BasedOn attribute）
Dialogue: 0,0:11:27.60,0:11:37.54,yahei,,0,0,0,,这一属性创建了一个基本主题设置，然后会衍生出基于原有设置的主题设置
Dialogue: 0,0:11:37.54,0:11:43.60,yahei,,0,0,0,,在这个主题设置中，添加或修改了一些特性，就和层叠样式（cascading style）有点像
Dialogue: 0,0:11:43.71,0:11:49.94,yahei,,0,0,0,,如果你学过web开发，就很简单啦ヾ(o◕∀◕)ﾉ
Dialogue: 0,0:11:49.94,0:11:57.42,yahei,,0,0,0,,好哒，简单的复习完了，希望你都懂咯\N然后我们要继续学并且增加难度啦
Dialogue: 0,0:11:57.45,0:11:59.60,yahei,,0,0,0,,你做的挺好的，干巴爹！
Dialogue: 0,0:11:59.60,0:12:03.28,yahei,,0,0,0,,我不确定是不是已经完成了一半课程了，反正以及很接近了(●ˇ∀ˇ●)
Dialogue: 0,0:12:03.28,0:12:09.71,yahei,,0,0,0,,下节课会讲一点更高级的东西，我在那里等着你哟！
Dialogue: 0,0:12:09.71,0:12:11.71,yahei,,0,0,0,,巨硬大法好！
