[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: uwp27CanvasAndShapes_high.mp4
Video File: uwp27CanvasAndShapes_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.375000
Scroll Position: 52
Active Line: 58
Video Position: 12133

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: yahei,微软雅黑,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,yahei,,0,0,0,,画布和图形
Dialogue: 0,0:00:05.02,0:00:08.48,yahei,,0,0,0,,我是你们的老朋友Bob Tabor
Dialogue: 0,0:00:08.57,0:00:18.17,yahei,,0,0,0,,在这节课中我们会讲到画布（canvas）布局控制以及图形，\N虽然它们不是紧密联系，但是你会发现它们其实是相辅相成的
Dialogue: 0,0:00:18.31,0:00:24.28,yahei,,0,0,0,,我们要面对的是在设计面上控件的绝对位置
Dialogue: 0,0:00:24.40,0:00:34.91,yahei,,0,0,0,,所以尤其是在windows app的布局中，我们不想出现绝对布局以及绝对位置
Dialogue: 0,0:00:34.93,0:00:43.64,yahei,,0,0,0,,因为如果需要改变app大小尺寸的时候，\N我们要花很大功夫来重新计算各个部分的位置
Dialogue: 0,0:00:43.84,0:00:50.48,yahei,,0,0,0,,或者就局限了app中可用的模式及布局（审核）
Dialogue: 0,0:00:50.60,0:01:02.13,yahei,,0,0,0,,大部分你见到的windows的app中都不会用到这些，\N 但是有些时候我觉得可能还是能用到的
Dialogue: 0,0:01:02.37,0:01:06.46,yahei,,0,0,0,,所以为了让你们多知道一些知识
Dialogue: 0,0:01:06.46,0:01:15.75,yahei,,0,0,0,,虽然不一定要了解多深，我在这里要同时把画布和多种图形都说明一下
Dialogue: 0,0:01:15.97,0:01:21.68,yahei,,0,0,0,,比如你可以要创建音乐相关的app，可能会包括乐谱以及音符
Dialogue: 0,0:01:22.02,0:01:29.26,yahei,,0,0,0,,又或者关于数学的软件，其中包括符号，线段还要把不同事物放在不同位置上
Dialogue: 0,0:01:29.37,0:01:34.15,yahei,,0,0,0,,你知道嘛，数学有的时候总要和表达式还有它们的位置什么的纠缠不清嘛
Dialogue: 0,0:01:34.33,0:01:40.75,yahei,,0,0,0,,比如模拟时钟（Analog Clock），这样就要\N创建许多不同的角度的线和与之同属性的其他东西
Dialogue: 0,0:01:40.93,0:01:52.95,yahei,,0,0,0,,就算是一个图画或者绘图app，你也可能需要创建两个符号间并 画一条在特定领域中有特殊意义的线
Dialogue: 0,0:01:53.33,0:01:59.00,yahei,,0,0,0,,或者是关于条形码读取的软件，以及创建可读取的条形码 
Dialogue: 0,0:01:59.00,0:02:05.46,yahei,,0,0,0,,这些都是常见的同时利用画布和图形的情况
Dialogue: 0,0:02:05.64,0:02:11.22,yahei,,0,0,0,,第一个我想说的是直线形，也是非常简单的
Dialogue: 0,0:02:11.28,0:02:19.60,yahei,,0,0,0,,不需要你把它放进画布，放进Grid也是一样的\N看这儿，就是我们得到的结果
Dialogue: 0,0:02:19.95,0:02:26.22,yahei,,0,0,0,,在这里我们把它放进了默认元件，仅仅表明了x和y
Dialogue: 0,0:02:26.44,0:02:30.57,yahei,,0,0,0,,也就是起始点和结束点的x和y坐标
Dialogue: 0,0:02:30.71,0:02:37.31,yahei,,0,0,0,,这里起始点：x=10，y=10，显示在了左上角
Dialogue: 0,0:02:37.55,0:02:52.95,yahei,,0,0,0,,第二个点：x=200，y保持不变，这样就有了右上角的点，结果显示了一条水平(bob说成了垂直)的线\N（字幕君：所以是我英语太不好只知道vertical是垂直的意思么）
Dialogue: 0,0:02:53.24,0:02:58.06,yahei,,0,0,0,,可以看到在这里stroke设为了Black，而StrokeThickness是5
Dialogue: 0,0:02:58.24,0:03:03.46,yahei,,0,0,0,,还有就是StrokeEndLineCap设为了Triangle，其实还有其他选项
Dialogue: 0,0:03:03.46,0:03:15.73,yahei,,0,0,0,,比如平面，曲面，方形以及三角形，我把这部分放大一点就能看到，\N当我们设置了Triangle时，最末端就会出现一个像这样的尖儿
Dialogue: 0,0:03:16.13,0:03:29.95,yahei,,0,0,0,,就像我之前说的，我们并不一定要用画布来创建不同的直线并添加至app中
Dialogue: 0,0:03:30.04,0:03:36.35,yahei,,0,0,0,,在这里我利用再添加三条线的方式做了一个三角形，并确保它们在合适的位置相交
Dialogue: 0,0:03:36.51,0:03:53.42,yahei,,0,0,0,,确保他们的StrokeStartLineCap和StrokeEndLineCap都设为Round，这样它们就很好的接在一起了
Dialogue: 0,0:03:53.42,0:04:03.80,yahei,,0,0,0,,接下来，我要说一下画布，\N你可以看到我们用表明xy坐标的方式设置了绝对位置
Dialogue: 0,0:04:04.13,0:04:17.33,yahei,,0,0,0,,Line保持不动，我们只把这里都换成Canvas，这样我们就可以利用附加属性语句来统一管理其他任何控件
Dialogue: 0,0:04:17.64,0:04:31.02,yahei,,0,0,0,,首先我们先用不同方式重新创建一下这个三角形\N这次我们用折线而不是三条直线
Dialogue: 0,0:04:31.28,0:04:38.08,yahei,,0,0,0,,你可以看到我设置了折线的左侧和上部\N这里我用到了附加属性
Dialogue: 0,0:04:38.26,0:04:43.66,yahei,,0,0,0,,然后我创建了包含xy值的一系列points（点）
Dialogue: 0,0:04:43.66,0:04:54.80,yahei,,0,0,0,,以此来确定三角形中不同的点，我还可以设置Fill（填充）的\N颜色因为是这个折线组成了闭合的三角形
Dialogue: 0,0:04:54.80,0:05:01.62,yahei,,0,0,0,,注意到是我将整个这折线放在了距左侧150的位置
Dialogue: 0,0:05:01.62,0:05:08.77,yahei,,0,0,0,,上面则为零，所以这里面的所有位置都与我之前所定义的位置是相互关联的
Dialogue: 0,0:05:09.66,0:05:19.02,yahei,,0,0,0,,接着我要强调一下部件的绝对位置
Dialogue: 0,0:05:19.08,0:05:26.31,yahei,,0,0,0,,这里我创建了一个TextBlock，并相对的设置了Canvas.Left为50，Canvas.Top为150
Dialogue: 0,0:05:26.31,0:05:32.68,yahei,,0,0,0,,所以我们可以将任何控件放进canvas里以此得到绝对位置，不光是图形
Dialogue: 0,0:05:33.64,0:05:43.46,yahei,,0,0,0,,我们应该说过了矩形（rectangle），我们来用一下，\N待会我还会把它加到别的例子里面去
Dialogue: 0,0:05:43.46,0:05:51.91,yahei,,0,0,0,,这里我有一个黄色的矩形，再说一次，只要设置Canvas.Top,Canvas.Left附加属性
Dialogue: 0,0:05:52.28,0:05:56.11,yahei,,0,0,0,,还有Height，Width并填充黄色
Dialogue: 0,0:05:56.24,0:06:05.40,yahei,,0,0,0,,最末尾的ZIndex我待会还会与画布结合，更进一步的说明 
Dialogue: 0,0:06:05.53,0:06:11.71,yahei,,0,0,0,,canvas能让你将部件叠加放置
Dialogue: 0,0:06:11.80,0:06:19.68,yahei,,0,0,0,,定义当以不同角度看叠加的部分时，哪些部分会显示出来
Dialogue: 0,0:06:19.93,0:06:23.44,yahei,,0,0,0,,what would the stack be，哪部分会最先显示
Dialogue: 0,0:06:23.68,0:06:32.37,yahei,,0,0,0,,在这里我将椭圆的ZIndex设为了150，而黄色矩形的ZIndex则为100
Dialogue: 0,0:06:32.62,0:06:37.91,yahei,,0,0,0,,如果我将ZIndex改为15时
Dialogue: 0,0:06:37.91,0:06:46.80,yahei,,0,0,0,,黄色矩形便变为在椭圆上面
Dialogue: 0,0:06:46.86,0:06:52.64,yahei,,0,0,0,,不光要注意xy坐标，我们还有注意到三维空间中的z坐标
Dialogue: 0,0:06:52.64,0:06:58.11,yahei,,0,0,0,,这样z坐标就会帮你讲叠加顺序设置好
Dialogue: 0,0:06:58.22,0:07:04.82,yahei,,0,0,0,,记得注意一下，吼不吼啊\N这就是我想说的关于画布和不同的可用图形
Dialogue: 0,0:07:04.82,0:07:15.00,yahei,,0,0,0,,你可以以有趣的方式将它们结合来表示几乎你能想到的所有东西，\N当你需要在app中绘制图形，希望对你有所帮助
Dialogue: 0,0:07:15.17,0:07:23.15,yahei,,0,0,0,,我记得它们都有Click或者Tapped，嗯是的
Dialogue: 0,0:07:23.28,0:07:29.04,yahei,,0,0,0,,所以如果你需要把图形与触控和点击相呼应，你会用到Tapped事件
Dialogue: 0,0:07:29.04,0:07:35.68,yahei,,0,0,0,,来达到用户和这一特定图形的交互功能
Dialogue: 0,0:07:35.80,0:07:49.73,yahei,,0,0,0,,这就是我想说的关于绝对位置画布和当你需要在软件中绘制图形的特殊情况下的相关设置，希望能帮到你
Dialogue: 0,0:07:49.84,0:07:51.40,yahei,,0,0,0,,拜拜，下节课见咯！
