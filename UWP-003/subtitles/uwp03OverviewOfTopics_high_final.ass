[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: uwp03OverviewOfTopics_high.mp4
Video File: uwp03OverviewOfTopics_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 207
Active Line: 259
Video Position: 29427

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Windows,Microsoft YaHei,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: Windows Top,Microsoft YaHei,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,8,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.80,Windows,,0,0,0,,UWP开发话题概览\N翻译@Daria   校对@Westie陈老师
Dialogue: 0,0:00:04.36,0:00:08.34,Windows,,0,0,0,,嗨～ 我是 爆伯  \N这里是www.learnvisualstudio.net
Dialogue: 0,0:00:08.74,0:00:10.68,Windows,,0,0,0,,我不想把这部分一笔带过
Dialogue: 0,0:00:10.68,0:00:12.46,Windows,,0,0,0,,因为这部分需要用到一些
Dialogue: 0,0:00:12.46,0:00:15.22,Windows,,0,0,0,,我们上节课学到的
Dialogue: 0,0:00:15.22,0:00:17.04,Windows,,0,0,0,,至关重要的技巧
Dialogue: 0,0:00:17.04,0:00:18.52,Windows,,0,0,0,,来辅助我们开始新的课程
Dialogue: 0,0:00:18.52,0:00:20.60,Windows,,0,0,0,,所以我们先花一点时间
Dialogue: 0,0:00:20.60,0:00:22.66,Windows,,0,0,0,,来回顾一下我们之前课程所学到的
Dialogue: 0,0:00:23.12,0:00:24.90,Windows,,0,0,0,,首先 我希望大家能意识到
Dialogue: 0,0:00:24.90,0:00:29.72,Windows,,0,0,0,,你将通过教程中的界面
Dialogue: 0,0:00:29.72,0:00:31.46,Windows,,0,0,0,,和在Visual Studio中练习来获取必要的知识
Dialogue: 0,0:00:31.82,0:00:34.34,Windows,,0,0,0,,然后将这部分知识运用到
Dialogue: 0,0:00:34.34,0:00:36.34,Windows,,0,0,0,,UWP App的开发中
Dialogue: 0,0:00:37.16,0:00:38.34,Windows,,0,0,0,,你可能也意识到了 其实
Dialogue: 0,0:00:38.34,0:00:40.34,Windows,,0,0,0,,WPF (Windows Presentation Foundation) 和 ASP.net \N的创建是十分相近的
Dialogue: 0,0:00:40.34,0:00:42.34,Windows,,0,0,0,,这并不是偶然现象
Dialogue: 0,0:00:42.34,0:00:44.34,Windows,,0,0,0,,这两者的工作流程十分相近
Dialogue: 0,0:00:44.34,0:00:46.34,Windows,,0,0,0,,你也将从中得到相似的经验
Dialogue: 0,0:00:46.34,0:00:48.34,Windows,,0,0,0,,接着你会发现
Dialogue: 0,0:00:48.34,0:00:50.34,Windows,,0,0,0,,这个学习过程是轻松
Dialogue: 0,0:00:50.34,0:00:51.60,Windows,,0,0,0,,愉悦哒o(*￣▽￣*)ブ
Dialogue: 0,0:00:51.60,0:00:53.22,Windows,,0,0,0,,虽然在这过程中需要学习的东西很多
Dialogue: 0,0:00:53.22,0:00:55.26,Windows,,0,0,0,,但是没有什么是不能攻克的（不在怕的！）
Dialogue: 0,0:00:57.32,0:00:58.34,Windows,,0,0,0,,就像我们之前所说的
Dialogue: 0,0:00:58.34,0:01:00.34,Windows,,0,0,0,,到目前为止 在总课程的开始部分
Dialogue: 0,0:01:00.34,0:01:02.34,Windows,,0,0,0,,我们可以用各种不同的方法
Dialogue: 0,0:01:02.34,0:01:04.34,Windows,,0,0,0,,来设计我们的程序
Dialogue: 0,0:01:04.64,0:01:06.34,Windows,,0,0,0,,我们已经学会了如何
Dialogue: 0,0:01:06.34,0:01:09.30,Windows,,0,0,0,,用最直观的方法来改变用户界面
Dialogue: 0,0:01:09.30,0:01:10.34,Windows,,0,0,0,,那就是将工具栏里的控件
Dialogue: 0,0:01:10.40,0:01:13.62,Windows,,0,0,0,,拖拽 放在释放设计页面上
Dialogue: 0,0:01:13.62,0:01:16.34,Windows,,0,0,0,,并且我们可以调整大小或者改变它们的位置
Dialogue: 0,0:01:16.34,0:01:18.34,Windows,,0,0,0,,然后我们还可以
Dialogue: 0,0:01:18.34,0:01:20.34,Windows,,0,0,0,,通过在性质视窗内修改的方法
Dialogue: 0,0:01:20.34,0:01:22.34,Windows,,0,0,0,,来增进
Dialogue: 0,0:01:22.34,0:01:24.34,Windows,,0,0,0,,在屏幕上我们所看到的
Dialogue: 0,0:01:24.34,0:01:26.34,Windows,,0,0,0,,各种控件的不同特性
Dialogue: 0,0:01:26.34,0:01:28.34,Windows,,0,0,0,,但是 你最终应该会发现
Dialogue: 0,0:01:28.34,0:01:30.34,Windows,,0,0,0,,就像HTML一样
Dialogue: 0,0:01:30.34,0:01:32.34,Windows,,0,0,0,,一个可视化设计器
Dialogue: 0,0:01:32.34,0:01:34.34,Windows,,0,0,0,,不会通过各种不同的特性
Dialogue: 0,0:01:34.34,0:01:36.34,Windows,,0,0,0,, 和它们互相之间的关联
Dialogue: 0,0:01:36.34,0:01:40.34,Windows,,0,0,0,,给到你真正需要的控件层次
Dialogue: 0,0:01:40.34,0:01:42.34,Windows,,0,0,0,,所以 学习真正的XAML语言
Dialogue: 0,0:01:42.34,0:01:44.34,Windows,,0,0,0,,并没有其他捷径可走
Dialogue: 0,0:01:44.34,0:01:46.34,Windows,,0,0,0,,我们将会在下一节课
Dialogue: 0,0:01:46.34,0:01:48.34,Windows,,0,0,0,,开始细致的讲这一部分\N （*从第四节课开始将要讲授XAML语言的学习*）
Dialogue: 0,0:01:48.34,0:01:53.08,Windows,,0,0,0,,除此之外 就像我们创建的 ASP.net 和WPF程序一样
Dialogue: 0,0:01:53.08,0:01:56.82,Windows,,0,0,0,,每一个界面或页面
Dialogue: 0,0:01:56.82,0:02:01.54,Windows,,0,0,0,,都有相应的后台代码
Dialogue: 0,0:02:01.54,0:02:05.02,Windows,,0,0,0,,可以让我们用来编写C#语言中的event handler代码
Dialogue: 0,0:02:05.02,0:02:08.34,Windows,,0,0,0,,而当用户以特定方式运行程序时
Dialogue: 0,0:02:08.34,0:02:10.22,Windows,,0,0,0,,我们可以利用它来执行操作
Dialogue: 0,0:02:10.68,0:02:12.34,Windows,,0,0,0,,我们还可以看到
Dialogue: 0,0:02:12.34,0:02:14.34,Windows,,0,0,0,,就像我们之前的课提到的一样
Dialogue: 0,0:02:14.34,0:02:19.78,Windows,,0,0,0,,在这里MainPage.XAML和MainPage.XAML.cs的关系 依然是相同的
Dialogue: 0,0:02:20.34,0:02:22.70,Windows,,0,0,0,,事实上 我希望你能够注意到
Dialogue: 0,0:02:22.70,0:02:26.80,Windows,,0,0,0,,在MainPage.XAML.cs 中
Dialogue: 0,0:02:26.80,0:02:28.70,Windows,,0,0,0,,在Hello World这个命名空间中
Dialogue: 0,0:02:28.70,0:02:30.44,Windows,,0,0,0,,创建了一个名为MainPage的类
Dialogue: 0,0:02:30.44,0:02:31.86,Windows,,0,0,0,,注意它是一个partial class
Dialogue: 0,0:02:32.34,0:02:34.34,Windows,,0,0,0,,我不太确定在我们在
Dialogue: 0,0:02:34.34,0:02:36.34,Windows,,0,0,0,,C#基础理论中有没有讲过这个
Dialogue: 0,0:02:36.34,0:02:38.34,Windows,,0,0,0,,但是重要的是 我们可以
Dialogue: 0,0:02:38.34,0:02:40.34,Windows,,0,0,0,,创建不同的文件并让他们都成为
Dialogue: 0,0:02:40.34,0:02:44.34,Windows,,0,0,0,,一个类的部分定义
Dialogue: 0,0:02:44.34,0:02:46.34,Windows,,0,0,0,,并把它们储存在不同的文档中
Dialogue: 0,0:02:46.34,0:02:48.34,Windows,,0,0,0,,不管在什么情境 只要
Dialogue: 0,0:02:48.34,0:02:52.34,Windows,,0,0,0,,文件的类名相同并在相同的namespace中
Dialogue: 0,0:02:52.34,0:02:54.34,Windows,,0,0,0,,并且它包含了关键词 partial
Dialogue: 0,0:02:54.34,0:02:56.34,Windows,,0,0,0,,我们就可以创建许多不同的文档
Dialogue: 0,0:02:56.34,0:02:58.34,Windows,,0,0,0,,来代表同一个class
Dialogue: 0,0:02:58.34,0:03:00.34,Windows,,0,0,0,,同样的道理
Dialogue: 0,0:03:00.34,0:03:04.54,Windows,,0,0,0,,可以注意到MainPage是来自于一个叫Page的对象的
Dialogue: 0,0:03:04.54,0:03:06.84,Windows,,0,0,0,,你可以把鼠标放在上面来查看
Dialogue: 0,0:03:06.84,0:03:10.84,Windows,,0,0,0,,这个class叫做 Windows.UI.XAML.Controls.Page
Dialogue: 0,0:03:10.84,0:03:12.84,Windows,,0,0,0,,当你点进MainPage.XAML的时候
Dialogue: 0,0:03:12.86,0:03:14.18,Windows,,0,0,0,,能看到的是 在最上面
Dialogue: 0,0:03:14.18,0:03:16.86,Windows,,0,0,0,,我们正在用一个page来进行工作
Dialogue: 0,0:03:16.86,0:03:18.86,Windows,,0,0,0,,还要注意的是 class name (类名)
Dialogue: 0,0:03:18.86,0:03:24.86,Windows,,0,0,0,,同样是HelloWorld (namespace) MainPage (class)
Dialogue: 0,0:03:24.86,0:03:28.86,Windows,,0,0,0,,这就像是一个拼图中的两小块
Dialogue: 0,0:03:28.86,0:03:32.86,Windows,,0,0,0,, 而我真正想说的是这是两个
Dialogue: 0,0:03:32.86,0:03:34.86,Windows,,0,0,0,,代表着同一个class的两个不同的文档
Dialogue: 0,0:03:34.86,0:03:40.86,Windows,,0,0,0,,其中一个从视觉上表示了class
Dialogue: 0,0:03:40.86,0:03:43.08,Windows,,0,0,0,,另一个则是从动作上来表示的
Dialogue: 0,0:03:43.28,0:03:45.22,Windows,,0,0,0,,我们稍后还会谈到更多这方面的内容
Dialogue: 0,0:03:45.22,0:03:47.08,Windows,,0,0,0,,（爆伯缓一缓...）
Dialogue: 0,0:03:47.08,0:03:49.92,Windows,,0,0,0,,当我们完成了整个程序的创建
Dialogue: 0,0:03:50.32,0:03:52.58,Windows,,0,0,0,,就可以进入调试(debug)模式了
Dialogue: 0,0:03:52.92,0:03:54.18,Windows,,0,0,0,,我并不是要现在演示
Dialogue: 0,0:03:54.18,0:03:57.40,Windows,,0,0,0,,但是我们可以用各种方法来进入\N（你看我已经在这里弄好啦）
Dialogue: 0,0:03:57.40,0:03:59.96,Windows,,0,0,0,,你可以用断点
Dialogue: 0,0:03:59.96,0:04:05.48,Windows,,0,0,0,,或者比如local machine(本地)就可以用来跑程序
Dialogue: 0,0:04:05.48,0:04:11.48,Windows,,0,0,0,,接下来我们可以点击这个按钮来进入debug模式
Dialogue: 0,0:04:11.48,0:04:15.54,Windows,,0,0,0,,然后我们可以计算不同特性的值
Dialogue: 0,0:04:15.54,0:04:17.22,Windows,,0,0,0,,根据不同情况的条件运用用不同的变量
Dialogue: 0,0:04:17.26,0:04:21.40,Windows,,0,0,0,,我们还可以运用这些提供的工具来
Dialogue: 0,0:04:21.40,0:04:24.04,Windows,,0,0,0,,创建其他不同样式的程序
Dialogue: 0,0:04:24.04,0:04:26.06,Windows,,0,0,0,,在这里
Dialogue: 0,0:04:26.06,0:04:28.06,Windows,,0,0,0,,我希望提醒大家一件
Dialogue: 0,0:04:28.06,0:04:30.06,Windows,,0,0,0,,我没有详细解释过的事
Dialogue: 0,0:04:30.06,0:04:35.90,Windows,,0,0,0,,“为什么在debug模式中出现了这么多可用的模拟器？”
Dialogue: 0,0:04:36.32,0:04:41.42,Windows,,0,0,0,,这些模拟器模拟了不同的屏幕尺寸和分辨率
Dialogue: 0,0:04:41.46,0:04:50.58,Windows,,0,0,0,,以及市面上不同的手机硬盘所产生的不同内存大小
Dialogue: 0,0:04:50.64,0:04:56.62,Windows,,0,0,0,,所以我们可以在低内存条件下\N或高内存条件下
Dialogue: 0,0:04:56.76,0:05:00.16,Windows,,0,0,0,,也可以在不同的屏幕大小和分辨率下测试程序
Dialogue: 0,0:05:00.28,0:05:05.10,Windows,,0,0,0,,还有一件需要提及的关于模拟器的事情就是
Dialogue: 0,0:05:05.20,0:05:08.60,Windows,,0,0,0,,（我们先把模拟器打开）
Dialogue: 0,0:05:08.60,0:05:11.34,Windows,,0,0,0,,（沉默 (ˉ▽ˉ；)...）
Dialogue: 0,0:05:11.34,0:05:12.94,Windows,,0,0,0,,我之前没有提到的就是
Dialogue: 0,0:05:12.94,0:05:17.42,Windows,,0,0,0,,这些工具栏上的指令
Dialogue: 0,0:05:17.42,0:05:19.42,Windows,,0,0,0,,有一些意义已经很明确啦
Dialogue: 0,0:05:19.42,0:05:22.90,Windows,,0,0,0,,比如旋转等等\N来测试我们的程序外观
Dialogue: 0,0:05:22.90,0:05:24.90,Windows,,0,0,0,,当我们旋转手机的时候
Dialogue: 0,0:05:24.90,0:05:28.20,Windows,,0,0,0,,如何来实现多点触控
Dialogue: 0,0:05:28.20,0:05:31.38,Windows,,0,0,0,,或者将程序放大
Dialogue: 0,0:05:31.38,0:05:34.64,Windows,,0,0,0,,这里还有一些工具
Dialogue: 0,0:05:34.64,0:05:38.20,Windows,,0,0,0,,我们可以从工具栏中的 (>>)一项来找到它们
Dialogue: 0,0:05:38.20,0:05:41.24,Windows,,0,0,0,,接着我们便能看到许多可能用到的工具
Dialogue: 0,0:05:41.26,0:05:45.50,Windows,,0,0,0,,如果我们想测试程序的加速度传感(accelerometer)
Dialogue: 0,0:05:45.50,0:05:53.04,Windows,,0,0,0,,我们可以在手机上记录一些\N摇动手势
Dialogue: 0,0:05:53.04,0:05:56.76,Windows,,0,0,0,,来测试我们的程序是怎样
Dialogue: 0,0:05:56.76,0:06:02.08,Windows,,0,0,0,,应对这些实际情况的
Dialogue: 0,0:06:02.08,0:06:04.78,Windows,,0,0,0,,我们还可以在GPS中运用同样的技巧
Dialogue: 0,0:06:05.54,0:06:17.54,Windows Top,,0,0,0,,手机模拟器和GPS的知识将会在59节课及之后详细讲解
Dialogue: 0,0:06:04.78,0:06:10.56,Windows,,0,0,0,,我们将会在接下来的课程中讲解定位服务\N以及怎样用模拟器来测试这一功能
Dialogue: 0,0:06:10.56,0:06:12.56,Windows,,0,0,0,,实际上我们可以在模拟器上设置
Dialogue: 0,0:06:12.56,0:06:17.54,Windows,,0,0,0,,与我们现在所在位置不同的地点来测试程序
Dialogue: 0,0:06:17.54,0:06:21.54,Windows,,0,0,0,, 我们还可以\N（回到Mainpage）
Dialogue: 0,0:06:21.54,0:06:28.42,Windows,,0,0,0,,我们还可以通过利用工具栏中不同的XAML指令来创建程序
Dialogue: 0,0:06:28.42,0:06:30.42,Windows,,0,0,0,,比如按钮(button control)
Dialogue: 0,0:06:30.42,0:06:32.26,Windows,,0,0,0,,还有...虽然你现在并不能看到
Dialogue: 0,0:06:32.42,0:06:33.76,Windows,,0,0,0,,我们做出来的 文本标签（TextBlock）
Dialogue: 0,0:06:33.76,0:06:35.76,Windows,,0,0,0,,（往下拉一点...哈！在这里！）
Dialogue: 0,0:06:35.76,0:06:37.76,Windows,,0,0,0,,就一个小小的东西
Dialogue: 0,0:06:37.76,0:06:43.10,Windows,,0,0,0,,一个控件不仅有我们能够可视的性质（比如 button 长成 button 的样子），\N而且还有行为
Dialogue: 0,0:06:43.10,0:06:47.58,Windows,,0,0,0,,而且我们作为开发者两个都可以改（所谓逆天改命）
Dialogue: 0,0:06:47.58,0:06:50.70,Windows,,0,0,0,,可以通过更改控件的性质
Dialogue: 0,0:06:50.70,0:06:54.82,Windows,,0,0,0,,比如我们修改 Visual Studio 中性质（property）那一栏\N或者更改 XAML 的时候
Dialogue: 0,0:06:54.82,0:06:58.16,Windows,,0,0,0,,也可以通过代码来对在特定的时间点一些重要的事件做反应\N
Dialogue: 0,0:06:58.16,0:07:01.22,Windows,,0,0,0,,（比如点击啊，鼠标悬停之类）
Dialogue: 0,0:07:01.30,0:07:05.70,Windows,,0,0,0,,比如当我们点那个小的闪电图标的时候
Dialogue: 0,0:07:05.70,0:07:11.46,Windows,,0,0,0,,然后我们决定要处理一些按钮的事件\N比如点击事件
Dialogue: 0,0:07:11.46,0:07:16.32,Windows,,0,0,0,,很明显工具箱里面有很多其他的控件
Dialogue: 0,0:07:16.32,0:07:20.64,Windows,,0,0,0,,这里有普通的控件，比如输入控件，比方说按钮（button）
Dialogue: 0,0:07:20.64,0:07:22.24,Windows,,0,0,0,,或者是输入框（textbox）
Dialogue: 0,0:07:22.24,0:07:25.12,Windows,,0,0,0,,还有一些显示控件，比如文本框（text block）
Dialogue: 0,0:07:25.16,0:07:30.64,Windows,,0,0,0,,也有输入选择选项，比如下拉框（drop down list box）
Dialogue: 0,0:07:30.64,0:07:34.40,Windows,,0,0,0,,比如日期控件，让我们选择日期和时间
Dialogue: 0,0:07:34.40,0:07:38.24,Windows,,0,0,0,,有能用来显示数据的网格（grid）
Dialogue: 0,0:07:38.24,0:07:43.16,Windows,,0,0,0,,还有网格（grid）以及其他的排版控件能帮我们
Dialogue: 0,0:07:43.16,0:07:45.16,Windows,,0,0,0,,来确定其他控件在我们的 App 中的位置
Dialogue: 0,0:07:45.16,0:07:47.86,Windows,,0,0,0,,你可以看见当我们开始画 UI 的时候
Dialogue: 0,0:07:47.86,0:07:51.82,Windows,,0,0,0,,这里自动就有是已经有一个网格（grid）了
Dialogue: 0,0:07:51.82,0:07:54.42,Windows,,0,0,0,,我们将会在之后的课程中详细地介绍这些
Dialogue: 0,0:07:54.42,0:07:56.42,Windows,,0,0,0,,（从第八节课开始学习网格， StackPanel）
Dialogue: 0,0:07:56.42,0:08:00.22,Windows,,0,0,0,,事实上我们将会在学习排版控件上
Dialogue: 0,0:08:00.22,0:08:02.52,Windows,,0,0,0,,花比你想象的多得多的时间
Dialogue: 0,0:08:02.52,0:08:08.28,Windows,,0,0,0,,他们对于 UWP App 的建设来说极其重要\N他们对于 UWP App 的建设来说极其重要\N他们对于 UWP App 的建设来说极其重要
Dialogue: 0,0:08:08.28,0:08:12.98,Windows,,0,0,0,,正是排版控件让一套代码能够
Dialogue: 0,0:08:12.98,0:08:19.36,Windows,,0,0,0,,在很多的不同的设备上面运行
Dialogue: 0,0:08:19.36,0:08:25.12,Windows,,0,0,0,,所以 UWP 的 API（应用接口，Application interface）给了你很多的
Dialogue: 0,0:08:25.12,0:08:28.56,Windows,,0,0,0,,能够在各种设备上运行的可视的控件
Dialogue: 0,0:08:28.56,0:08:34.36,Windows,,0,0,0,,他们允许在一些情况下用鼠标输入\N另一些情况下用触控输入
Dialogue: 0,0:08:34.44,0:08:39.74,Windows,,0,0,0,,而且也是这一套 API 给了我们上千种方法（method）
Dialogue: 0,0:08:39.76,0:08:42.16,Windows,,0,0,0,,和上百种类型（class）的命名空间（namespace）
Dialogue: 0,0:08:42.16,0:08:45.18,Windows,,0,0,0,,来让你在你的 App 中设计极其好玩的东西
Dialogue: 0,0:08:45.18,0:08:49.36,Windows,,0,0,0,,比如说你希望从网上拿下来一些资源
Dialogue: 0,0:08:49.36,0:08:52.46,Windows,,0,0,0,,或者你想利用一个在文件系统上的文件
Dialogue: 0,0:08:52.46,0:08:56.94,Windows,,0,0,0,,它可能在手机也可能在平板上，或者是笔记本电脑或者是台式，甚至是 xbox上
Dialogue: 0,0:08:56.96,0:09:00.84,Windows,,0,0,0,,或者你希望要播放一个多媒体文件 比如音乐啊 视频之类
Dialogue: 0,0:09:00.84,0:09:04.04,Windows,,0,0,0,,在 UWP API 中有方法
Dialogue: 0,0:09:04.04,0:09:06.04,Windows,,0,0,0,,不仅能实现我们上面说的所有的事情
Dialogue: 0,0:09:06.04,0:09:09.68,Windows,,0,0,0,,还能够做好多好多其他的事情o(*￣▽￣*)ブ
Dialogue: 0,0:09:09.68,0:09:15.80,Windows,,0,0,0,,而且我们也可以利用一些只在某些设备上有的功能
Dialogue: 0,0:09:15.80,0:09:18.62,Windows,,0,0,0,,通过“拓展 SDK”来实现
Dialogue: 0,0:09:18.62,0:09:22.46,Windows,,0,0,0,,或者叫做软件开发工具包（software development kit）
Dialogue: 0,0:09:22.46,0:09:25.04,Windows,,0,0,0,,这些拓展SDK
Dialogue: 0,0:09:25.10,0:09:32.36,Windows,,0,0,0,,有一些其他的类和方法来让你运用一些\N只在某些设备上有的功能
Dialogue: 0,0:09:32.36,0:09:33.46,Windows,,0,0,0,,举个栗子o(*￣▽￣*)ブ
Dialogue: 0,0:09:33.46,0:09:38.18,Windows,,0,0,0,,如果我做了一个我希望在各种 Windows 10 设备上运行的 App
Dialogue: 0,0:09:38.18,0:09:38.80,Windows,,0,0,0,,牛逼！
Dialogue: 0,0:09:38.82,0:09:52.46,Windows,,0,0,0,,但是 我决定加一些只在手机上能够用的功能\N（为啥呢？不为啥， Windows Phone 就是高贵）
Dialogue: 0,0:09:52.50,0:09:57.34,Windows,,0,0,0,,然后我就可以用移动设备拓展SDK (Mobile Extension Skd)
Dialogue: 0,0:09:57.34,0:10:02.52,Windows,,0,0,0,,来用加速传感器啊  GPS啊
Dialogue: 0,0:10:02.52,0:10:05.24,Windows,,0,0,0,,还有相机啊等等等等
Dialogue: 0,0:10:05.24,0:10:09.08,Windows,,0,0,0,,当我根据不同的设备来选择加入功能的时候
Dialogue: 0,0:10:09.08,0:10:15.32,Windows,,0,0,0,,那么我们就在写适应性代码 (adaptive code)\N你会经常听见这个术语 特别是“适应性”这个词
Dialogue: 0,0:10:15.32,0:10:17.32,Windows,,0,0,0,,或者
Dialogue: 0,0:10:17.32,0:10:22.84,Windows,,0,0,0,,我可以让我的 App 只在一个特殊的设备种类上运行
Dialogue: 0,0:10:22.84,0:10:27.72,Windows,,0,0,0,,我可能让 App 只能在手机上运行\N（再一次  就是高贵 天生骄傲）
Dialogue: 0,0:10:27.72,0:10:34.20,Windows,,0,0,0,,因为我的App 要大量的使用移动设备拓展 SDK 中的功能
Dialogue: 0,0:10:34.20,0:10:37.84,Windows,,0,0,0,,这就会被叫做一个只能在移动设备上用的 App。。。
Dialogue: 0,0:10:37.84,0:10:42.60,Windows,,0,0,0,,重点是 我们这些开发者能够选择
Dialogue: 0,0:10:42.60,0:10:46.26,Windows,,0,0,0,,为哪些设备开发 而不是其他设备
Dialogue: 0,0:10:46.26,0:10:52.82,Windows,,0,0,0,,我们在这个系列中也会学到更多的适应性的\N以及单一设备种类的开发
Dialogue: 0,0:10:52.82,0:10:57.24,Windows,,0,0,0,,因为这是 UWP 中最重要的新功能之一
Dialogue: 0,0:10:57.24,0:11:05.00,Windows,,0,0,0,,而且 我们的 App 的不仅可以根据设备种类来改变
Dialogue: 0,0:11:05.00,0:11:07.70,Windows,,0,0,0,,还有他的排版以及可视的性质
Dialogue: 0,0:11:07.70,0:11:10.64,Windows,,0,0,0,,还有它的导航方法
Dialogue: 0,0:11:10.64,0:11:14.08,Windows,,0,0,0,,导航需要根据屏幕大小来改变。
Dialogue: 0,0:11:14.08,0:11:19.38,Windows,,0,0,0,,所以我会制造 适应性触发器 来根据屏幕大小
Dialogue: 0,0:11:19.38,0:11:24.48,Windows,,0,0,0,,更改 App 的排版以及组件的大小
Dialogue: 0,0:11:24.48,0:11:28.80,Windows,,0,0,0,,这是另一个我在这个系列中大量演示的功能
Dialogue: 0,0:11:28.80,0:11:33.70,Windows,,0,0,0,,（学习适应性布局，从37课开始）\N因为这也是 UWP 中很重要的新功能
Dialogue: 0,0:11:33.70,0:11:40.82,Windows,,0,0,0,,当我坐下来学一些新的东西的时候 比如新的技术啊 API 啊
Dialogue: 0,0:11:40.82,0:11:45.30,Windows,,0,0,0,,我会花很多时间在我的脑子里整理东西
Dialogue: 0,0:11:45.30,0:11:48.96,Windows,,0,0,0,,把不同的东西分类  并且寻找类别之中重要的不同点
Dialogue: 0,0:11:48.96,0:11:53.76,Windows,,0,0,0,,对我来说学习 UWP 也是一样的
Dialogue: 0,0:11:53.76,0:11:57.04,Windows,,0,0,0,,所以说 这是我想出来的东西
Dialogue: 0,0:11:57.04,0:12:02.76,Windows,,0,0,0,,我把所有的我们作为开发者需要理解的话题分类
Dialogue: 0,0:12:02.76,0:12:08.72,Windows,,0,0,0,,用这些分类我们来学习这些东西
Dialogue: 0,0:12:08.72,0:12:11.94,Windows,,0,0,0,,希望大家能够明白他们之间是什么样的关系
Dialogue: 0,0:12:11.94,0:12:13.94,Windows,,0,0,0,,所以 第一
Dialogue: 0,0:12:13.94,0:12:15.72,Windows,,0,0,0,,我们需要学 XAML
Dialogue: 0,0:12:15.72,0:12:23.08,Windows,,0,0,0,,我们之前说过 这是一个决定我们 App 或者“窗体”的语言
Dialogue: 0,0:12:23.08,0:12:27.10,Windows,,0,0,0,,XAML 并不只是在 UWP 中有运用
Dialogue: 0,0:12:27.10,0:12:29.10,Windows,,0,0,0,,它已经有将近10年的历史了
Dialogue: 0,0:12:29.10,0:12:32.32,Windows,,0,0,0,,但是做一个 UWP App
Dialogue: 0,0:12:32.32,0:12:37.38,Windows,,0,0,0,,是从对 XAML 基本的了解以及如何对其修枝剪叶开始的
Dialogue: 0,0:12:37.38,0:12:41.36,Windows,,0,0,0,,让我们 App 中的 XAML 来做我们想让它做的事情
Dialogue: 0,0:12:41.36,0:12:44.94,Windows,,0,0,0,,所以学习 XAML 是第一件事 我们会在下一节课开始
Dialogue: 0,0:12:45.02,0:12:53.42,Windows,,0,0,0,,第二我们要学习如何用 C# 来运用 UWP API 中的类和方法
Dialogue: 0,0:12:53.42,0:12:57.88,Windows,,0,0,0,,所以这里有 XAML 和 C# 作为编程语言
Dialogue: 0,0:12:57.88,0:13:06.54,Windows,,0,0,0,,也有 API：一堆微软做出来的 我们可以在我们 App 中运用的方法
Dialogue: 0,0:13:06.54,0:13:12.34,Windows,,0,0,0,,所以你用 UWP API 来在你的 App 中做有意义的事情
Dialogue: 0,0:13:12.34,0:13:17.28,Windows,,0,0,0,,比如读取和存储数据 或者上网之类的事情
Dialogue: 0,0:13:17.32,0:13:20.70,Windows,,0,0,0,,第三是
Dialogue: 0,0:13:20.70,0:13:28.18,Windows,,0,0,0,,如果你只是在我的 入门者的C#课程 中学习过 C# 的话
Dialogue: 0,0:13:28.18,0:13:32.40,Windows,,0,0,0,,你可能在这个课程中需要学习一些新的 C# 的功能
Dialogue: 0,0:13:32.40,0:13:38.50,Windows,,0,0,0,,尤其是async， await 和 task，这些关键词以及这些关键词的意义
Dialogue: 0,0:13:38.50,0:13:45.48,Windows,,0,0,0,,他们会在你运用 UWP API 的时候大量的被运用到
Dialogue: 0,0:13:45.48,0:13:47.48,Windows,,0,0,0,,我会在我们学习那些东西的时候给你解释为什么
Dialogue: 0,0:13:47.48,0:13:55.48,Windows,,0,0,0,,你仍然需要学习数据格式，比如 XAML 的基础：xml\N（XAML 是一种 xml）
Dialogue: 0,0:13:55.48,0:14:00.40,Windows,,0,0,0,,我们也要将一些 JSON，这叫做 javascript object notation\N（javascript 物件标注）
Dialogue: 0,0:14:00.40,0:14:05.76,Windows,,0,0,0,,之后，我们将要运用互联网 API 来从 open weather map API 获得天气数据
Dialogue: 0,0:14:05.76,0:14:08.90,Windows,,0,0,0,,也会从漫威来获得超级英雄的数据（漫威大法好！）
Dialogue: 0,0:14:08.90,0:14:12.82,Windows,,0,0,0,,他们会把他们的数据通过 JSON 发送给我们
Dialogue: 0,0:14:12.82,0:14:19.44,Windows,,0,0,0,,我们需要学习如何把 JSON 解码成我们在 C# 中可以用的格式
Dialogue: 0,0:14:19.44,0:14:26.32,Windows,,0,0,0,,第四个我们要学的是帮助我们做 UWP App 的工具
Dialogue: 0,0:14:26.32,0:14:32.56,Windows,,0,0,0,,我们是在说 Visual Studio 设计视窗，精灵，还有工程模板
Dialogue: 0,0:14:32.56,0:14:34.56,Windows,,0,0,0,,我们也要学习模拟器( •̀ ω •́ )y
Dialogue: 0,0:14:34.56,0:14:42.08,Windows,,0,0,0,,就像我们上一节课一样 你会在学习 UWP 功能的时候学到这些工具的用法
Dialogue: 0,0:14:42.08,0:14:47.86,Windows,,0,0,0,,我很可能不会花费一整节课来讲如何用 Blend 或者其他的设计界面
Dialogue: 0,0:14:47.86,0:14:51.14,Windows,,0,0,0,,我们会在我们的学习过程中自然而然地学习
Dialogue: 0,0:14:51.14,0:15:00.42,Windows,,0,0,0,,第六点 最后一点 我们将要学习一些我们做 App 的时候需要遵守的规范
Dialogue: 0,0:15:00.46,0:15:08.38,Windows,,0,0,0,,嗯！ 规范是一个指南 他们是常见问题的很好的解答
Dialogue: 0,0:15:08.38,0:15:17.40,Windows,,0,0,0,,有帮助我们设计 UWP App 的规范 \N这样我们的 App 能像其他 Windows 10 App 看起来不违和
Dialogue: 0,0:15:17.44,0:15:27.78,Windows,,0,0,0,,也有导航的规范 这样用过其他 Windows 10 App 的人\N能够很好的操纵我们的 App
Dialogue: 0,0:15:27.82,0:15:29.86,Windows,,0,0,0,,当然也有编码规范
Dialogue: 0,0:15:29.86,0:15:36.74,Windows,,0,0,0,,尤其是当我们用 C# 来处理数据的时候以及向用户显示数据的时候
Dialogue: 0,0:15:36.74,0:15:43.74,Windows,,0,0,0,,所以 但愿我们能通过这一节课中我们讨论过的话题
Dialogue: 0,0:15:43.74,0:15:46.86,Windows,,0,0,0,,来保证你不走弯路
Dialogue: 0,0:15:46.86,0:15:57.78,Windows,,0,0,0,,事实上我们已经克服了很多我们之后在制作 UWP App 的时候会遇到的概念问题\N真的没有那么难（不管你信不信，反正我信了）
Dialogue: 0,0:15:57.78,0:16:02.02,Windows,,0,0,0,,现在我们需要做的事情仅仅只是不断地添砖加瓦而已
Dialogue: 0,0:16:02.02,0:16:04.02,Windows,,0,0,0,,我怎么做这个 我怎么做那个之类的问题
Dialogue: 0,0:16:04.02,0:16:08.94,Windows,,0,0,0,,真的并不难  我们只是 需要花一点时间慢慢的学习这些细节
Dialogue: 0,0:16:08.98,0:16:12.78,Windows,,0,0,0,,但是我们会慢慢搞好 然后你马上就可以写你自己的 App 了 ( •̀ ω •́ )y
Dialogue: 0,0:16:12.78,0:16:16.62,Windows,,0,0,0,,所以我们将会从下一节课开始加入这些细节 下节课见
Dialogue: 0,0:16:17.20,0:16:21.06,Windows,,0,0,0,,微软大法好！
