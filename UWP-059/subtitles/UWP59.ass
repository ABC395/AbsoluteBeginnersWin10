[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: uwp59WeatherAddingGps_high.mp4
Video File: uwp59WeatherAddingGps_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.375000
Scroll Position: 103
Active Line: 110
Video Position: 21573

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: yahei,微软雅黑,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,yahei,,0,0,0,,UWP 天气 - 获取卫星定位\N翻译：shi
Dialogue: 0,0:00:05.00,0:00:16.71,yahei,,0,0,0,,这节课中我们首先要做的就是将之前的图片都弄过来
Dialogue: 0,0:00:16.71,0:00:27.65,yahei,,0,0,0,,然后就要正式开始获取设备的卫星定位了
Dialogue: 0,0:00:27.65,0:00:36.88,yahei,,0,0,0,,比如桌面端，或者其他移动设备端
Dialogue: 0,0:00:36.88,0:00:44.11,yahei,,0,0,0,,首先要做的就是复制weather assets（天气资源）文件夹
Dialogue: 0,0:00:44.11,0:00:55.45,yahei,,0,0,0,,可以看到每一个我都创建了副本，连名字都和他们用的一样
Dialogue: 0,0:00:55.45,0:01:01.20,yahei,,0,0,0,,这些只是我在一个图画生成器上创建的萌萌哒图标
Dialogue: 0,0:01:01.20,0:01:04.60,yahei,,0,0,0,,也都是免费的哦
Dialogue: 0,0:01:04.60,0:01:08.57,yahei,,0,0,0,,可以随便在我的app里用
Dialogue: 0,0:01:08.57,0:01:11.40,yahei,,0,0,0,,直接将这个文件夹拖拽过来
Dialogue: 0,0:01:11.40,0:01:18.08,yahei,,0,0,0,,上次那种烦人的问题又出现了，所以我需要全选这些
Dialogue: 0,0:01:18.08,0:01:24.25,yahei,,0,0,0,,然后拖拽过来，接着会显示“xx已存在”，点yes复制它，就完啦
Dialogue: 0,0:01:24.25,0:01:33.54,yahei,,0,0,0,,接下来要做的就是...
Dialogue: 0,0:01:33.54,0:01:38.94,yahei,,0,0,0,,与其将这些图标从OpenWeatherMap拖过来
Dialogue: 0,0:01:38.94,0:01:42.48,yahei,,0,0,0,,我要做的是改URL
Dialogue: 0,0:01:42.48,0:01:44.77,yahei,,0,0,0,,（先把这一点去掉）
Dialogue: 0,0:01:44.77,0:01:51.54,yahei,,0,0,0,,每次你需要获取到本地资源并需要URL时
Dialogue: 0,0:01:51.54,0:01:59.94,yahei,,0,0,0,,可以用“ms-appx:///"这种方法
Dialogue: 0,0:01:59.94,0:02:05.71,yahei,,0,0,0,,这代表着：进到asset文件夹，进到weather子文件夹
Dialogue: 0,0:02:05.71,0:02:17.25,yahei,,0,0,0,,并找到文件夹的三个字母数字字符的名字
Dialogue: 0,0:02:17.25,0:02:20.54,yahei,,0,0,0,,如果命名都没出错\N（肯定没有咯）
Dialogue: 0,0:02:20.54,0:02:26.31,yahei,,0,0,0,,将会出现不同的被使用的图标\N我们来运行一下程序
Dialogue: 0,0:02:29.82,0:02:37.74,yahei,,0,0,0,,啊哈哈哈是不是特别厉害i！\N既然简单的做完了，我们就继续深入吧（嘿嘿嘿）
Dialogue: 0,0:02:37.74,0:02:49.28,yahei,,0,0,0,,接下来我们要讲述如何使用运行设备的定位性能
Dialogue: 0,0:02:49.28,0:02:58.74,yahei,,0,0,0,,为了在程序中利用运行设备平台的传感器或者硬件功能
Dialogue: 0,0:02:58.74,0:03:03.94,yahei,,0,0,0,,你需要在Package.appxmanifest申明这一性能
Dialogue: 0,0:03:03.94,0:03:10.97,yahei,,0,0,0,,先打开，然后在性能这一栏勾选定位
Dialogue: 0,0:03:10.97,0:03:22.68,yahei,,0,0,0,,当在本地桌面或手机模拟器再一次运行时，你们就能看到变化了
Dialogue: 0,0:03:22.68,0:03:24.68,yahei,,0,0,0,,尤其是我们得到的信息
Dialogue: 0,0:03:24.68,0:03:30.45,yahei,,0,0,0,,而这也需要在终端用户同意后才可以使用
Dialogue: 0,0:03:30.45,0:03:38.85,yahei,,0,0,0,,接下来我要讲的这个特性用途很广
Dialogue: 0,0:03:38.85,0:03:48.20,yahei,,0,0,0,,所以我希望你们能看一篇文章来了解更多
Dialogue: 0,0:03:48.20,0:04:00.31,yahei,,0,0,0,,我忘记找连接了\N在Windows Dev Center里搜索Windows10 Get Current Location就可以了\N（windows 10 获取实时定位） 
Dialogue: 0,0:04:00.31,0:04:07.77,yahei,,0,0,0,,你可以利用文章里的代码查看实时状态
Dialogue: 0,0:04:07.77,0:04:13.11,yahei,,0,0,0,,性能使用的权限问题
Dialogue: 0,0:04:13.11,0:04:17.34,yahei,,0,0,0,,如果不能使用，它也会回报给你
Dialogue: 0,0:04:17.34,0:04:23.25,yahei,,0,0,0,,所以你完全可以写程序的时候抱这个文章的大腿
Dialogue: 0,0:04:23.25,0:04:26.14,yahei,,0,0,0,,啊还有就是可以对状态更新做出反应
Dialogue: 0,0:04:26.14,0:04:41.54,yahei,,0,0,0,,比如用户在移动时（比如开车或者跑动）\N你可以需要通过添加修改代码来实时更新位置
Dialogue: 0,0:04:41.54,0:04:45.14,yahei,,0,0,0,,当然这个过程越简单越好
Dialogue: 0,0:04:45.14,0:04:53.68,yahei,,0,0,0,,我接下来要做的就是类似于这一小部分
Dialogue: 0,0:04:53.68,0:05:00.82,yahei,,0,0,0,,把其他应用到更复杂程序中的部分都省略
Dialogue: 0,0:05:00.82,0:05:08.31,yahei,,0,0,0,,首先我需要创建一个叫LocationManager的层级(class)
Dialogue: 0,0:05:08.31,0:05:19.22,yahei,,0,0,0,,它也能帮助我们将windows复杂的定位性能简化浓缩
Dialogue: 0,0:05:19.22,0:05:24.25,yahei,,0,0,0,,（创建LocationManager class）
Dialogue: 0,0:05:24.25,0:05:33.08,yahei,,0,0,0,,设置为public，并创建一个public static
Dialogue: 0,0:05:35.17,0:05:39.00,yahei,,0,0,0,,先定为void，不过待会应该还要改
Dialogue: 0,0:05:39.00,0:05:49.02,yahei,,0,0,0,,命名为GetPosition()
Dialogue: 0,0:05:49.02,0:06:00.25,yahei,,0,0,0,,然后...然后...\N啊我先隐个身然后放大一下页面
Dialogue: 0,0:06:00.25,0:06:03.28,yahei,,0,0,0,,因为接下来可是有好多代码等着我们呢
Dialogue: 0,0:06:03.28,0:06:08.45,yahei,,0,0,0,,接下来需要做的就是Geolocator\N它会提供一切我们需要的
Dialogue: 0,0:06:08.45,0:06:17.65,yahei,,0,0,0,,不过看起来它不存在，所以我需要Ctrl+"."到\NWindows.Devices.Geolocation中添加一个使用（using）语句 
Dialogue: 0,0:06:17.65,0:06:27.71,yahei,,0,0,0,,这里有一个叫RequestAccessAsync的算法\N其实就是为了表明“我能不能接入Geolocator？”
Dialogue: 0,0:06:27.77,0:06:32.40,yahei,,0,0,0,,“当我发送请求后，它会返回经纬度吗？”
Dialogue: 0,0:06:32.48,0:06:36.68,yahei,,0,0,0,,所以当我用到这个算法时，它会返回一个状态给我
Dialogue: 0,0:06:36.68,0:06:39.94,yahei,,0,0,0,,所以这里我们就将用到它来获取accessStatus（接入状态）
Dialogue: 0,0:06:39.94,0:06:43.65,yahei,,0,0,0,,然后这里需要添加await
Dialogue: 0,0:06:43.65,0:06:47.97,yahei,,0,0,0,,而这儿需要加上async
Dialogue: 0,0:06:47.97,0:06:55.31,yahei,,0,0,0,,还有就是这里应该需要返回一些东西\N目前还是void，回头再说
Dialogue: 0,0:06:55.31,0:07:08.65,yahei,,0,0,0,,唯一一个我比较担心的状态就是地理位置状态(Geolocation status)\N[GeolocationAccessStatus.Allowed]
Dialogue: 0,0:07:08.74,0:07:12.40,yahei,,0,0,0,,如果被拒绝或者尚未明确\N就只能说我们人品不好了（好人卡太少）
Dialogue: 0,0:07:12.40,0:07:22.57,yahei,,0,0,0,,所以如果access status不等于allowed
Dialogue: 0,0:07:22.57,0:07:26.42,yahei,,0,0,0,,则需要throw new exception
Dialogue: 0,0:07:26.42,0:07:35.71,yahei,,0,0,0,,或者我应该更小心一点\N添加一个自定义exception用来报错，不过我太懒了
Dialogue: 0,0:07:35.71,0:07:38.02,yahei,,0,0,0,,app死了就死了吧（摊手
Dialogue: 0,0:07:38.02,0:07:42.94,yahei,,0,0,0,,这部分我也应该回头再看看，再涨一涨姿势
Dialogue: 0,0:07:42.94,0:07:47.45,yahei,,0,0,0,,就先这样吧我们先继续
Dialogue: 0,0:07:47.45,0:07:56.00,yahei,,0,0,0,,接着我需要获取一个Geolocator的示例
Dialogue: 0,0:07:56.00,0:08:03.11,yahei,,0,0,0,,直接添加var geolocator= new Geolocator.
Dialogue: 0,0:08:03.11,0:08:14.85,yahei,,0,0,0,,然后通过对象初始化语法（object initializer syntax）\N来获取DesiredAccuracyInMeters（以米为计量单位的理想准确度）
Dialogue: 0,0:08:14.85,0:08:19.54,yahei,,0,0,0,,就设为0，其实就是“把你能完成的都扔过来吧”
Dialogue: 0,0:08:19.54,0:08:25.60,yahei,,0,0,0,,当然我也可以更明确一点，比如设置准确度为一米
Dialogue: 0,0:08:25.60,0:08:34.74,yahei,,0,0,0,,10米，或者100米\N不过现在就只是默认设置，能完成什么样就什么样就好
Dialogue: 0,0:08:34.74,0:08:41.14,yahei,,0,0,0,,这些都做完了，接下来我需要获取一个position（位置）
Dialogue: 0,0:08:41.14,0:08:49.40,yahei,,0,0,0,,并且发出指令“Geolocator，获取Geoposition async“
Dialogue: 0,0:08:49.54,0:08:54.57,yahei,,0,0,0,,接着我要返回这个position
Dialogue: 0,0:08:54.57,0:09:02.25,yahei,,0,0,0,,这个position是一个geoposition型，也就是说这里其实存在的是一个geoposition
Dialogue: 0,0:09:02.25,0:09:04.25,yahei,,0,0,0,,这里的void就不要了
Dialogue: 0,0:09:04.25,0:09:13.94,yahei,,0,0,0,,然后需要返回一个任务
Dialogue: 0,0:09:13.94,0:09:19.34,yahei,,0,0,0,,也就是承诺将来会返回一个geoposition
Dialogue: 0,0:09:19.34,0:09:22.65,yahei,,0,0,0,,啊看起来它拒绝呢
Dialogue: 0,0:09:28.37,0:09:33.91,yahei,,0,0,0,,原来是忘记加await了
Dialogue: 0,0:09:33.91,0:09:39.02,yahei,,0,0,0,,好哒这就是我们所有获取当前定位的步骤
Dialogue: 0,0:09:39.02,0:09:52.94,yahei,,0,0,0,,因为我们有这个位置，所以直接设置
Dialogue: 0,0:09:52.94,0:09:57.34,yahei,,0,0,0,,var position = locationManager.GetPosition()
Dialogue: 0,0:09:57.34,0:10:02.34,yahei,,0,0,0,,这两个都可以设为await
Dialogue: 0,0:10:03.97,0:10:07.94,yahei,,0,0,0,,现在有了这个，我们就可以做些别的了
Dialogue: 0,0:10:07.94,0:10:25.97,yahei,,0,0,0,,在GetWeather里，我们修改为\N(postion.Coordinate.Latitude, position.Coordinate.Longitude) 
Dialogue: 0,0:10:25.97,0:10:30.25,yahei,,0,0,0,,欸出现了绿色下划线，我们来看一下
Dialogue: 0,0:10:32.25,0:10:36.51,yahei,,0,0,0,,哦是obsolete，原来也碰到过
Dialogue: 0,0:10:36.51,0:10:42.40,yahei,,0,0,0,,这儿的问题在于他们认为在win8.1之后可能不能使用
Dialogue: 0,0:10:42.42,0:10:47.31,yahei,,0,0,0,,而我并不知道在win10中是怎样替换的
Dialogue: 0,0:10:47.31,0:10:53.22,yahei,,0,0,0,,其实这段代码我也是在windows文档中找到的
Dialogue: 0,0:10:53.22,0:10:58.91,yahei,,0,0,0,,可能他们还没来得及修改，你用到的时候可能就不同啦
Dialogue: 0,0:10:58.91,0:11:06.48,yahei,,0,0,0,,你们注意这块咯，可能会有变化
Dialogue: 0,0:11:06.48,0:11:11.65,yahei,,0,0,0,,你们真正用的时候可能就不是这样了，不过现在先这样啦
Dialogue: 0,0:11:11.65,0:11:17.11,yahei,,0,0,0,,我们先设一个断点，我还挺想看看这里的状况的
Dialogue: 0,0:11:22.00,0:11:34.40,yahei,,0,0,0,,需要注意的是当我点击”获取天气“时，我请求了接入实时位置性能
Dialogue: 0,0:11:34.40,0:11:42.62,yahei,,0,0,0,,它会问”你是否同意程序获取当前位置？“\N我可以到设置里再改，不过现在就选择是
Dialogue: 0,0:11:42.62,0:11:47.51,yahei,,0,0,0,,现在我允许接入了，它就会开始获取位置了
Dialogue: 0,0:11:47.51,0:11:52.00,yahei,,0,0,0,,鼠标滑过，看起来我的纬度是32.98
Dialogue: 0,0:11:52.00,0:11:54.00,yahei,,0,0,0,,经度是-96
Dialogue: 0,0:11:54.00,0:11:56.51,yahei,,0,0,0,,看起来不错，运行一下试试
Dialogue: 0,0:11:56.65,0:11:59.82,yahei,,0,0,0,,【Dallas乡村，78华氏度，小雨】\N嗯不错
Dialogue: 0,0:11:59.82,0:12:02.51,yahei,,0,0,0,,我们的进程相当不错
Dialogue: 0,0:12:02.51,0:12:08.02,yahei,,0,0,0,,这节课就告一段落，不过接下来我还要提到这部分
Dialogue: 0,0:12:08.02,0:12:14.22,yahei,,0,0,0,,因为我想在手机，手机模拟器上运行试试，并且改变位置
Dialogue: 0,0:12:14.22,0:12:20.34,yahei,,0,0,0,,到时候我们可以在西雅图，纽约或者芝加哥来看看程序运行的怎么样
Dialogue: 0,0:12:20.34,0:12:26.51,yahei,,0,0,0,,这样我们就能更全面的测试了\N并且手机模拟器也能很好的完成测试
Dialogue: 0,0:12:26.51,0:12:29.82,yahei,,0,0,0,,那下节课见咯
Dialogue: 0,0:12:29.82,0:12:31.82,yahei,,0,0,0,,巨硬大法好！
