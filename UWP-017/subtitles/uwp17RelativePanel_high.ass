[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1918
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: C:/Users/doubl/Desktop/uwp17RelativePanel_high.mp4
Video File: C:/Users/doubl/Desktop/uwp17RelativePanel_high.mp4
Video AR Mode: 4
Video AR Value: 1.775926
Video Zoom Percent: 0.375000
Scroll Position: 103
Active Line: 108
Video Position: 28510

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:04.55,0:00:08.15,Default,,0,0,0,,嗨，我是来自 www.learnvisualstudio.net 的 Bob Tabor。
Dialogue: 0,0:00:08.15,0:00:10.52,Default,,0,0,0,,关于 Layout 的部分我们已经讲得七七八八了。
Dialogue: 0,0:00:11.12,0:00:15.76,Default,,0,0,0,,接下来我们要讲 UWP 引入的新 Layout Control API。
Dialogue: 0,0:00:16.03,0:00:20.00,Default,,0,0,0,,你可能会疑惑：为什么会有新的 Layout Control 呢？
Dialogue: 0,0:00:20.00,0:00:28.04,Default,,0,0,0,,这和之前用于构建 Windows 8.1/Windows Phone 8.1 Store App 用的 API 又有什么区别呢？
Dialogue: 0,0:00:28.54,0:00:31.41,Default,,0,0,0,,主要有两方面的原因：
Dialogue: 0,0:00:31.64,0:00:38.45,Default,,0,0,0,,首先，我们要用新的 API 构建具有 Windows 10 视觉风格的 App。
Dialogue: 0,0:00:39.08,0:00:47.06,Default,,0,0,0,,其次，我们需要构建适应不同设备类型和屏幕尺寸的 App（参见 UWP 18 视频）。
Dialogue: 0,0:00:47.69,0:00:56.60,Default,,0,0,0,,如你所见，我打开了 Windows 10 的预装程序之一 —— “财经” 应用。
Dialogue: 0,0:00:56.70,0:00:59.94,Default,,0,0,0,,除了“财经”以外，Windows 10 还有一些自带的应用如：资讯，新闻和体育等。
Dialogue: 0,0:01:00.61,0:01:12.98,Default,,0,0,0,,它们在外观和功能上有一些 Windows 10 应用间共通的独特性。
Dialogue: 0,0:01:13.49,0:01:16.56,Default,,0,0,0,,在接下来的几节课程中，我将逐一指出这些特性，
Dialogue: 0,0:01:16.72,0:01:27.83,Default,,0,0,0,,并教大家如何使用 UWP 自带的控件（Control）来重现这些效果。
Dialogue: 0,0:01:27.83,0:01:33.91,Default,,0,0,0,,当我说到 quarrel 的时候，我指的是应用的顶部和左侧，
Dialogue: 0,0:01:34.37,0:01:37.61,Default,,0,0,0,,这个区域将被用于提供应用内的导航和服务。
Dialogue: 0,0:01:37.61,0:01:43.72,Default,,0,0,0,,这种导航模式我们称为 “hamburger navigation”（汉堡导航，又译抽屉导航）
Dialogue: 0,0:01:43.98,0:01:54.96,Default,,0,0,0,,“汉堡” 一词指的是：垂直叠放的三条水平线段组成的图标（见“财经”应用左上角）
Dialogue: 0,0:01:55.19,0:02:08.77,Default,,0,0,0,,当你点击该图标的时候，它就会打开一个独立的面板（又称抽屉）用于展示应用内导航的目标。
Dialogue: 0,0:02:09.01,0:02:16.65,Default,,0,0,0,,在抽屉展开的模式下，目标处的图标和标题都会显示出来。
Dialogue: 0,0:02:16.95,0:02:22.42,Default,,0,0,0,,无论是在展开或收拢模式下，我们都可以通过点击项目来进行应用内的导航。
Dialogue: 0,0:02:22.42,0:02:27.13,Default,,0,0,0,,在收拢模式下，我们仅仅能看见项目的图标，但
Dialogue: 0,0:02:27.13,0:02:34.57,Default,,0,0,0,,目前选中的项目会被应用的主题色高亮。
Dialogue: 0,0:02:35.43,0:02:50.25,Default,,0,0,0,,接下来，看这儿~ App 的顶栏会随着应用的不同而变化，但有一些共性，比如右边的搜索框。
Dialogue: 0,0:02:50.75,0:02:57.52,Default,,0,0,0,,比如现在我们可以用它来搜索某个公司的市场价格。
Dialogue: 0,0:02:57.86,0:03:17.41,Default,,0,0,0,,在导航栏左侧，我们可以看见一个标题，以及一个用于后退回到主页的按钮。
Dialogue: 0,0:03:18.71,0:03:26.59,Default,,0,0,0,,除了以上的特性，UWP 应用还有一些特征，比如：卡片式设计。
Dialogue: 0,0:03:27.25,0:03:46.14,Default,,0,0,0,,这些卡片会随着窗口宽度改变大小，并自行排版。
Dialogue: 0,0:03:46.61,0:03:51.24,Default,,0,0,0,,教会大家实现卡片式布局也将是我们课程的一部分。
Dialogue: 0,0:03:51.54,0:03:55.35,Default,,0,0,0,,OK，让我把它关了，我们开始干活吧。
Dialogue: 0,0:03:55.35,0:04:08.23,Default,,0,0,0,,第一个要讲的控件是 Relative Panel，它是一个用于非线性 UI（用户交互界面）的控件。
Dialogue: 0,0:04:09.19,0:04:20.44,Default,,0,0,0,,“非线性” 关系指的是：元素之间的关系不是堆叠的。
Dialogue: 0,0:04:20.61,0:04:26.51,Default,,0,0,0,,所以这种样式的 UI 很难用 StackPanel 和 Grid 来实现。
Dialogue: 0,0:04:27.11,0:04:34.02,Default,,0,0,0,,当然，刚刚看见的 Layout 仍然有可能用 StackPanel 和 Grid 来实现，
Dialogue: 0,0:04:34.12,0:04:39.36,Default,,0,0,0,,但是，新控件可以更加优雅地做到这一切。
Dialogue: 0,0:04:39.76,0:04:49.13,Default,,0,0,0,,RelativePanel 定义了一块用于放置，对齐子元素与控件的区域。
Dialogue: 0,0:04:49.33,0:04:55.14,Default,,0,0,0,,在这块区域内你可以定义子元素间的位置关系，也可以定义子元素与父面板间的位置关系。
Dialogue: 0,0:04:55.51,0:05:02.28,Default,,0,0,0,,用于在 RelativePanel 内定位的附加属性（Attach Property）有三大类：
Dialogue: 0,0:05:02.51,0:05:15.43,Default,,0,0,0,,1. 面板对齐关系（Panel Alignment Relationship）：如将控件与面板顶端对齐，左对齐等。
Dialogue: 0,0:05:15.93,0:05:30.98,Default,,0,0,0,,2. 同级对齐关系（Sibling Alignment Relationship）：用于同级元素的对齐，如控件间的顶端对齐，左对齐等。
Dialogue: 0,0:05:31.21,0:05:45.76,Default,,0,0,0,,3. 同级位置关系（Sibling Position Relationship）：用于放置同级元素，如控件的上，下，左，右等。
Dialogue: 0,0:05:45.86,0:05:56.60,Default,,0,0,0,,在这里我打开了一个名为 RelativePanel 的工程，并且我要开始写代码啦~
Dialogue: 0,0:05:56.90,0:06:22.26,Default,,0,0,0,,首先我要定义一些行，然后添加一个 RelativePanel 到 Grid Row 1。这样就会有一些有趣的事情发生啦~
Dialogue: 0,0:06:23.19,0:06:33.20,Default,,0,0,0,,接着我指定该 RelativePanel 的最小高度为 300 像素。
Dialogue: 0,0:06:33.34,0:06:45.65,Default,,0,0,0,,接下来我要加入一些矩形，第一个矩形是红色的，并且我把 RelativePanel 设置为右对齐。
Dialogue: 0,0:06:50.99,0:07:12.84,Default,,0,0,0,,所以我们这里有三行，中间是 RelativePanel，矩形和它右对齐。
Dialogue: 0,0:07:13.24,0:07:30.83,Default,,0,0,0,,接下来我加入了一个蓝色矩形，并让它和红色矩形左侧对齐。现在无论我们怎么缩放窗口，
Dialogue: 0,0:07:34.70,0:07:47.98,Default,,0,0,0,,无论窗口大小，蓝色矩形永远在红色矩形左边，红色矩形永远紧贴窗口右侧。
Dialogue: 0,0:07:49.38,0:07:59.12,Default,,0,0,0,,下一步，我们要展示如何设置多重 Attach Property。
Dialogue: 0,0:07:59.12,0:08:16.94,Default,,0,0,0,,此时我们加入一个绿色矩形，并将其中心与红色矩形中心对齐，且和窗口水平中心对齐。
Dialogue: 0,0:08:17.51,0:08:28.39,Default,,0,0,0,,接下来我们看看效果怎么样吧~
Dialogue: 0,0:08:29.35,0:08:36.13,Default,,0,0,0,,此时我们用不同的窗口大小来测试，
Dialogue: 0,0:08:36.13,0:08:50.28,Default,,0,0,0,,正如刚刚设定的，绿色矩形中心和红色矩形中心对齐，且水平居中于窗口。
Dialogue: 0,0:08:52.01,0:08:55.68,Default,,0,0,0,,让我们加速一把，这回我要同时复制粘贴两个元素进去。
Dialogue: 0,0:08:56.55,0:09:07.53,Default,,0,0,0,,一个黄色的，和一个紫色的矩形。让我们看看黄色的矩形吧，
Dialogue: 0,0:09:09.09,0:09:13.50,Default,,0,0,0,,我们设置它的最小宽度和最小高度为 50 像素，
Dialogue: 0,0:09:14.17,0:09:25.78,Default,,0,0,0,,它的底部和 Relative Panel 的底部对齐，顶部和紫色的矩形对齐。
Dialogue: 0,0:09:25.78,0:09:42.69,Default,,0,0,0,,紫色的矩形我们设置为右侧对齐于红色矩形的右侧，左侧对齐于绿色矩形的左侧。
Dialogue: 0,0:09:42.69,0:09:48.17,Default,,0,0,0,,现在随着我们改变窗口的大小，这个控件（紫色矩形）的大小也会随着改变。
Dialogue: 0,0:09:48.17,0:10:01.58,Default,,0,0,0,,如你所见，我们在调节窗体大小的时候，控件的大小也会随之改变。
Dialogue: 0,0:10:01.58,0:10:07.65,Default,,0,0,0,,你能看见这个黄色的矩形和紫色的矩形如何变大~变大~变大~
Dialogue: 0,0:10:07.65,0:10:12.19,Default,,0,0,0,,这就是 RelativePanel 的魅力！
Dialogue: 0,0:10:12.19,0:10:16.69,Default,,0,0,0,,你可以设置控件间相对的关系，或者它们与窗口的关系，
Dialogue: 0,0:10:16.69,0:10:19.73,Default,,0,0,0,,然后它们就会自适应窗口大小。
Dialogue: 0,0:10:19.73,0:10:22.80,Default,,0,0,0,,所以这些东西都是啥？为什么这些东西很重要呢？
Dialogue: 0,0:10:22.80,0:10:27.14,Default,,0,0,0,,原因如下，等会儿我保存一下……
Dialogue: 0,0:10:28.37,0:10:31.88,Default,,0,0,0,,让我们看看我的另一个项目，
Dialogue: 0,0:10:32.48,0:10:35.11,Default,,0,0,0,,搜索栏！
Dialogue: 0,0:10:35.41,0:10:44.96,Default,,0,0,0,,你可以在本课后找到下载的地方，
Dialogue: 0,0:10:47.53,0:10:57.37,Default,,0,0,0,,我们看见了一个 Windows 10 应用的启动，右上部有一个搜索栏。
Dialogue: 0,0:10:57.37,0:11:08.88,Default,,0,0,0,,虽然看起来完成度不高，但无论窗口宽度如何，它始终位于右上角。
Dialogue: 0,0:11:08.88,0:11:15.72,Default,,0,0,0,,标题栏也一直在左上角，并且有一个固定在底部的状态栏。
Dialogue: 0,0:11:15.72,0:11:24.23,Default,,0,0,0,,这些状态栏上的信息有的位于左侧，有的居中，有的位于右侧。
Dialogue: 0,0:11:24.23,0:11:27.20,Default,,0,0,0,,让我们看看如何用 XMAL 实现这个效果。
Dialogue: 0,0:11:29.03,0:11:33.10,Default,,0,0,0,,让我们打开 Mainpage 文件，
Dialogue: 0,0:11:35.37,0:11:49.22,Default,,0,0,0,,我们一共分了三行，顶部和底部设为自动（Auto），中间设为 *，没有进行改变。
Dialogue: 0,0:11:49.22,0:11:54.53,Default,,0,0,0,,我们现在顶部栏里新建了一个 RelativePanel，
Dialogue: 0,0:11:54.53,0:11:58.53,Default,,0,0,0,,你可以看见我们设置了按钮以及文本框，
Dialogue: 0,0:11:59.03,0:12:03.90,Default,,0,0,0,,搜索按钮和面板右侧对齐，所以它在最右侧。
Dialogue: 0,0:12:03.90,0:12:15.05,Default,,0,0,0,,文本框则会和搜索按钮左对齐，所以无论如何它都会在搜索按钮左边。
Dialogue: 0,0:12:15.05,0:12:26.59,Default,,0,0,0,,同时我们把文本框内部的 “Search” 字段也设置为和文本框的左侧对齐。
Dialogue: 0,0:12:26.59,0:12:36.80,Default,,0,0,0,,另一个文本框（标题）我们没有设置，所以默认位于面板的左上角。
Dialogue: 0,0:12:37.90,0:12:43.57,Default,,0,0,0,,下一步，你可以看见我们在底部使用了一个静态栏，
Dialogue: 0,0:12:43.57,0:12:45.57,Default,,0,0,0,,我使用了一个称为 Border 的对象，
Dialogue: 0,0:12:45.57,0:12:56.85,Default,,0,0,0,,Border 提供了调节背景色，以及一些其它特性的能力，
Dialogue: 0,0:12:56.85,0:13:00.06,Default,,0,0,0,,我们放一个 RelativePanel 进去，
Dialogue: 0,0:13:03.66,0:13:06.16,Default,,0,0,0,,然后在里面我们可以放我们的字段。
Dialogue: 0,0:13:06.86,0:13:10.57,Default,,0,0,0,,那个 RelativePanel 共有三个部分，
Dialogue: 0,0:13:10.57,0:13:32.86,Default,,0,0,0,,面板的左侧是一个内容为 Item 的文本框，接着是一个内容为 10 的文本框。
Dialogue: 0,0:13:32.86,0:13:38.43,Default,,0,0,0,,右侧原理一样，但是方向相反。
Dialogue: 0,0:13:38.43,0:13:41.50,Default,,0,0,0,,对于中间的部分，我使用了一个 StackPanel，
Dialogue: 0,0:13:41.50,0:13:57.82,Default,,0,0,0,,因为如果你将一个文本框设为剧中的话，那么与它相邻的文本框反而就偏向一侧了。
Dialogue: 0,0:13:58.32,0:14:04.69,Default,,0,0,0,,那看起来蛮奇怪的，而用 StackPanel 就没有这个问题。
Dialogue: 0,0:14:05.02,0:14:08.83,Default,,0,0,0,,这回你无论在里面放几个文本框都可以保证居中啦~
Dialogue: 0,0:14:10.53,0:14:14.20,Default,,0,0,0,,关于 RelativePanel 我要说的最后一件事是：
Dialogue: 0,0:14:14.20,0:14:19.87,Default,,0,0,0,,你可能因为设置过于复杂的相对位置关系而造成一些麻烦，
Dialogue: 0,0:14:21.61,0:14:31.65,Default,,0,0,0,,比如 1 在 2 的左边，3 在 2 的左边，4 在 3 的左边，1 在 4 的左边……（矛盾了吧）
Dialogue: 0,0:14:31.65,0:14:38.09,Default,,0,0,0,,当然你可以对一个项目的同一条边设置多重的关系，
Dialogue: 0,0:14:38.09,0:14:44.06,Default,,0,0,0,,但这可能会导致关系间相互冲突。
Dialogue: 0,0:14:44.06,0:14:49.97,Default,,0,0,0,,为了避免这种情况的发生，我们有一定的处理顺序，就像你解数学题一样，
Dialogue: 0,0:14:49.97,0:14:55.47,Default,,0,0,0,,程序可以检测操作的顺序，
Dialogue: 0,0:14:55.47,0:14:59.81,Default,,0,0,0,,并解码这些程序。
Dialogue: 0,0:15:01.25,0:15:06.98,Default,,0,0,0,,顺序如下：1. 对齐到面板（优先级最高）对齐到面板的左侧或者右侧，
Dialogue: 0,0:15:07.89,0:15:16.53,Default,,0,0,0,,2. 同级对齐关系，控件顶端对齐，左侧对齐等，
Dialogue: 0,0:15:16.53,0:15:24.40,Default,,0,0,0,,3. 优先级最低的是同级位置关系，如定位到控件的上面，下面，或左侧，
Dialogue: 0,0:15:24.40,0:15:31.21,Default,,0,0,0,,不管怎么说，在接下来的课程中，我们还会不断地接触到 RelativePanel 的概念，
Dialogue: 0,0:15:31.21,0:15:39.38,Default,,0,0,0,,它是一个优雅的，简单易用的用于对齐控件，或者面板的排版工具。
Dialogue: 0,0:15:39.38,0:15:41.95,Default,,0,0,0,,这是在构建 Windows 10 App 的过程中所必须的。
Dialogue: 0,0:15:41.95,0:15:49.63,Default,,0,0,0,,下节课我们将继续深入解析 UWP 的 Layout API，到时候见！
Dialogue: 0,0:15:49.63,0:15:51.30,Default,,0,0,0,,谢谢大家的观看！
