[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: uwp42DataTemplates_high.mp4
Video File: uwp42DataTemplates_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.375000
Scroll Position: 202
Active Line: 203
Video Position: 16765

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Microsoft YaHei UI,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.40,0:00:04.40,Default,,0,0,0,,翻译：陈大蒜    审核：scripter    压制：Angiin
Dialogue: 0,0:00:04.40,0:00:07.94,Default,,0,0,0,,大家好~又是我~Bob萌神
Dialogue: 0,0:00:07.94,0:00:10.12,Default,,0,0,0,,这节课我打算讲一个你要进行的挑战
Dialogue: 0,0:00:10.12,0:00:13.41,Default,,0,0,0,,如果你打算
Dialogue: 0,0:00:15.03,0:00:18.06,Default,,0,0,0,,使用VisualStateManager（视图管理器）以及AdaptiveTriggers （自适应触发器）来
Dialogue: 0,0:00:18.06,0:00:22.58,Default,,0,0,0,,调整你的数据模板中的控件
Dialogue: 0,0:00:22.58,0:00:24.26,Default,,0,0,0,,你的GridView, List View Control（网格视图，列表视图控制）
Dialogue: 0,0:00:24.26,0:00:27.26,Default,,0,0,0,,所有需要控件模板的东西
Dialogue: 0,0:00:27.26,0:00:29.12,Default,,0,0,0,,所以，你可以看见这有另一个版本的
Dialogue: 0,0:00:29.12,0:00:33.37,Default,,0,0,0,,通讯录管理应用
Dialogue: 0,0:00:33.37,0:00:35.19,Default,,0,0,0,,还有，理想的情况下是，不管什么时候
Dialogue: 0,0:00:35.19,0:00:37.85,Default,,0,0,0,,当我们拉伸这个窗体的时候，这些头像
Dialogue: 0,0:00:37.85,0:00:42.11,Default,,0,0,0,,图片会变得更大。我试了一下
Dialogue: 0,0:00:42.11,0:00:44.46,Default,,0,0,0,,但现在它还不能正常工作
Dialogue: 0,0:00:44.46,0:00:48.07,Default,,0,0,0,,你可以看见，无论我怎么操作，它们还是保持原来的大小
Dialogue: 0,0:00:48.07,0:00:49.64,Default,,0,0,0,,现在，如果你看过这些代码
Dialogue: 0,0:00:49.64,0:00:52.00,Default,,0,0,0,,你可以看见我添加了一个
Dialogue: 0,0:00:52.00,0:00:54.60,Default,,0,0,0,,一个视图管理器，里面包含一个视觉状态组
Dialogue: 0,0:00:54.60,0:00:57.77,Default,,0,0,0,,这里有两个视觉状态，一个窄布局以及一个宽布局
Dialogue: 0,0:00:57.77,0:01:00.66,Default,,0,0,0,,当在窄布局的时候，我希望
Dialogue: 0,0:01:00.66,0:01:03.47,Default,,0,0,0,,这些头像的高度和宽度都是100
Dialogue: 0,0:01:03.47,0:01:05.73,Default,,0,0,0,,当处在宽布局的时候，我希望宽度
Dialogue: 0,0:01:05.73,0:01:07.33,Default,,0,0,0,,和高度都是200
Dialogue: 0,0:01:07.33,0:01:08.84,Default,,0,0,0,,那么？为什么它没有正常工作呢？
Dialogue: 0,0:01:08.84,0:01:12.87,Default,,0,0,0,,实际上，它现在是不能正常工作的
Dialogue: 0,0:01:12.87,0:01:16.06,Default,,0,0,0,,我们在这里使用到的技术
Dialogue: 0,0:01:16.06,0:01:20.12,Default,,0,0,0,,这几行我们定义了一个数据模板
Dialogue: 0,0:01:20.12,0:01:22.78,Default,,0,0,0,,实际上我需要做的事是
Dialogue: 0,0:01:22.78,0:01:25.22,Default,,0,0,0,,把这个StackPanel 从数据模板主体中抽离出来
Dialogue: 0,0:01:25.22,0:01:28.98,Default,,0,0,0,,把它放到一个独立的代码文件中，然后
Dialogue: 0,0:01:28.98,0:01:32.73,Default,,0,0,0,,在这个独立的代码文件中，我可以使用
Dialogue: 0,0:01:32.73,0:01:35.10,Default,,0,0,0,,视觉管理器和自适应触发器
Dialogue: 0,0:01:35.10,0:01:39.37,Default,,0,0,0,,这些东西根据我的需要去缩放
Dialogue: 0,0:01:39.38,0:01:43.14,Default,,0,0,0,,所以，这就是我这节课要做的东西
Dialogue: 0,0:01:43.14,0:01:46.10,Default,,0,0,0,,首先，让我先添加一个UserControl（用户控制）到
Dialogue: 0,0:01:46.10,0:01:46.72,Default,,0,0,0,,我的项目中
Dialogue: 0,0:01:46.72,0:01:48.33,Default,,0,0,0,,一个UserControl就像一个页面那样
Dialogue: 0,0:01:48.33,0:01:49.34,Default,,0,0,0,,它只是更小
Dialogue: 0,0:01:49.34,0:01:51.36,Default,,0,0,0,,它可以被重复使用
Dialogue: 0,0:01:51.36,0:01:53.52,Default,,0,0,0,,通常只需要一个代码片段
Dialogue: 0,0:01:53.52,0:01:55.88,Default,,0,0,0,,在这里应该就是页面的布局
Dialogue: 0,0:01:56.19,0:01:58.48,Default,,0,0,0,,在这里我要添加一个新的项目
Dialogue: 0,0:01:58.48,0:02:00.82,Default,,0,0,0,,在添加新项目对话框中，我要确保
Dialogue: 0,0:02:00.82,0:02:02.60,Default,,0,0,0,,选择了User Control，然后我要起一个名字
Dialogue: 0,0:02:02.60,0:02:06.30,Default,,0,0,0,,叫做 ContactTemplate，因为这个是
Dialogue: 0,0:02:06.30,0:02:10.32,Default,,0,0,0,,我用来做各个通讯录的模板
Dialogue: 0,0:02:11.75,0:02:12.79,Default,,0,0,0,,好了！
Dialogue: 0,0:02:12.79,0:02:16.40,Default,,0,0,0,,先转到这里，把光标移到这里
Dialogue: 0,0:02:16.74,0:02:18.40,Default,,0,0,0,,现在我要做的是回到MainPage.xaml
Dialogue: 0,0:02:18.40,0:02:21.56,Default,,0,0,0,,然后在MainPage.xaml,我打算
Dialogue: 0,0:02:21.56,0:02:25.11,Default,,0,0,0,,把这里的这些剪切 ，在数据模板开始标签
Dialogue: 0,0:02:25.11,0:02:27.35,Default,,0,0,0,,和数据模板关闭标签之间，然后回到
Dialogue: 0,0:02:27.35,0:02:29.67,Default,,0,0,0,,新的ContactTemplate Page, 然后
Dialogue: 0,0:02:29.67,0:02:33.76,Default,,0,0,0,,删除Grid标签，把刚才复制的StackPanel粘贴进来
Dialogue: 0,0:02:33.76,0:02:34.74,Default,,0,0,0,,Okay?
Dialogue: 0,0:02:34.74,0:02:37.35,Default,,0,0,0,,所以现在我们有了一个好的开始
Dialogue: 0,0:02:37.35,0:02:39.80,Default,,0,0,0,,现在我需要引用一些东西
Dialogue: 0,0:02:39.80,0:02:42.64,Default,,0,0,0,,在数据模板里面引用一些东西
Dialogue: 0,0:02:42.65,0:02:46.34,Default,,0,0,0,,我需要引用本地的命名空间
Dialogue: 0,0:02:46.34,0:02:50.44,Default,,0,0,0,,本地，就像之前定义的那样，
Dialogue: 0,0:02:50.44,0:02:52.55,Default,,0,0,0,,本地的命名空间，无论你的项目名是什么
Dialogue: 0,0:02:52.55,0:02:54.39,Default,,0,0,0,,UserControlDataTemplate，就像你的
Dialogue: 0,0:02:54.39,0:02:58.46,Default,,0,0,0,,UserControl在同一个目录下
Dialogue: 0,0:02:58.46,0:03:00.75,Default,,0,0,0,,以及其他那些在项目里的文件那样
Dialogue: 0,0:03:00.75,0:03:02.29,Default,,0,0,0,,如果你打算把这些都放进一个文件夹里，那么
Dialogue: 0,0:03:02.29,0:03:04.90,Default,,0,0,0,,你需要引用一个不同的命名空间
Dialogue: 0,0:03:04.90,0:03:06.72,Default,,0,0,0,,在你的xaml页面头部
Dialogue: 0,0:03:06.72,0:03:08.09,Default,,0,0,0,,好了，让我们继续吧
Dialogue: 0,0:03:08.09,0:03:12.04,Default,,0,0,0,,ContactTemplate,我不确定需要这样做
Dialogue: 0,0:03:12.05,0:03:14.47,Default,,0,0,0,,但我还是要设置 HorizontalAlignment
Dialogue: 0,0:03:14.47,0:03:16.50,Default,,0,0,0,,HorizontalAlignment="Stretch" 还有VerticalAlignment
Dialogue: 0,0:03:16.50,0:03:17.64,Default,,0,0,0,,VerticalAlignment="Stretch".
Dialogue: 0,0:03:17.64,0:03:20.12,Default,,0,0,0,,（萌神吐槽模式）就像再说,
Dialogue: 0,0:03:20.12,0:03:23.03,Default,,0,0,0,,把所有能占的空间都占了把！
Dialogue: 0,0:03:23.03,0:03:27.32,Default,,0,0,0,,然后这就是我所有需要做的事了
Dialogue: 0,0:03:27.33,0:03:28.21,Default,,0,0,0,,好了
Dialogue: 0,0:03:28.21,0:03:30.55,Default,,0,0,0,,现在回到ContactTemplate页面，如果我们打算
Dialogue: 0,0:03:30.55,0:03:32.67,Default,,0,0,0,,运行这个应用，它不会成功工作
Dialogue: 0,0:03:32.67,0:03:33.81,Default,,0,0,0,,它甚至会报错
Dialogue: 0,0:03:33.81,0:03:34.88,Default,,0,0,0,,我们还需要
Dialogue: 0,0:03:34.88,0:03:36.21,Default,,0,0,0,,做一些更改
Dialogue: 0,0:03:36.22,0:03:38.35,Default,,0,0,0,,不过首先，还是试着运行一下
Dialogue: 0,0:03:38.35,0:03:40.01,Default,,0,0,0,,然后我们回来添加
Dialogue: 0,0:03:40.01,0:03:44.32,Default,,0,0,0,,视图管理器和自适应触发器
Dialogue: 0,0:03:44.32,0:03:48.12,Default,,0,0,0,,所以，我要做的第一件事是
Dialogue: 0,0:03:49.25,0:03:51.23,Default,,0,0,0,,使用这个对象的名字
Dialogue: 0,0:03:51.23,0:03:51.98,Default,,0,0,0,,那个我们用来绑定的
Dialogue: 0,0:03:51.98,0:03:55.06,Default,,0,0,0,,所以，这里是Contact.AvatarPath
Dialogue: 0,0:03:55.07,0:03:59.55,Default,,0,0,0,,Contact.AvatarPath, Contact.FirstName
Dialogue: 0,0:03:59.55,0:04:01.87,Default,,0,0,0,,Contact.LastName.
Dialogue: 0,0:04:01.87,0:04:03.09,Default,,0,0,0,,好了
Dialogue: 0,0:04:03.09,0:04:07.27,Default,,0,0,0,,然后在ContactTemplate的代码背后
Dialogue: 0,0:04:08.00,0:04:10.36,Default,,0,0,0,,我需要添加两个不同的东西
Dialogue: 0,0:04:10.36,0:04:12.63,Default,,0,0,0,,第一个我需要添加的东西是
Dialogue: 0,0:04:12.63,0:04:15.90,Default,,0,0,0,,我需要创建一个属性
Dialogue: 0,0:04:17.34,0:04:20.14,Default,,0,0,0,,Models.Contact,
Dialogue: 0,0:04:20.14,0:04:22.46,Default,,0,0,0,,只是 Models.
Dialogue: 0,0:04:22.46,0:04:25.78,Default,,0,0,0,,我可以用一个Using语句来定义它，但是
Dialogue: 0,0:04:25.78,0:04:29.42,Default,,0,0,0,,实际上，我只打算引用一下它
Dialogue: 0,0:04:29.42,0:04:32.98,Default,,0,0,0,,Models.Contact, 然后
Dialogue: 0,0:04:33.25,0:04:37.40,Default,,0,0,0,,我想给UserControl导出一个新的属性叫做Contact
Dialogue: 0,0:04:39.11,0:04:43.70,Default,,0,0,0,,然后添加一个get访问器
Dialogue: 0,0:04:43.71,0:04:45.76,Default,,0,0,0,,所以，这只是定义了一个
Dialogue: 0,0:04:45.76,0:04:48.55,Default,,0,0,0,,只读属性
Dialogue: 0,0:04:48.55,0:04:50.72,Default,,0,0,0,,然后，访问一个
Dialogue: 0,0:04:51.11,0:04:55.68,Default,,0,0,0,,this.DataContext as Models.Contact.
Dialogue: 0,0:04:56.23,0:04:59.84,Default,,0,0,0,,所以，实际上，这里要做的事，就是无论你什么时候
Dialogue: 0,0:05:01.61,0:05:04.45,Default,,0,0,0,,无论是哪个控制
Dialogue: 0,0:05:04.45,0:05:08.57,Default,,0,0,0,,ContactTemplate.xaml页面，当它需要
Dialogue: 0,0:05:08.57,0:05:13.10,Default,,0,0,0,,获取数据，它会得到一个Contact类型的数据
Dialogue: 0,0:05:14.00,0:05:16.52,Default,,0,0,0,,然后它会从
Dialogue: 0,0:05:16.52,0:05:18.91,Default,,0,0,0,,会从UserControl的DataContext中获取数据
Dialogue: 0,0:05:18.91,0:05:21.06,Default,,0,0,0,,UserControl中的DataContext
Dialogue: 0,0:05:21.07,0:05:24.05,Default,,0,0,0,,会从 MainPage.xaml传递到
Dialogue: 0,0:05:24.05,0:05:27.85,Default,,0,0,0,,无论在哪获取数据, 基本上会传递到
Dialogue: 0,0:05:27.85,0:05:29.64,Default,,0,0,0,,数据模板中
Dialogue: 0,0:05:29.64,0:05:31.28,Default,,0,0,0,,所以，你能做的事是
Dialogue: 0,0:05:31.28,0:05:34.53,Default,,0,0,0,,把这个当成代码模板，复制粘贴下来
Dialogue: 0,0:05:34.53,0:05:36.26,Default,,0,0,0,,我们会把它添加到cheat sheet里的
Dialogue: 0,0:05:36.26,0:05:37.82,Default,,0,0,0,,你不需要知道它实际的原理
Dialogue: 0,0:05:37.82,0:05:38.90,Default,,0,0,0,,或者是怎么工作的
Dialogue: 0,0:05:38.90,0:05:41.34,Default,,0,0,0,,只需要知道你必须有这段代码
Dialogue: 0,0:05:41.34,0:05:45.09,Default,,0,0,0,,同样的，在UserControl的
Dialogue: 0,0:05:45.09,0:05:47.05,Default,,0,0,0,,构造函数里，你也需要
Dialogue: 0,0:05:47.05,0:05:50.15,Default,,0,0,0,,做多一个更改
Dialogue: 0,0:05:50.15,0:05:52.71,Default,,0,0,0,,当DataContext发生变化的时候
Dialogue: 0,0:05:52.71,0:05:55.27,Default,,0,0,0,,会有一个对应的DataContextChanged事件, 我们需要
Dialogue: 0,0:05:55.27,0:05:59.72,Default,,0,0,0,,写的东西就是这个lambda表达式
Dialogue: 0,0:06:02.22,0:06:05.83,Default,,0,0,0,,这会调用Bindings.Update()函数
Dialogue: 0,0:06:05.83,0:06:07.96,Default,,0,0,0,,现在这个Update就已经
Dialogue: 0,0:06:07.96,0:06:11.47,Default,,0,0,0,,在内部为我们再一次的生成了
Dialogue: 0,0:06:11.47,0:06:13.67,Default,,0,0,0,,因为x:Bind语句, 就像
Dialogue: 0,0:06:13.67,0:06:16.50,Default,,0,0,0,,我们之前说到的那样，本质上
Dialogue: 0,0:06:16.50,0:06:19.16,Default,,0,0,0,,它会说"嘿，去把你相关联的数据
Dialogue: 0,0:06:19.16,0:06:20.85,Default,,0,0,0,,更新了吧"
Dialogue: 0,0:06:20.85,0:06:23.94,Default,,0,0,0,,再一次的，这些可以看成是代码模板
Dialogue: 0,0:06:23.94,0:06:25.73,Default,,0,0,0,,我们会把它们添加到cheat sheet里的.
Dialogue: 0,0:06:25.73,0:06:27.43,Default,,0,0,0,,你不需要知道太多它
Dialogue: 0,0:06:27.43,0:06:28.96,Default,,0,0,0,,是怎么工作就能使用它
Dialogue: 0,0:06:28.96,0:06:30.47,Default,,0,0,0,,我想这就是关键的地方了
Dialogue: 0,0:06:30.48,0:06:34.25,Default,,0,0,0,,但是现在我们已经添加了这两行代码
Dialogue: 0,0:06:34.25,0:06:37.58,Default,,0,0,0,,现在我们需要对
Dialogue: 0,0:06:37.58,0:06:40.21,Default,,0,0,0,,x:Bind 语句进行对应的修改
Dialogue: 0,0:06:40.21,0:06:42.96,Default,,0,0,0,,在这里我们需要绑定一个实际
Dialogue: 0,0:06:42.96,0:06:46.03,Default,,0,0,0,,数据类型到对应的property, 现在我们需要
Dialogue: 0,0:06:46.03,0:06:48.26,Default,,0,0,0,,再次尝试运行这个应用，看看是否正常
Dialogue: 0,0:06:48.26,0:06:50.54,Default,,0,0,0,,即使我们并没有做很大的改变
Dialogue: 0,0:06:50.54,0:06:52.05,Default,,0,0,0,,在功能上
Dialogue: 0,0:06:52.05,0:06:53.77,Default,,0,0,0,,那个我们稍后会进行
Dialogue: 0,0:06:53.78,0:06:55.35,Default,,0,0,0,,Ok，一切正常
Dialogue: 0,0:06:55.35,0:06:59.13,Default,,0,0,0,,我们会把它绑定到同样的ObservableCollection
Dialogue: 0,0:06:59.13,0:07:02.69,Default,,0,0,0,,还是在这里定义这个DataTemplate
Dialogue: 0,0:07:02.69,0:07:03.91,Default,,0,0,0,,在我们的UserControl里
Dialogue: 0,0:07:03.91,0:07:05.52,Default,,0,0,0,,然后下一步呢，就是
Dialogue: 0,0:07:05.52,0:07:08.80,Default,,0,0,0,,去定义一个视觉管理器，以便
Dialogue: 0,0:07:08.80,0:07:13.59,Default,,0,0,0,,当我们缩放窗体，
Dialogue: 0,0:07:16.45,0:07:18.20,Default,,0,0,0,,头像的图片尺寸会从
Dialogue: 0,0:07:18.20,0:07:21.41,Default,,0,0,0,,100, 100 变成200, 200.
Dialogue: 0,0:07:21.83,0:07:24.08,Default,,0,0,0,,现在需要做的就是粘贴一下
Dialogue: 0,0:07:24.08,0:07:24.92,Default,,0,0,0,,代码到这里进来
Dialogue: 0,0:07:24.92,0:07:28.16,Default,,0,0,0,,这跟我们已经有的一段代码很像
Dialogue: 0,0:07:28.16,0:07:30.44,Default,,0,0,0,,看看这里
Dialogue: 0,0:07:31.46,0:07:34.14,Default,,0,0,0,,yeah~就让我这样做吧！
Dialogue: 0,0:07:34.14,0:07:35.66,Default,,0,0,0,,面向复制粘贴编程~
Dialogue: 0,0:07:35.66,0:07:37.53,Default,,0,0,0,,复制~
Dialogue: 0,0:07:39.10,0:07:40.69,Default,,0,0,0,,ctrl+x剪切
Dialogue: 0,0:07:40.69,0:07:42.30,Default,,0,0,0,,从MainPage.xaml,然后
Dialogue: 0,0:07:42.31,0:07:44.80,Default,,0,0,0,,粘贴到ContactTemplate.xaml,
Dialogue: 0,0:07:44.80,0:07:48.49,Default,,0,0,0,,放到这个StackPanel里面
Dialogue: 0,0:07:48.49,0:07:49.52,Default,,0,0,0,,就像这样
Dialogue: 0,0:07:49.52,0:07:52.40,Default,,0,0,0,,好了，让我们看看他能不能正常工作把
Dialogue: 0,0:07:59.79,0:08:01.30,Default,,0,0,0,,好，现在应该看起来还很小
Dialogue: 0,0:08:01.30,0:08:02.47,Default,,0,0,0,,当我们拉伸窗体会发生什么？
Dialogue: 0,0:08:02.47,0:08:06.19,Default,,0,0,0,,Oh！两倍大小的
Dialogue: 0,0:08:06.19,0:08:08.78,Default,,0,0,0,,头像图标
Dialogue: 0,0:08:08.78,0:08:10.35,Default,,0,0,0,,好了，我好开心~~~
Dialogue: 0,0:08:10.35,0:08:13.03,Default,,0,0,0,,现在我们需要用这个技术
Dialogue: 0,0:08:13.03,0:08:14.84,Default,,0,0,0,,对于我们即将到来的挑战~
Dialogue: 0,0:08:14.84,0:08:17.34,Default,,0,0,0,,当我们改变窗体大小的时候
Dialogue: 0,0:08:17.34,0:08:20.39,Default,,0,0,0,,不止是改变窗体大小，还有改变
Dialogue: 0,0:08:20.39,0:08:22.14,Default,,0,0,0,,布局, 但是我们可能想要改变
Dialogue: 0,0:08:22.14,0:08:26.78,Default,,0,0,0,,在GridView Control里的实际的数据模板
Dialogue: 0,0:08:26.78,0:08:28.82,Default,,0,0,0,,当我们在一个更大的场景下运行
Dialogue: 0,0:08:28.82,0:08:32.43,Default,,0,0,0,,我们会希望字体变得更大
Dialogue: 0,0:08:32.44,0:08:35.46,Default,,0,0,0,,还有图像的变大
Dialogue: 0,0:08:35.46,0:08:36.22,Default,,0,0,0,,Okay?
Dialogue: 0,0:08:36.22,0:08:38.15,Default,,0,0,0,,所以这就是我想要说的了
Dialogue: 0,0:08:38.15,0:08:42.78,Default,,0,0,0,,这节课讲的是我如何使用
Dialogue: 0,0:08:42.78,0:08:45.22,Default,,0,0,0,,视觉管理器和自适应触发器
Dialogue: 0,0:08:45.22,0:08:46.72,Default,,0,0,0,,在数据模板里
Dialogue: 0,0:08:46.72,0:08:49.02,Default,,0,0,0,,你需要添加一个用户控制，你需要
Dialogue: 0,0:08:49.02,0:08:51.52,Default,,0,0,0,,在代码里做一些小的更改
Dialogue: 0,0:08:51.52,0:08:53.71,Default,,0,0,0,,然后你就可以添加你的视觉管理器
Dialogue: 0,0:08:53.71,0:08:57.28,Default,,0,0,0,,触发器，你的设置
Dialogue: 0,0:08:57.28,0:08:59.57,Default,,0,0,0,,然后它们就能顺利的在应用里工作了
Dialogue: 0,0:08:59.57,0:09:02.87,Default,,0,0,0,,所以，这只是为了证明这一点，让我们继续吧！
Dialogue: 0,0:09:02.87,0:09:06.08,Default,,0,0,0,,然后添加Beth,你可以看见
Dialogue: 0,0:09:06.08,0:09:09.29,Default,,0,0,0,,她很大~~她又变小了
Dialogue: 0,0:09:09.29,0:09:09.87,Default,,0,0,0,,棒极了~
Dialogue: 0,0:09:09.87,0:09:11.18,Default,,0,0,0,,Okay?
Dialogue: 0,0:09:11.18,0:09:13.13,Default,,0,0,0,,所以这就是这节课我想说的内容了
Dialogue: 0,0:09:13.13,0:09:15.80,Default,,0,0,0,,然后接下来就是一个
Dialogue: 0,0:09:15.81,0:09:18.56,Default,,0,0,0,,复习cheat sheet然后继续我们下一个挑战了~
Dialogue: 0,0:09:18.56,0:09:20.85,Default,,0,0,0,,下次见~\N 感谢大家的收看
