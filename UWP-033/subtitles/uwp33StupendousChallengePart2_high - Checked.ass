[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: uwp33StupendousChallengePart2_high.mp4
Video File: uwp33StupendousChallengePart2_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.750000
Scroll Position: 36
Active Line: 45
Video Position: 14320

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Microsoft YaHei UI,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,Default,,0,0,0,,Stupendous Styles Challenge Solution - Part 2: 创建导航和完成Donut页面
Dialogue: 0,0:00:05.00,0:00:12.50,Default,,0,0,0,,下面我们要做的是第二部分,创建导航和完成Donut页面
Dialogue: 0,0:00:12.50,0:00:17.50,Default,,0,0,0,,接下来第一件事我们要设置每一个按钮,给他们添加单击事件
Dialogue: 0,0:00:17.50,0:00:24.80,Default,,0,0,0,,为按钮命名 Name=“DonutButton”
Dialogue: 0,0:00:24.80,0:00:35.80,Default,,0,0,0,,添加一个单击事件并新建事件处理程序 Click=“DonutButton_Click”
Dialogue: 0,0:00:35.80,0:00:43.00,Default,,0,0,0,,对于我而言，我喜欢将代码换行，如果你不喜欢，可以打成一行 
Dialogue: 0,0:00:43.00,0:00:45.00,Default,,0,0,0,,然后我们重复这个上面的步骤
Dialogue: 0,0:00:45.00,0:00:53.00,Default,,0,0,0,,为按钮命名 Name=“CoffeeButton”,添加一个单击事件Click=“CoffeeButton_Click”
Dialogue: 0,0:01:00.00,0:01:07.00,Default,,0,0,0,,为按钮命名 Name=“ScheduleButton”,添加一个单击事件Click=“ScheduleButton_Click”
Dialogue: 0,0:01:16.00,0:01:24.00,Default,,0,0,0,,将按钮命名 Name=“CompleteButton”,添加一个单击事件Click=“CompleteButton_Click”
Dialogue: 0,0:01:30.00,0:01:36.50,Default,,0,0,0,,让我看看，我想确保我有没有给Frame命名
Dialogue: 0,0:01:40.50,0:01:44.00,Default,,0,0,0,,接下来让我们转到MainPage.xaml.cs,我想为事件处理程序添加对应的代码
Dialogue: 0,0:01:44.00,0:02:00.00,Default,,0,0,0,,当我点击时导航到这个页面 MyFrame.Navigate(typeof(DonutPage));//打代码ing
Dialogue: 0,0:02:00.00,0:02:07.00,Default,,0,0,0,,然后是偷懒复制四次，但是要记得修改后面对应的页面名称
Dialogue: 0,0:02:07.00,0:02:14.00,Default,,0,0,0,,然后在MainPage的构造函数里面添加 MyFrame.Navigate(typeof(DonutPage));//这样页面创建的时候会默认导航到DonutPage
Dialogue: 0,0:02:14.00,0:02:17.00,Default,,0,0,0,,修改上面提到的页面名称中...
Dialogue: 0,0:02:17.00,0:02:19.00,Default,,0,0,0,,CoffeButton对应CoffeePage
Dialogue: 0,0:02:19.00,0:02:21.00,Default,,0,0,0,,ScheduleButton对应SchedultPage
Dialogue: 0,0:02:21.00,0:02:24.00,Default,,0,0,0,,CompleteButton对应CompletePage
Dialogue: 0,0:02:24.00,0:02:28.00,Default,,0,0,0,,好 然后我们生成测试一下
Dialogue: 0,0:02:33.00,0:02:39.80,Default,,0,0,0,,？？什么都没有 因为我们的页面还是空白的 继续写很快就能完成了！！
Dialogue: 0,0:02:39.80,0:02:41.80,Default,,0,0,0,,回到DonutPage.xaml
Dialogue: 0,0:02:41.80,0:02:48.80,Default,,0,0,0,,我们应该先看一下Donut页面的效果预览图
Dialogue: 0,0:02:56.80,0:03:03.80,Default,,0,0,0,,我们可以发现 有一个Logo,两个文本框，两个滑块
Dialogue: 0,0:03:03.80,0:03:10.00,Default,,0,0,0,,这看起来像是2x2的Grid布局，也有可能是3x2，4x2的Grid
Dialogue: 0,0:03:10.00,0:03:16.00,Default,,0,0,0,,如果我们想修改为四个滑动控制条，放在底部，然后把其他的控件顶到上面去(不太确定)
Dialogue: 0,0:03:16.00,0:03:23.00,Default,,0,0,0,,回到Visual Studio,把代码窗口最大化，方便我打代码
Dialogue: 0,0:03:24.00,0:03:35.00,Default,,0,0,0,,<Grid.RowDefinitions></Grid.RowDefinitions>//打代码ing
Dialogue: 0,0:03:35.00,0:03:50.00,Default,,0,0,0,,<RowDefinition Height="Auto" /> 在中间插入并复制四次，因为有四行，除了最后一行的"Auto"改为"*"，以便把其他控件顶上去（好污）
Dialogue: 0,0:03:50.06,0:04:16.60,Default,,0,0,0,,接下来创建两列 <ColumnDefinition Width="Auto"> ，这个是标志的宽\N复制一下，修改第二列"Auto"为"*"//打代码ing
Dialogue: 0,0:04:17.00,0:04:30.00,Default,,0,0,0,,如果不加"*",我们的滑块可能会显示得很奇怪\N//注：Auto表示自适应显示内容，*表示按剩余比列分配，*前面可以加数字，缺省默认为1\N
Dialogue: 0,0:04:30.00,0:04:55.00,Default,,0,0,0,,创建图像来显示Logo <Image Source="Assets/white-logo.png">\N//注：需要把源代码的对应图片文件拖拽到解决方案资源管理器中的Assets文件夹中\N\N
Dialogue: 0,0:04:55.00,0:05:00.00,Default,,0,0,0,,然后是创建我们的文本框
Dialogue: 0,0:05:00.00,0:05:38.80,Default,,0,0,0,,<TextBlock Grid.Row="1" FontSize="18" Text="Original Glazed Count:" Foreground="white" Margin="20,20,20,0"/>\N\N
Dialogue: 0,0:05:42.80,0:05:53.80,Default,,0,0,0,,面向复制粘贴编程...修改一下...\N
Dialogue: 0,0:05:53.80,0:06:03.80,Default,,0,0,0,,换行对齐~~
Dialogue: 0,0:06:03.80,0:06:05.80,Default,,0,0,0,,然后是滑块\N
Dialogue: 0,0:06:05.80,0:06:30.80,Default,,0,0,0,,<Slider Grid.Row="1" Grid.Column="1" Maximum="24" Margin="20,20,20,0" />\N
Dialogue: 0,0:06:35.80,0:06:36.80,Default,,0,0,0,,\N同时修改第二个文本框 Grid.Row="2"
Dialogue: 0,0:06:46.80,0:06:49.80,Default,,0,0,0,,再次面向复制粘贴编程创建第二个滑块...修改Grid.Row="2"...
Dialogue: 0,0:06:49.80,0:07:09.80,Default,,0,0,0,,我们快要完成了，我觉得Logo图片可能太宽了，修改一下Width="150" ,还需要一些外边距Margin="20,20,0,0"\N
Dialogue: 0,0:07:16.80,0:07:22.80,Default,,0,0,0,,生成看一下效果，oh~~还不错，唯一的问题是我忘记设置Grid的背景颜色了
Dialogue: 0,0:07:22.80,0:07:27.80,Default,,0,0,0,,修改代码为<Grid Background="Red">
Dialogue: 0,0:07:36.80,0:07:45.80,Default,,0,0,0,,嗯 大概就是我们想要的效果了，我想这个部分已经完成了，然后可以下课了！
Dialogue: 0,0:07:45.80,0:07:50.80,Default,,0,0,0,,下节课会开始创建Coffee页面 下节课见！
Dialogue: 0,0:07:50.80,0:07:52.80,Default,,0,0,0,,微软大法好
