[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: uwp29XamlThemes_high.mp4
Video File: uwp29XamlThemes_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.750000
Scroll Position: 299
Active Line: 301
Video Position: 30989

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Microsoft YaHei,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,50,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:04.95,Default,,0,0,0,,XAML主题\N翻译：Kinroad 校对：章程
Dialogue: 0,0:00:04.95,0:00:08.90,Default,,0,0,0,,嗨, 我是 Bob Tabor 来自 www.learnvisualstudio.net
Dialogue: 0,0:00:09.25,0:00:10.95,Default,,0,0,0,,目前我们只了解了样式绑定
Dialogue: 0,0:00:10.95,0:00:13.32,Default,,0,0,0,,使用绑定语法用
Dialogue: 0,0:00:13.32,0:00:16.12,Default,,0,0,0,,花括号加上静态资源（static resource）
Dialogue: 0,0:00:16.12,0:00:18.75,Default,,0,0,0,,然后是一些样式名称
Dialogue: 0,0:00:18.75,0:00:22.72,Default,,0,0,0,,我们之前提到过的这种绑定方式
Dialogue: 0,0:00:22.72,0:00:25.55,Default,,0,0,0,,这种静态资源绑定（static resource binding）
Dialogue: 0,0:00:25.55,0:00:28.15,Default,,0,0,0,,只在app首次运行时进行一次
Dialogue: 0,0:00:28.15,0:00:30.92,Default,,0,0,0,,因此它是静态资源，它不会变了
Dialogue: 0,0:00:30.92,0:00:33.34,Default,,0,0,0,,在app的生命周期里
Dialogue: 0,0:00:33.79,0:00:39.07,Default,,0,0,0,,还有些声明非静态绑定方法的例子
Dialogue: 0,0:00:39.35,0:00:44.75,Default,,0,0,0,,比如，有个主题资源，类似于静态资源，
Dialogue: 0,0:00:44.75,0:00:49.98,Default,,0,0,0,,但资源在主题改变时被赋值
Dialogue: 0,0:00:49.98,0:00:51.75,Default,,0,0,0,,所以你觉得什么是主题呢？
Dialogue: 0,0:00:51.75,0:00:58.71,Default,,0,0,0,,主题是一个由终端用户在操作系统层选择的颜色集合
Dialogue: 0,0:00:58.71,0:01:02.15,Default,,0,0,0,,所以在Windows10桌面端你可以打开
Dialogue: 0,0:01:02.15,0:01:05.12,Default,,0,0,0,,设置->个性化
Dialogue: 0,0:01:05.12,0:01:08.45,Default,,0,0,0,,这里可以选择一个背景色\N（其实这个目前(TH2)还不能在电脑设置中更改，需要更改注册表）
Dialogue: 0,0:01:08.45,0:01:13.42,Default,,0,0,0,,我想还可以有个主题色
Dialogue: 0,0:01:13.42,0:01:17.15,Default,,0,0,0,,在这个例子里我选了、黑色作为背景色
Dialogue: 0,0:01:17.15,0:01:19.34,Default,,0,0,0,,然后蓝色作主题色
Dialogue: 0,0:01:20.59,0:01:24.89,Default,,0,0,0,,你还可以随时随意定制手机和Xbox One
Dialogue: 0,0:01:24.89,0:01:27.25,Default,,0,0,0,,通过选择背景和主题色
Dialogue: 0,0:01:27.25,0:01:29.85,Default,,0,0,0,,它们有不同的选项
Dialogue: 0,0:01:29.85,0:01:31.81,Default,,0,0,0,,但总的来说终端用户可以
Dialogue: 0,0:01:31.81,0:01:34.42,Default,,0,0,0,,在所有Windows10设备上对颜色进行个性化定制
Dialogue: 0,0:01:34.42,0:01:38.05,Default,,0,0,0,,当然开发者也可以
Dialogue: 0,0:01:38.05,0:01:41.92,Default,,0,0,0,,你可以选择在你app里利用这些颜色选择
Dialogue: 0,0:01:41.92,0:01:46.69,Default,,0,0,0,,那么你的app就可以符合用户的喜好
Dialogue: 0,0:01:46.69,0:01:49.19,Default,,0,0,0,,这不是必须的，但你最好这样做
Dialogue: 0,0:01:49.19,0:01:52.65,Default,,0,0,0,,除非你带着特定的品牌目标
Dialogue: 0,0:01:52.65,0:01:56.82,Default,,0,0,0,,所以有一组颜色允许你...
Dialogue: 0,0:01:56.82,0:01:59.19,Default,,0,0,0,,准确地说是有一组样式允许你
Dialogue: 0,0:01:59.19,0:02:03.34,Default,,0,0,0,,利用用户选择的那些颜色
Dialogue: 0,0:02:03.79,0:02:08.32,Default,,0,0,0,,找到定义这些样式的资源字典
Dialogue: 0,0:02:08.32,0:02:09.79,Default,,0,0,0,,这有点难办
Dialogue: 0,0:02:09.79,0:02:11.94,Default,,0,0,0,,这也是这节课的主题
Dialogue: 0,0:02:12.45,0:02:14.88,Default,,0,0,0,,我们来看看这个...先把这个关掉
Dialogue: 0,0:02:14.88,0:02:17.72,Default,,0,0,0,,打开MainPage.xaml
Dialogue: 0,0:02:17.72,0:02:20.76,Default,,0,0,0,,在我命名为ThemeResources的新项目下
Dialogue: 0,0:02:24.01,0:02:26.05,Default,,0,0,0,,如果你看一眼这个Grid
Dialogue: 0,0:02:26.05,0:02:30.48,Default,,0,0,0,,在你创建一个全新的空白模板app时
Dialogue: 0,0:02:30.48,0:02:34.35,Default,,0,0,0,,你会看到Grid利用了一个主题资源
Dialogue: 0,0:02:34.35,0:02:39.12,Default,,0,0,0,,叫做ApplicationPageBackgroundThemeBrush
Dialogue: 0,0:02:39.12,0:02:42.20,Default,,0,0,0,,好了，现在如果你把鼠标放在这个词的位置
Dialogue: 0,0:02:42.20,0:02:45.49,Default,,0,0,0,,（ApplicationPageBackgroundThemeBrush）
Dialogue: 0,0:02:45.49,0:02:47.91,Default,,0,0,0,,然后按F12
Dialogue: 0,0:02:47.91,0:02:50.89,Default,,0,0,0,,会预览打开这个叫做generic.xaml的文件
Dialogue: 0,0:02:50.89,0:02:52.72,Default,,0,0,0,,如果把鼠标停在上面...
Dialogue: 0,0:02:52.72,0:02:54.95,Default,,0,0,0,,啊哦...我还是双击它吧
Dialogue: 0,0:02:54.95,0:02:56.30,Default,,0,0,0,,这样可以么【怀疑脸
Dialogue: 0,0:02:56.69,0:02:58.85,Default,,0,0,0,,好了，如果我把鼠标停在上面
Dialogue: 0,0:02:58.85,0:03:01.79,Default,,0,0,0,,可以看到这个文件的完整路径
Dialogue: 0,0:03:01.79,0:03:06.29,Default,,0,0,0,,在我这个系统上是在这儿
Dialogue: 0,0:03:06.29,0:03:15.22,Default,,0,0,0,,Program Files (x86)\Windows Kits\10\DesignTime\CommonConfiguration\ Neutral\UAP (version number)\Generic\generic.xaml
Dialogue: 0,0:03:15.37,0:03:19.52,Default,,0,0,0,,OK，然后你看这儿
Dialogue: 0,0:03:19.52,0:03:21.82,Default,,0,0,0,,这里用一个关键词定义了个SolidColorBrush
Dialogue: 0,0:03:21.82,0:03:24.89,Default,,0,0,0,,这个关键词被自动用在网格里
Dialogue: 0,0:03:24.89,0:03:27.32,Default,,0,0,0,,然后设置它的颜色
Dialogue: 0,0:03:27.32,0:03:30.84,Default,,0,0,0,,白色，就是FFFFFF
Dialogue: 0,0:03:33.24,0:03:35.65,Default,,0,0,0,,这节课我主要准备讲
Dialogue: 0,0:03:35.65,0:03:40.72,Default,,0,0,0,,或者说讨论 定义为主题资源的颜色
Dialogue: 0,0:03:40.72,0:03:42.92,Default,,0,0,0,,当然，还可以有不同的定义类型
Dialogue: 0,0:03:42.92,0:03:46.99,Default,,0,0,0,,在这个xaml文件里，包括字体
Dialogue: 0,0:03:46.99,0:03:50.02,Default,,0,0,0,,粗细、字号、宽窄
Dialogue: 0,0:03:50.02,0:03:58.15,Default,,0,0,0,,这里面甚至还定义了样式、表现形式和布局
Dialogue: 0,0:03:58.15,0:04:00.39,Default,,0,0,0,,（为所有XAML控件提供）
Dialogue: 0,0:04:00.39,0:04:03.09,Default,,0,0,0,,所以如果你想知道为什么这个用这种方式定义样式
Dialogue: 0,0:04:03.09,0:04:05.42,Default,,0,0,0,,或者，为什么它是以这种方式这样表现的
Dialogue: 0,0:04:05.42,0:04:08.92,Default,,0,0,0,,你可以在这个XAML文件查看
Dialogue: 0,0:04:08.92,0:04:10.95,Default,,0,0,0,,可以重复我之前的方法来获得
Dialogue: 0,0:04:10.95,0:04:13.64,Default,,0,0,0,,你可以看到这是个超长的文件
Dialogue: 0,0:04:14.25,0:04:17.80,Default,,0,0,0,,有14,000多行代码
Dialogue: 0,0:04:18.29,0:04:19.79,Default,,0,0,0,,即使粗略看完、搞清楚这些代码在干嘛
Dialogue: 0,0:04:19.79,0:04:22.64,Default,,0,0,0,,都要花一整天时间
Dialogue: 0,0:04:23.25,0:04:25.55,Default,,0,0,0,,但无论如何，你利用这些样式的方法是
Dialogue: 0,0:04:25.55,0:04:29.62,Default,,0,0,0,,在你自己的样式中进行内部引用
Dialogue: 0,0:04:29.62,0:04:32.35,Default,,0,0,0,,那么现在，我们来
Dialogue: 0,0:04:32.35,0:04:35.99,Default,,0,0,0,,在这里为页面创建一个小的资源字典
Dialogue: 0,0:04:35.99,0:04:40.20,Default,,0,0,0,,页面-资源
Dialogue: 0,0:04:42.29,0:04:44.02,Default,,0,0,0,,这里面我想创建
Dialogue: 0,0:04:44.02,0:04:47.74,Default,,0,0,0,,一个叫做AccentBrush的SolidColorBrush
Dialogue: 0,0:04:54.21,0:04:58.14,Default,,0,0,0,,然后设置颜色为...
Dialogue: 0,0:04:59.15,0:05:04.15,Default,,0,0,0,,叫做SystemAccentColor的一个主题资源
Dialogue: 0,0:05:09.41,0:05:11.12,Default,,0,0,0,,好了，那么这个SystemAccentColor
Dialogue: 0,0:05:11.12,0:05:14.52,Default,,0,0,0,,为获取用户选择的强调色提供入口
Dialogue: 0,0:05:14.52,0:05:18.75,Default,,0,0,0,,那我来添加一个...举个栗子
Dialogue: 0,0:05:18.75,0:05:23.75,Default,,0,0,0,,这里添加一个矩形然后设置宽度=100
Dialogue: 0,0:05:24.01,0:05:29.01,Default,,0,0,0,,然后高度=100
Dialogue: 0,0:05:30.42,0:05:34.77,Default,,0,0,0,,然后再设置填充等于系统资源...
Dialogue: 0,0:05:36.55,0:05:40.85,Default,,0,0,0,,更应该说是等于叫做AccentBrush的
Dialogue: 0,0:05:40.85,0:05:43.26,Default,,0,0,0,,静态资源
Dialogue: 0,0:05:45.39,0:05:48.29,Default,,0,0,0,,来看一眼设计器
Dialogue: 0,0:05:48.29,0:05:50.32,Default,,0,0,0,,可以看到它选择了
Dialogue: 0,0:05:50.32,0:05:52.49,Default,,0,0,0,,与Visual Studio标签内颜色一样的蓝色
Dialogue: 0,0:05:52.49,0:05:54.91,Default,,0,0,0,,因为Visual Studio正在
Dialogue: 0,0:05:54.91,0:05:57.90,Default,,0,0,0,,把这种蓝色用在选中的标签上
Dialogue: 0,0:05:58.42,0:06:00.52,Default,,0,0,0,,同样，也用在最下面状态栏
Dialogue: 0,0:06:00.52,0:06:03.60,Default,,0,0,0,,和其他一些地方
Dialogue: 0,0:06:04.52,0:06:06.89,Default,,0,0,0,,你可以看到我如何用主题资源
Dialogue: 0,0:06:06.89,0:06:10.05,Default,,0,0,0,,定义一个静态资源
Dialogue: 0,0:06:10.05,0:06:11.55,Default,,0,0,0,,但我也可以直接用到
Dialogue: 0,0:06:11.55,0:06:13.29,Default,,0,0,0,,主题资源
Dialogue: 0,0:06:13.29,0:06:17.64,Default,,0,0,0,,那我直接复制这段到这儿作为替代
Dialogue: 0,0:06:21.01,0:06:22.17,Default,,0,0,0,,像这样...
Dialogue: 0,0:06:23.12,0:06:24.77,Default,,0,0,0,,好啦，啥都没改变
Dialogue: 0,0:06:25.85,0:06:27.95,Default,,0,0,0,,这就是获取强调色的方法
Dialogue: 0,0:06:27.95,0:06:31.84,Default,,0,0,0,,那像这种一般窗口的颜色怎么办呢？
Dialogue: 0,0:06:32.52,0:06:35.25,Default,,0,0,0,,为了获取它的颜色...我先把这些复制了
Dialogue: 0,0:06:35.25,0:06:39.57,Default,,0,0,0,,然后把这里改成50，50
Dialogue: 0,0:06:40.02,0:06:43.52,Default,,0,0,0,,如果想要获取这种亮色
Dialogue: 0,0:06:43.52,0:06:48.05,Default,,0,0,0,,像这样用SystemColorWindowColor
Dialogue: 0,0:06:48.05,0:06:53.05,Default,,0,0,0,,然后内部就会有一个亮色区域代替这个蓝色框框
Dialogue: 0,0:06:57.71,0:07:01.22,Default,,0,0,0,,这个匹配了亮色
Dialogue: 0,0:07:01.22,0:07:03.33,Default,,0,0,0,,窗口的其他部分也一样
Dialogue: 0,0:07:04.29,0:07:05.82,Default,,0,0,0,,我们等会来看看
Dialogue: 0,0:07:05.82,0:07:08.29,Default,,0,0,0,,在选中主题下的运行效果
Dialogue: 0,0:07:08.29,0:07:10.88,Default,,0,0,0,,但现在，我们...
Dialogue: 0,0:07:10.88,0:07:12.65,Default,,0,0,0,,这个暂时先放一放...
Dialogue: 0,0:07:12.65,0:07:14.45,Default,,0,0,0,,如果你想要包含这些主题的整个列表
Dialogue: 0,0:07:14.45,0:07:19.15,Default,,0,0,0,,到这个XAML主题资源里面看
Dialogue: 0,0:07:19.15,0:07:21.71,Default,,0,0,0,,等我放个地址
Dialogue: 0,0:07:21.71,0:07:24.83,Default,,0,0,0,,↑ ↑ ↑ 地址参上 ↑ ↑ ↑
Dialogue: 0,0:07:25.29,0:07:27.29,Default,,0,0,0,,你可以访问这个网页
Dialogue: 0,0:07:27.29,0:07:32.29,Default,,0,0,0,,它有这些不同主题笔刷的列表
Dialogue: 0,0:07:33.80,0:07:37.04,Default,,0,0,0,,按钮颜色的列表、还有文字啊以及杂七杂八的的东西
Dialogue: 0,0:07:37.45,0:07:39.59,Default,,0,0,0,,你最好这个页面上花些功夫
Dialogue: 0,0:07:39.59,0:07:41.30,Default,,0,0,0,,才好多学点
Dialogue: 0,0:07:42.15,0:07:43.52,Default,,0,0,0,,在WP上你要做的
Dialogue: 0,0:07:43.52,0:07:45.32,Default,,0,0,0,,有一点点不同
Dialogue: 0,0:07:45.32,0:07:48.94,Default,,0,0,0,,我们在模拟器上运行试试
Dialogue: 0,0:07:52.02,0:07:56.49,Default,,0,0,0,,在Windows10手机上，用户可以同时选择
Dialogue: 0,0:07:56.49,0:08:00.31,Default,,0,0,0,,主题和主题色
Dialogue: 0,0:08:00.31,0:08:03.39,Default,,0,0,0,,就像在Windows10桌面端一样
Dialogue: 0,0:08:03.39,0:08:05.25,Default,,0,0,0,,作为开发者你需要决定
Dialogue: 0,0:08:05.25,0:08:07.22,Default,,0,0,0,,是否采用用户选择的这些颜色
Dialogue: 0,0:08:07.22,0:08:10.19,Default,,0,0,0,,那么在手机上，用户可以选择Dark（黑色）主题
Dialogue: 0,0:08:10.19,0:08:15.19,Default,,0,0,0,,或者是Light（白色）主题...可以在这里看到
Dialogue: 0,0:08:15.19,0:08:18.61,Default,,0,0,0,,这里我选了黑色主题
Dialogue: 0,0:08:18.61,0:08:20.01,Default,,0,0,0,,那我是怎么知道的呢？
Dialogue: 0,0:08:20.01,0:08:23.05,Default,,0,0,0,,因为手机上系统窗口颜色不是白的
Dialogue: 0,0:08:23.05,0:08:25.09,Default,,0,0,0,,而是黑的o(^▽^)o
Dialogue: 0,0:08:25.09,0:08:26.99,Default,,0,0,0,,我们到设置里看看
Dialogue: 0,0:08:26.99,0:08:28.60,Default,,0,0,0,,我是不是说对了
Dialogue: 0,0:08:29.65,0:08:31.07,Default,,0,0,0,,嗯在模拟器里...
Dialogue: 0,0:08:35.11,0:08:38.47,Default,,0,0,0,,朝下滑...哈找到设置了
Dialogue: 0,0:08:40.25,0:08:43.87,Default,,0,0,0,,进入个性化-颜色
Dialogue: 0,0:08:44.25,0:08:45.65,Default,,0,0,0,,你可以选择你要的主题
Dialogue: 0,0:08:45.65,0:08:47.65,Default,,0,0,0,,黑色或者是白色
Dialogue: 0,0:08:47.65,0:08:51.72,Default,,0,0,0,,我把主题从黑色改成白色
Dialogue: 0,0:08:51.72,0:08:55.00,Default,,0,0,0,,然后回到我的app里....朝下滑...
Dialogue: 0,0:08:57.39,0:08:59.52,Default,,0,0,0,,再来看看这个主题资源app
Dialogue: 0,0:08:59.52,0:09:01.49,Default,,0,0,0,,可以发现系统颜色
Dialogue: 0,0:09:01.49,0:09:03.74,Default,,0,0,0,,从黑色变成了白色
Dialogue: 0,0:09:05.49,0:09:07.66,Default,,0,0,0,,明系和暗系主题的目的是
Dialogue: 0,0:09:07.66,0:09:10.92,Default,,0,0,0,,改变软件的外层
Dialogue: 0,0:09:10.92,0:09:12.69,Default,,0,0,0,,也即系统调用的颜色
Dialogue: 0,0:09:12.69,0:09:15.16,Default,,0,0,0,,作为开发者你可以选择
Dialogue: 0,0:09:15.16,0:09:19.68,Default,,0,0,0,,利用这些颜色和每个控件
Dialogue: 0,0:09:19.68,0:09:23.19,Default,,0,0,0,,Button，TextBox这些控件
Dialogue: 0,0:09:23.19,0:09:28.28,Default,,0,0,0,,都已经默认有了黑色白色主题
Dialogue: 0,0:09:29.39,0:09:32.25,Default,,0,0,0,,我想...应该用的是白色
Dialogue: 0,0:09:32.25,0:09:34.42,Default,,0,0,0,,作为开发者，你可以
Dialogue: 0,0:09:34.42,0:09:36.45,Default,,0,0,0,,通过App.xaml里的设置
Dialogue: 0,0:09:36.45,0:09:38.93,Default,,0,0,0,,改变或者说选择你喜欢的主题
Dialogue: 0,0:09:40.41,0:09:42.65,Default,,0,0,0,,我们到这儿，App.xaml
Dialogue: 0,0:09:42.65,0:09:45.05,Default,,0,0,0,,然后可以看到默认请求主题（requested theme）是白色
Dialogue: 0,0:09:45.05,0:09:47.26,Default,,0,0,0,,那我改成黑色会怎么样呢？
Dialogue: 0,0:09:48.62,0:09:50.14,Default,,0,0,0,,再运行一次app
Dialogue: 0,0:09:53.59,0:09:55.89,Default,,0,0,0,,现在你可以看到
Dialogue: 0,0:09:55.89,0:09:59.18,Default,,0,0,0,,窗口的背景色是黑色
Dialogue: 0,0:09:59.18,0:10:04.05,Default,,0,0,0,,即使我为app手动选择了白色主题
Dialogue: 0,0:10:04.05,0:10:07.00,Default,,0,0,0,,也是这样的颜色
Dialogue: 0,0:10:07.42,0:10:10.26,Default,,0,0,0,,这在桌面端app也同样适用
Dialogue: 0,0:10:11.16,0:10:13.79,Default,,0,0,0,,现在我已经把
Dialogue: 0,0:10:13.79,0:10:16.15,Default,,0,0,0,,请求主题改成了黑色
Dialogue: 0,0:10:16.15,0:10:18.79,Default,,0,0,0,,再在我本地机器上试试
Dialogue: 0,0:10:18.79,0:10:22.75,Default,,0,0,0,,你想想我们上次运行这个app，它背景是白色
Dialogue: 0,0:10:22.75,0:10:26.40,Default,,0,0,0,,但现在，运行起来是黑色背景了
Dialogue: 0,0:10:27.65,0:10:29.32,Default,,0,0,0,,我不准备示范
Dialogue: 0,0:10:29.32,0:10:32.11,Default,,0,0,0,,如何覆写定义在generic.xaml里样式
Dialogue: 0,0:10:32.11,0:10:36.05,Default,,0,0,0,,但你可以到我刚刚提到的网页
Dialogue: 0,0:10:36.05,0:10:38.65,Default,,0,0,0,,了解更多
Dialogue: 0,0:10:38.65,0:10:41.59,Default,,0,0,0,,就是这个↑ ↑ ↑
Dialogue: 0,0:10:41.59,0:10:43.66,Default,,0,0,0,,它可以教你怎么做
Dialogue: 0,0:10:44.12,0:10:45.81,Default,,0,0,0,,最后，我刚才提到
Dialogue: 0,0:10:45.81,0:10:48.85,Default,,0,0,0,,你能请求一个主题
Dialogue: 0,0:10:48.85,0:10:52.01,Default,,0,0,0,,但我想强调的事实就是，这仅仅是一个请求
Dialogue: 0,0:10:52.01,0:10:55.07,Default,,0,0,0,,即使它的属性叫做请求主题
Dialogue: 0,0:10:56.69,0:11:00.92,Default,,0,0,0,,如果用户在桌面端用高对比度主题
Dialogue: 0,0:11:00.92,0:11:04.29,Default,,0,0,0,,它就会覆盖这个请求主题
Dialogue: 0,0:11:04.29,0:11:07.65,Default,,0,0,0,,其他你为控件创建的样式也同样会被覆盖
Dialogue: 0,0:11:07.65,0:11:10.72,Default,,0,0,0,,高对比度主题为易用性而生
Dialogue: 0,0:11:10.72,0:11:13.78,Default,,0,0,0,,为视觉障碍人士准备
Dialogue: 0,0:11:13.78,0:11:16.42,Default,,0,0,0,,它的优先级高于
Dialogue: 0,0:11:16.42,0:11:19.79,Default,,0,0,0,,你为app赋予的美观性
Dialogue: 0,0:11:19.79,0:11:24.39,Default,,0,0,0,,嗯现在我到设置，选择...
Dialogue: 0,0:11:24.39,0:11:25.99,Default,,0,0,0,,嗯找一找高对比度
Dialogue: 0,0:11:25.99,0:11:28.04,Default,,0,0,0,,这里，高对比度设置
Dialogue: 0,0:11:31.05,0:11:33.95,Default,,0,0,0,,在轻松使用下面，选择高对比度
Dialogue: 0,0:11:33.95,0:11:37.63,Default,,0,0,0,,选择#1高对比度主题
Dialogue: 0,0:11:38.32,0:11:39.90,Default,,0,0,0,,然后应用
Dialogue: 0,0:11:43.26,0:11:44.62,Default,,0,0,0,,我对这个不太了解
Dialogue: 0,0:11:44.62,0:11:49.02,Default,,0,0,0,,但系统快速重启了
Dialogue: 0,0:11:49.02,0:11:53.09,Default,,0,0,0,,现在设置界面已经完全不一样了
Dialogue: 0,0:11:53.09,0:11:55.45,Default,,0,0,0,,Visual Studio看起来也不一样了
Dialogue: 0,0:11:55.45,0:11:58.52,Default,,0,0,0,,这次运行我们的app
Dialogue: 0,0:11:58.52,0:12:02.99,Default,,0,0,0,,我们在app里定义的颜色
Dialogue: 0,0:12:02.99,0:12:06.24,Default,,0,0,0,,基本都被主题颜色取代了
Dialogue: 0,0:12:08.22,0:12:10.45,Default,,0,0,0,,正如我刚才说的
Dialogue: 0,0:12:10.45,0:12:12.85,Default,,0,0,0,,主题资源会促使你的app
Dialogue: 0,0:12:12.85,0:12:15.59,Default,,0,0,0,,与用户桌面或者说其他设备的外观保持一致
Dialogue: 0,0:12:15.59,0:12:19.95,Default,,0,0,0,,所以最好不要有自己去定义
Dialogue: 0,0:12:19.95,0:12:24.02,Default,,0,0,0,,颜色、字体或者其他类似东西的冲动
Dialogue: 0,0:12:24.02,0:12:27.60,Default,,0,0,0,,除非你有不得已的原因
Dialogue: 0,0:12:28.22,0:12:29.59,Default,,0,0,0,,一种原因是
Dialogue: 0,0:12:29.59,0:12:31.25,Default,,0,0,0,,为了你公司的品牌化
Dialogue: 0,0:12:31.25,0:12:33.18,Default,,0,0,0,,比如Netflix的
Dialogue: 0,0:12:33.18,0:12:35.99,Default,,0,0,0,,标志性红色搭配白色的字
Dialogue: 0,0:12:35.99,0:12:38.64,Default,,0,0,0,,以及特殊的字体
Dialogue: 0,0:12:39.25,0:12:41.32,Default,,0,0,0,,此外，有很多做好的样式
Dialogue: 0,0:12:41.32,0:12:44.02,Default,,0,0,0,,你的app可以选用
Dialogue: 0,0:12:44.02,0:12:47.39,Default,,0,0,0,,我回到这个MainPage.xaml
Dialogue: 0,0:12:47.39,0:12:49.25,Default,,0,0,0,,然后找找...嗯有点难找...
Dialogue: 0,0:12:49.25,0:12:51.49,Default,,0,0,0,,那我回到这里然后
Dialogue: 0,0:12:51.49,0:12:54.77,Default,,0,0,0,,把高对比度设置改回来
Dialogue: 0,0:12:56.15,0:12:57.44,Default,,0,0,0,,选none
Dialogue: 0,0:13:01.61,0:13:03.66,Default,,0,0,0,,看起来舒服多啦(￣▽￣)"
Dialogue: 0,0:13:05.39,0:13:06.54,Default,,0,0,0,,好了
Dialogue: 0,0:13:07.45,0:13:10.37,Default,,0,0,0,,我把这个改成StackPanel
Dialogue: 0,0:13:11.52,0:13:15.75,Default,,0,0,0,,然后添加一个TextBlock
Dialogue: 0,0:13:15.75,0:13:20.11,Default,,0,0,0,,文本是"My App Title"，诸如此类的
Dialogue: 0,0:13:20.11,0:13:24.32,Default,,0,0,0,,然后把样式设置成...
Dialogue: 0,0:13:24.32,0:13:26.30,Default,,0,0,0,,快好了...
Dialogue: 0,0:13:27.45,0:13:30.65,Default,,0,0,0,,所以我可以把一些
Dialogue: 0,0:13:30.65,0:13:33.10,Default,,0,0,0,,默认构造好的样式
Dialogue: 0,0:13:35.79,0:13:38.15,Default,,0,0,0,,用在generic.xaml里
Dialogue: 0,0:13:38.15,0:13:39.84,Default,,0,0,0,,我们在这里用...
Dialogue: 0,0:13:40.92,0:13:44.84,Default,,0,0,0,,"StaticResource HeaderTextBlockStyle"
Dialogue: 0,0:13:46.52,0:13:51.52,Default,,0,0,0,,然后把这个调高到66%
Dialogue: 0,0:13:54.09,0:13:56.85,Default,,0,0,0,,我们有这个特定的字体
Dialogue: 0,0:13:56.85,0:13:59.92,Default,,0,0,0,,应该是微软雅黑，但这个太细太轻了
Dialogue: 0,0:13:59.92,0:14:04.35,Default,,0,0,0,,这个特定的字体在app里很常用
Dialogue: 0,0:14:04.35,0:14:07.60,Default,,0,0,0,,那么我们同样可以借用这个字体
Dialogue: 0,0:14:08.65,0:14:10.71,Default,,0,0,0,,如果想知道从哪
Dialogue: 0,0:14:10.71,0:14:14.62,Default,,0,0,0,,可以找到这些样式
Dialogue: 0,0:14:15.74,0:14:18.05,Default,,0,0,0,,比如说TextBlock
Dialogue: 0,0:14:18.05,0:14:20.64,Default,,0,0,0,,到右边这个属性窗口
Dialogue: 0,0:14:21.42,0:14:25.35,Default,,0,0,0,,到...杂项
Dialogue: 0,0:14:25.35,0:14:29.65,Default,,0,0,0,,然后可以在样式下看到
Dialogue: 0,0:14:29.65,0:14:33.72,Default,,0,0,0,,找到了这个...Windows.UI.Xaml.Style
Dialogue: 0,0:14:33.72,0:14:36.85,Default,,0,0,0,,点击这个绿色小按钮
Dialogue: 0,0:14:36.85,0:14:39.80,Default,,0,0,0,,可以从系统资源里选择
Dialogue: 0,0:14:40.85,0:14:43.25,Default,,0,0,0,,我把它移开一点
Dialogue: 0,0:14:43.25,0:14:45.30,Default,,0,0,0,,可以看得清楚些
Dialogue: 0,0:14:49.31,0:14:51.35,Default,,0,0,0,,从其中一个系统资源里选择
Dialogue: 0,0:14:51.35,0:14:54.12,Default,,0,0,0,,这个例子里选HeaderTextBlockStyle
Dialogue: 0,0:14:54.12,0:14:55.79,Default,,0,0,0,,但也可以选...比如说
Dialogue: 0,0:14:55.79,0:15:00.79,Default,,0,0,0,,SubheaderTextBlockStyle或者
Dialogue: 0,0:15:03.65,0:15:06.74,Default,,0,0,0,,CaptionTextBlockStyle，一个更小的字体
Dialogue: 0,0:15:08.35,0:15:10.25,Default,,0,0,0,,我最后要提出来的一点是
Dialogue: 0,0:15:10.25,0:15:13.62,Default,,0,0,0,,如果把鼠标放在
Dialogue: 0,0:15:13.62,0:15:17.55,Default,,0,0,0,,CaptionTextBlockStyle上然后按F12
Dialogue: 0,0:15:18.97,0:15:23.42,Default,,0,0,0,,可以发现链接到了generic.xaml文件的
Dialogue: 0,0:15:23.42,0:15:25.54,Default,,0,0,0,,第12,400行
Dialogue: 0,0:15:26.05,0:15:27.89,Default,,0,0,0,,滚动到右边
Dialogue: 0,0:15:27.89,0:15:32.89,Default,,0,0,0,,可以看到，这个样式有一个基准样式属性
Dialogue: 0,0:15:33.19,0:15:37.70,Default,,0,0,0,,就是说这个样式是建立在BaseTextBlockStyle基础上的
Dialogue: 0,0:15:38.52,0:15:41.02,Default,,0,0,0,,然后加了些改动
Dialogue: 0,0:15:41.02,0:15:43.42,Default,,0,0,0,,可以在这里看到
Dialogue: 0,0:15:43.42,0:15:46.25,Default,,0,0,0,,它就像CSS一样
Dialogue: 0,0:15:46.25,0:15:48.35,Default,,0,0,0,,选一个样式，修改它
Dialogue: 0,0:15:48.35,0:15:51.30,Default,,0,0,0,,为它添加更多的改动
Dialogue: 0,0:15:51.72,0:15:54.21,Default,,0,0,0,,现在如果我们想看看这个BaseTextBlockStyle
Dialogue: 0,0:15:54.21,0:15:56.32,Default,,0,0,0,,按F12，啊噢-｡-;
Dialogue: 0,0:15:56.32,0:15:58.75,Default,,0,0,0,,不能导航到定义位置
Dialogue: 0,0:15:58.75,0:16:02.35,Default,,0,0,0,,那就复制这个
Dialogue: 0,0:16:02.35,0:16:04.17,Default,,0,0,0,,用查找工具
Dialogue: 0,0:16:05.82,0:16:07.89,Default,,0,0,0,,可以看到BaseTextBlockStyle是在这里定义的
Dialogue: 0,0:16:07.89,0:16:11.59,Default,,0,0,0,,它没有...
Dialogue: 0,0:16:11.59,0:16:13.90,Default,,0,0,0,,它没有基于其他任何东西
Dialogue: 0,0:16:14.55,0:16:16.75,Default,,0,0,0,,TargetType="TextBlock"
Dialogue: 0,0:16:16.75,0:16:19.15,Default,,0,0,0,,然后这里设置了字体族、字体粗细、字体大小
Dialogue: 0,0:16:19.15,0:16:22.85,Default,,0,0,0,,字体修整，换行，线性叠加策略
Dialogue: 0,0:16:22.85,0:16:25.65,Default,,0,0,0,,文本行边界...所有这些东西
Dialogue: 0,0:16:25.65,0:16:29.22,Default,,0,0,0,,有很多我们刚才
Dialogue: 0,0:16:29.22,0:16:31.32,Default,,0,0,0,,在属性窗口看到的属性
Dialogue: 0,0:16:31.32,0:16:36.32,Default,,0,0,0,,都基于这个BaseTextBlockStyle
Dialogue: 0,0:16:37.81,0:16:41.29,Default,,0,0,0,,我们可以在自己的样式里利用基准样式
Dialogue: 0,0:16:41.29,0:16:43.65,Default,,0,0,0,,同样，到app的样式里
Dialogue: 0,0:16:43.65,0:16:45.50,Default,,0,0,0,,获取这个 css 一样的样式
Dialogue: 0,0:16:47.99,0:16:50.15,Default,,0,0,0,,好了，来概括一下
Dialogue: 0,0:16:50.15,0:16:52.49,Default,,0,0,0,,这节课最重要的就是
Dialogue: 0,0:16:52.49,0:16:55.05,Default,,0,0,0,,可以在app里利用主题资源
Dialogue: 0,0:16:55.05,0:16:57.75,Default,,0,0,0,,来实现与用户终端上
Dialogue: 0,0:16:57.75,0:17:01.94,Default,,0,0,0,,其他app一致的样式
Dialogue: 0,0:17:02.85,0:17:04.25,Default,,0,0,0,,我觉得是时候复习一下了
Dialogue: 0,0:17:04.25,0:17:05.75,Default,,0,0,0,,我们下节课见
Dialogue: 0,0:17:05.75,0:17:08.02,Default,,0,0,0,,那时候再说更多东西
Dialogue: 0,0:17:08.02,0:17:09.30,Default,,0,0,0,,谢谢~*★,°*:.☆\(￣▽￣)/$:*.°★*
Dialogue: 0,0:17:09.30,0:17:11.30,Default,,0,0,0,,微软大法好
