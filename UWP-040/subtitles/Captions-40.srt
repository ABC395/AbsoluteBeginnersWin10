1
00:00:05,096 --> 00:00:08,657
<v ->Hi, I'm Bob Tabor with www.learnvisualstudio.net.</v>

2
00:00:08,658 --> 00:00:11,015
In this lesson we're going to talk about a couple of things.

3
00:00:11,016 --> 00:00:12,914
Start with data binding, but then we'll talk about

4
00:00:12,915 --> 00:00:16,615
two Controls that'll allow us to bind data

5
00:00:16,616 --> 00:00:20,390
in a grid-like fashion or in a list-like fashion.

6
00:00:20,391 --> 00:00:21,692
Let's start with data binding.

7
00:00:21,693 --> 00:00:24,827
It's been around ever since I started building software

8
00:00:24,828 --> 00:00:28,816
on the Windows platform way back in '93.

9
00:00:28,817 --> 00:00:32,952
Data binding a process of taking some data

10
00:00:32,953 --> 00:00:37,952
and associating it to visual elements on a user interface.

11
00:00:38,588 --> 00:00:41,072
In our case, we would take something like

12
00:00:41,073 --> 00:00:43,568
just a plain old CLR object.

13
00:00:43,569 --> 00:00:47,311
A car object. A book object. Those would have properties.

14
00:00:47,312 --> 00:00:51,492
A Book object would have maybe the book image,

15
00:00:51,493 --> 00:00:53,967
the author, the title, things of that nature.

16
00:00:53,968 --> 00:00:58,967
We would want to present each instance of Book in a

17
00:00:59,173 --> 00:01:01,870
in a collection of books on-screen to the user

18
00:01:01,871 --> 00:01:02,948
in a grid-like fashion.

19
00:01:02,949 --> 00:01:05,508
We may want to have the Book image on the top.

20
00:01:05,509 --> 00:01:07,865
We might have the title overlaying that image.

21
00:01:07,866 --> 00:01:09,870
We might have a short description below it,

22
00:01:09,871 --> 00:01:11,566
the author's name below that.

23
00:01:11,567 --> 00:01:13,112
We get to create a little template,

24
00:01:13,113 --> 00:01:15,886
how each individual instance of Book

25
00:01:15,887 --> 00:01:20,886
will be represented in the user interface.

26
00:01:20,890 --> 00:01:23,692
That's what the GridView would allow us to do.

27
00:01:23,693 --> 00:01:25,453
The ListView is exactly the same,

28
00:01:25,454 --> 00:01:29,452
except it works more in a single-column fashion.

29
00:01:29,453 --> 00:01:32,589
We'll show an example of that a little bit later.

30
00:01:32,590 --> 00:01:35,257
As you can see, I've got project called xBindDataExample.

31
00:01:35,258 --> 00:01:38,785
For reasons that will become obvious in just a moment here.

32
00:01:38,786 --> 00:01:41,624
I've already started working on this a little bit.

33
00:01:41,625 --> 00:01:42,711
You can see that...

34
00:01:42,712 --> 00:01:45,470
Let me call your attention to a Book class

35
00:01:45,471 --> 00:01:47,852
here in the Models folder.

36
00:01:47,853 --> 00:01:49,558
This is a simple class.

37
00:01:49,559 --> 00:01:52,555
When I say plain old CLR object,

38
00:01:52,556 --> 00:01:55,319
I just mean a simple class with properties.

39
00:01:55,320 --> 00:01:57,398
This doesn't even have methods but it could.

40
00:01:57,399 --> 00:02:02,398
This simple Book class just has a BookID, Title, Author,

41
00:02:03,013 --> 00:02:06,457
and then CoverImage which would be

42
00:02:06,458 --> 00:02:11,457
a reference to Assets that I have here; image Assets.

43
00:02:12,352 --> 00:02:14,537
1.png, 10.png.

44
00:02:14,538 --> 00:02:15,850
You can see as I hover over we've got

45
00:02:15,851 --> 00:02:20,666
some fake book covers here that I created.

46
00:02:20,667 --> 00:02:24,031
Below that, I have another class in the same file.

47
00:02:24,032 --> 00:02:25,609
Ideally, I would have separated that out,

48
00:02:25,610 --> 00:02:29,588
but I delegate the responsibility to this class

49
00:02:29,589 --> 00:02:31,412
called BookManager.

50
00:02:31,413 --> 00:02:33,130
I'll create a new instances of Book,

51
00:02:33,131 --> 00:02:36,809
adding them to a new collection, a List of Book,

52
00:02:36,810 --> 00:02:40,872
then returning that List back to the caller.

53
00:02:40,873 --> 00:02:42,632
Inside of there you could see that I have

54
00:02:42,633 --> 00:02:46,792
this object initializer syntax actually set

55
00:02:46,793 --> 00:02:51,354
each of the book's properties to something unique.

56
00:02:51,355 --> 00:02:54,130
Again, just some lorem ipsum text

57
00:02:54,131 --> 00:02:59,130
for Title, Author, and the CoverImage.

58
00:02:59,747 --> 00:03:02,407
We'll use this method here in just a moment

59
00:03:02,408 --> 00:03:06,492
to get the information that will bind our Grid to.

60
00:03:06,493 --> 00:03:08,252
Let's work on the Grid itself.

61
00:03:08,253 --> 00:03:10,406
First of all, you can see here in the MainPage.xaml,

62
00:03:10,407 --> 00:03:14,065
I've already started laying out the layout grid.

63
00:03:14,066 --> 00:03:16,913
This Page will have two Rows.

64
00:03:16,914 --> 00:03:19,089
The top Row will be where we do all of our work.

65
00:03:19,090 --> 00:03:21,808
The bottom Row will just contain a TextBlock.

66
00:03:21,809 --> 00:03:24,070
Later on whenever we select one Book,

67
00:03:24,071 --> 00:03:26,565
I want to show you the process of selection.

68
00:03:26,566 --> 00:03:28,645
Selecting one will grab the details

69
00:03:28,646 --> 00:03:31,610
and print them to that ResultTextBlock there.

70
00:03:31,611 --> 00:03:33,669
What we'll do for the majority of the time here

71
00:03:33,670 --> 00:03:35,952
is actually work on adding a GridView

72
00:03:35,953 --> 00:03:37,466
and binding it to data.

73
00:03:37,467 --> 00:03:40,463
Data that we're going to grab from that

74
00:03:40,464 --> 00:03:45,463
Book.cs file that we created; the BookManager Class.

75
00:03:46,064 --> 00:03:48,611
Let's start by creating a GridView.

76
00:03:48,612 --> 00:03:50,933
One of the things you need to do with a GridView

77
00:03:50,934 --> 00:03:52,887
is we want to create a template,

78
00:03:52,888 --> 00:03:56,654
how each individual instances of Book will appear on-screen.

79
00:03:56,655 --> 00:03:59,145
To do that, I'm going to go

80
00:03:59,146 --> 00:04:04,145
GridView.ItemTemplate.

81
00:04:06,276 --> 00:04:09,997
The ItemTemplate contains a DataTemplate.

82
00:04:09,998 --> 00:04:12,813
We'll come back and flush some things out

83
00:04:12,814 --> 00:04:14,936
about this DataTemplate in just a moment.

84
00:04:14,937 --> 00:04:18,136
Inside of that DataTemplate we can basically lay out

85
00:04:18,137 --> 00:04:19,949
how we want each instances of Book

86
00:04:19,950 --> 00:04:21,815
to be represented on-screen.

87
00:04:21,816 --> 00:04:24,429
We can use Grid, StackPanels, any of the controls

88
00:04:24,430 --> 00:04:27,810
that we've leaned about up to this point.

89
00:04:27,811 --> 00:04:29,591
In this case, I'm going to keep it pretty simple.

90
00:04:29,592 --> 00:04:31,233
I want to display an Image of the Book,

91
00:04:31,234 --> 00:04:33,355
then the tile and the author.

92
00:04:33,356 --> 00:04:35,308
Maybe the title will be slightly larger font,

93
00:04:35,309 --> 00:04:37,742
author will be slightly smaller font.

94
00:04:37,743 --> 00:04:38,678
Okay?

95
00:04:38,679 --> 00:04:40,289
We'll start out with an Image,

96
00:04:40,290 --> 00:04:44,727
then have two TextBlocks beneath that.

97
00:04:44,728 --> 00:04:49,727
The TextBlock will be...

98
00:04:49,847 --> 00:04:52,395
The FontSize for the one that will contain

99
00:04:52,396 --> 00:04:57,395
the title of the Book, we'll make that like 16 FontSize,

100
00:04:57,402 --> 00:05:00,234
then the one below it FontSize

101
00:05:00,235 --> 00:05:04,384
equal to maybe 10, real small.

102
00:05:04,385 --> 00:05:08,730
The Image itself I'm going to make sure that the Image

103
00:05:08,731 --> 00:05:13,727
is no larger than 150 pixels wide.

104
00:05:13,728 --> 00:05:16,255
Let's set the Width="150".

105
00:05:16,256 --> 00:05:20,852
A lot of setup work here just to kind of get things rolling.

106
00:05:20,853 --> 00:05:25,852
The next thing that I need to do is to tell the GridView

107
00:05:26,890 --> 00:05:29,554
what I'm going to bind to ultimately.

108
00:05:29,555 --> 00:05:31,454
In order to do this,

109
00:05:31,455 --> 00:05:36,454
I'm going to populate the ItemSource property.

110
00:05:38,014 --> 00:05:42,333
I'm going to set it to a new type of binding, x:Bind,

111
00:05:42,334 --> 00:05:45,650
and we'll set it to a public property

112
00:05:45,651 --> 00:05:50,012
that we're going to create on our code behind called Books.

113
00:05:50,013 --> 00:05:53,628
I'm going to create a public property called Books

114
00:05:53,629 --> 00:05:55,687
in my MainPage.xaml.

115
00:05:55,688 --> 00:05:59,207
Books will be of type: List of Book.

116
00:05:59,208 --> 00:06:02,952
Just like what we'll return from the BookManager.

117
00:06:02,953 --> 00:06:05,392
Now, I need to tell the DataTemplate what

118
00:06:05,393 --> 00:06:09,147
the data type is that is should expect to be working with.

119
00:06:09,148 --> 00:06:14,147
To do that, I'm going to set a property

120
00:06:14,492 --> 00:06:19,491
on the DataTemplate called x:DataType.

121
00:06:20,188 --> 00:06:22,288
I want to set it to type Book.

122
00:06:22,289 --> 00:06:26,128
In order to reference this class in my XAML,

123
00:06:26,129 --> 00:06:31,128
I need to add a XML namespace here up at the page level.

124
00:06:31,366 --> 00:06:36,249
What I'm going to do is type xmlns:data=

125
00:06:36,250 --> 00:06:39,204
then I'm going to give it the name

126
00:06:39,205 --> 00:06:42,884
of the application, so xBindDataExample.

127
00:06:42,885 --> 00:06:47,884
Then the namespace where my Book class is located.

128
00:06:49,146 --> 00:06:50,841
In this case, in the Models namespace

129
00:06:50,842 --> 00:06:52,495
because I put it in the Models folder.

130
00:06:52,496 --> 00:06:54,775
Right?

131
00:06:54,776 --> 00:06:56,728
Now that I have that I should be able to do this.

132
00:06:56,729 --> 00:07:00,971
data:Book

133
00:07:00,972 --> 00:07:05,144
Next up, I'm going to set a property of each of these controls

134
00:07:05,145 --> 00:07:10,144
equal to a property of the Book class.

135
00:07:12,451 --> 00:07:15,501
In this case I'm going to set the Source="{x:Bind CoverImage}"

136
00:07:15,502 --> 00:07:20,371
Source="{x:Bind CoverImage}".

137
00:07:20,372 --> 00:07:23,811
(typing)

138
00:07:23,812 --> 00:07:28,076
Here I'll set the Text property

139
00:07:28,077 --> 00:07:33,076
and bind it to the Title.

140
00:07:33,907 --> 00:07:37,504
Finally, I'll set the Text property of the second TextBlock

141
00:07:37,505 --> 00:07:42,357
and bind it to the author's name.

142
00:07:42,358 --> 00:07:44,245
I'm getting a little blue squiggly here

143
00:07:44,246 --> 00:07:47,083
that the property VisualTree can only be set once.

144
00:07:47,084 --> 00:07:48,384
See the mistake I made?

145
00:07:48,385 --> 00:07:51,178
Need to put this in the StackPanel.

146
00:07:51,179 --> 00:07:53,578
Forgot that. Got a little ahead of myself there.

147
00:07:53,579 --> 00:07:58,578
That should fix that situation. Great.

148
00:07:58,784 --> 00:08:01,844
Alright, the only thing left to do at this point

149
00:08:01,845 --> 00:08:06,844
is to make sure that I create a public property

150
00:08:07,786 --> 00:08:10,121
on my MainPage.xaml.cs

151
00:08:10,122 --> 00:08:13,387
and populate that property with Books.

152
00:08:13,388 --> 00:08:15,742
How do we do that?

153
00:08:15,743 --> 00:08:17,587
Well, first of all,

154
00:08:17,588 --> 00:08:21,224
inside of our MainPage class...

155
00:08:21,225 --> 00:08:23,262
It can be public or private, it doesn't matter.

156
00:08:23,263 --> 00:08:26,163
Here I'll go private.

157
00:08:26,164 --> 00:08:29,747
List<Book>, we'll call it Books.

158
00:08:29,748 --> 00:08:32,104
Remember if you don't see it...

159
00:08:32,105 --> 00:08:37,104
I already had a "using" statement to the Models namespace.

160
00:08:40,104 --> 00:08:43,207
If you don't get that you can hit the Control+"."

161
00:08:43,208 --> 00:08:48,207
on your keyboard and select it from the drop-drown ListBox.

162
00:08:48,221 --> 00:08:50,769
Inside here I want to initialize Books.

163
00:08:50,770 --> 00:08:55,463
I'm going to set Books = BookManager.GetBooks();.

164
00:08:55,464 --> 00:08:58,066
That will return me a list of Books.

165
00:08:58,067 --> 00:09:01,456
At this point, I think we're ready to go.

166
00:09:01,457 --> 00:09:05,232
Let's run the application.

167
00:09:05,233 --> 00:09:06,288
Okay.

168
00:09:06,289 --> 00:09:11,152
You can see that I get a number of Books.

169
00:09:11,153 --> 00:09:12,368
Thirteen Books.

170
00:09:12,369 --> 00:09:14,149
Now there's some formatting I could do here.

171
00:09:14,150 --> 00:09:16,314
I think I should center up the text

172
00:09:16,315 --> 00:09:18,853
right underneath the book itself

173
00:09:18,854 --> 00:09:21,999
and may add some padding, and margins,

174
00:09:22,000 --> 00:09:22,981
and things of that nature.

175
00:09:22,982 --> 00:09:24,538
But, for the most part, it looks pretty good.

176
00:09:24,539 --> 00:09:27,098
Notice that one of the qualities of the GridView

177
00:09:27,099 --> 00:09:30,041
is that as you make it smaller in Width,

178
00:09:30,042 --> 00:09:32,580
you have fewer Columns

179
00:09:32,581 --> 00:09:36,484
and the Rows are commensurate to that as well.

180
00:09:36,485 --> 00:09:38,841
Let's make a couple of quick changes

181
00:09:38,842 --> 00:09:43,747
to the template.

182
00:09:43,748 --> 00:09:48,747
Let's set the whole thing

183
00:09:50,585 --> 00:09:52,441
HorizontalAlignment="Center"

184
00:09:52,442 --> 00:09:54,285
then definitely want to do that

185
00:09:54,286 --> 00:09:58,035
on each of the individual TextBlocks.

186
00:09:58,036 --> 00:10:03,035
(typing)

187
00:10:03,416 --> 00:10:04,767
Alright, that should look better.

188
00:10:04,768 --> 00:10:07,063
We'll look at that in just a moment.

189
00:10:07,064 --> 00:10:10,402
The next thing I want to be able to do is make a selection

190
00:10:10,403 --> 00:10:11,639
on one of these items and

191
00:10:11,640 --> 00:10:14,156
then retrieve information about that item.

192
00:10:14,157 --> 00:10:18,241
What we're going to do is set two attributes of the GridView.

193
00:10:18,242 --> 00:10:21,601
First of all, I want to make it clickable.

194
00:10:21,602 --> 00:10:26,601
We're going to set an attribute called IsItemClickEnabled.

195
00:10:27,639 --> 00:10:28,918
We'll set that equal to True.

196
00:10:28,919 --> 00:10:30,337
Now we can click on an item

197
00:10:30,338 --> 00:10:33,663
and receive an EventHandler as a result of that.

198
00:10:33,664 --> 00:10:38,512
Then to set the actual EventHandler we want to...

199
00:10:38,513 --> 00:10:41,722
(typing)

200
00:10:41,723 --> 00:10:45,760
Set the ItemClick event to a new EventHandler.

201
00:10:45,761 --> 00:10:47,958
GridView_ItemClick is just fine.

202
00:10:47,959 --> 00:10:52,958
We'll get into that in just a moment.

203
00:10:53,099 --> 00:10:55,359
I'm going to go ahead and move some things around here

204
00:10:55,360 --> 00:10:59,998
so we can continue to see things on screen well.

205
00:10:59,999 --> 00:11:02,602
Alright, now back to in the MainPage.xaml.cs.

206
00:11:02,603 --> 00:11:07,017
You can see that we're going to get

207
00:11:07,018 --> 00:11:09,993
an ItemClickEventArgs e.

208
00:11:09,994 --> 00:11:14,398
"e" will give us the ClickedItem so we want to grab that

209
00:11:14,399 --> 00:11:19,398
and we're going to convert that into an item of type Book.

210
00:11:19,801 --> 00:11:22,349
Var book equals...

211
00:11:22,350 --> 00:11:24,845
Now we have the instance of Book

212
00:11:24,846 --> 00:11:27,298
that was clicked on in our GridView

213
00:11:27,299 --> 00:11:31,575
in our ResultTextBlock that was already added

214
00:11:31,576 --> 00:11:34,231
before we started working here.

215
00:11:34,232 --> 00:11:37,591
Let's put "You selected"

216
00:11:37,592 --> 00:11:42,591
and we'll concatenate the book's title, like so.

217
00:11:44,216 --> 00:11:45,590
Great.

218
00:11:45,591 --> 00:11:49,871
Let's run the application again.

219
00:11:49,872 --> 00:11:51,029
Alright.

220
00:11:51,030 --> 00:11:54,838
Things look a little bit better with centering and such.

221
00:11:54,839 --> 00:11:58,593
You can see when I click on any of these items,

222
00:11:58,594 --> 00:12:00,395
see what was selected.

223
00:12:00,396 --> 00:12:04,282
Very cool.

224
00:12:04,283 --> 00:12:09,282
There's a lot of permutations on this idea that we can take.

225
00:12:10,384 --> 00:12:13,599
For example, this DataTemplate.

226
00:12:13,600 --> 00:12:16,042
What if we need to use it in multiple spots?

227
00:12:16,043 --> 00:12:20,075
Well, we can actually treat this just like we would

228
00:12:20,076 --> 00:12:25,075
a Style and we can extract it from here,

229
00:12:31,052 --> 00:12:33,439
and put it in a Page resource

230
00:12:33,440 --> 00:12:37,075
or even the application resource.

231
00:12:37,076 --> 00:12:39,059
All we need to do,

232
00:12:39,060 --> 00:12:41,352
if we're going to reuse this in multiple places,

233
00:12:41,353 --> 00:12:45,617
is to give it a Key.

234
00:12:45,618 --> 00:12:49,400
BookDataTemplate.

235
00:12:49,401 --> 00:12:52,180
Something like that.

236
00:12:52,181 --> 00:12:57,180
Then I would remove that and set the

237
00:12:57,961 --> 00:13:02,960
ItemTemplate equal to a StaticResource.

238
00:13:04,498 --> 00:13:06,696
just like we were using Styles.

239
00:13:06,697 --> 00:13:10,417
What did I call that BookDataTemplate?

240
00:13:10,418 --> 00:13:13,894
It should work exactly the same as before.

241
00:13:13,895 --> 00:13:16,699
Let's make sure.

242
00:13:16,700 --> 00:13:18,619
Again, if there are multiple Pages in our app

243
00:13:18,620 --> 00:13:20,656
that needed the same DataTemplate,

244
00:13:20,657 --> 00:13:21,958
we could reuse it.

245
00:13:21,959 --> 00:13:22,918
Great.

246
00:13:22,919 --> 00:13:24,475
This is actually going to come in handy for us,

247
00:13:24,476 --> 00:13:27,771
this little technique of extracting it out

248
00:13:27,772 --> 00:13:28,997
then referencing it.

249
00:13:28,998 --> 00:13:31,313
In an upcoming lesson when we take a more

250
00:13:31,314 --> 00:13:33,638
advanced approach to how we style this up.

251
00:13:33,639 --> 00:13:36,655
Before we conclude this I want to show you the exact,

252
00:13:36,656 --> 00:13:40,634
same example except using the ListView control.

253
00:13:40,635 --> 00:13:44,132
Look, it's almost identical in every way.

254
00:13:44,133 --> 00:13:47,695
The only difference is that I changed up

255
00:13:47,696 --> 00:13:50,756
how the DataTemplate is oriented.

256
00:13:50,757 --> 00:13:53,892
I have one StackPanel that's horizontal.

257
00:13:53,893 --> 00:13:57,092
I have the Image first on the left-hand side.

258
00:13:57,093 --> 00:13:59,833
Then I have another StackPanel to the right of it

259
00:13:59,834 --> 00:14:03,150
with the Title and Author kind of above each other.

260
00:14:03,151 --> 00:14:04,291
You'll see how it's changed

261
00:14:04,292 --> 00:14:06,891
but everything else about this example is identical.

262
00:14:06,892 --> 00:14:08,749
Just wanted to show you

263
00:14:08,750 --> 00:14:10,733
that it's essentially the same thing.

264
00:14:10,734 --> 00:14:13,335
Okay? One single c=Column.

265
00:14:13,336 --> 00:14:15,490
Now, inside of that column we can do as much styling

266
00:14:15,491 --> 00:14:19,789
as we want to but it's just a different look.

267
00:14:19,790 --> 00:14:20,909
Okay?

268
00:14:20,910 --> 00:14:22,754
Alright, in this lesson we talked about data binding.

269
00:14:22,755 --> 00:14:23,949
We talked about the GridView.

270
00:14:23,950 --> 00:14:28,949
We talked about how to create a DataTemplate,

271
00:14:29,549 --> 00:14:33,591
how to use the binding statement to bind to the data.

272
00:14:33,592 --> 00:14:35,510
We looked at the difference between the

273
00:14:35,511 --> 00:14:37,132
GridView and the ListView.

274
00:14:37,133 --> 00:14:39,926
We're going to need these skills for

275
00:14:39,927 --> 00:14:42,433
pretty much every project we do from here on out.

276
00:14:42,434 --> 00:14:43,893
I hope you were paying attention.

277
00:14:43,894 --> 00:14:46,112
Let's continue building on this in the very next lesson.

278
00:14:46,113 --> 00:14:49,583
We'll see you there. Thanks.  

