[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: uwp34StupendousChallengePart3_high.mp4
Video File: uwp34StupendousChallengePart3_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.625000
Video Position: 911

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Microsoft YaHei UI,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: UWP,微软雅黑,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,50,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,UWP,,0,0,0,,Stupendous Styles Challenge Solution - 第三部分：Coffee页面\N
Dialogue: 0,0:00:05.00,0:00:11.00,UWP,,0,0,0,,OK！今天是Stupendous Styles Challenge Solution - 第三部分：Coffee页面
Dialogue: 0,0:00:12.00,0:00:26.00,UWP,,0,0,0,,如果你看了我给你们的屏幕截图\N它包含了棕色背景以及三个棕色前景色的按钮
Dialogue: 0,0:00:26.00,0:00:33.00,UWP,,0,0,0,,这里有一二三一共三行\N而且接下来这部分还将添加一行，将其他内容顶上去
Dialogue: 0,0:00:36.00,0:00:45.00,UWP,,0,0,0,,事实上，这里可以有几种做法来写这个按钮\N我可以把他们一起放在一个StackPanel里面
Dialogue: 0,0:00:45.00,0:00:48.00,UWP,,0,0,0,,然后居中这些内容\N你可以尝试你能想到的所有方法，我都能接受
Dialogue: 0,0:00:48.00,0:01:00.00,UWP,,0,0,0,,看起来我们要在同一个区域，用同样的图像创建Logo\N这是个好机会，我们可以在应用层创建不同的样式
Dialogue: 0,0:01:00.00,0:01:11.00,UWP,,0,0,0,,这里还有一些文本\N结合之前的视频，我们可以举一反三的在应用层放置内容
Dialogue: 0,0:01:11.00,0:01:13.00,UWP,,0,0,0,,那么让我们先从这里开始
Dialogue: 0,0:01:13.00,0:01:16.00,UWP,,0,0,0,,我们在手册中可以看到围绕这一主题我们有不少方法
Dialogue: 0,0:01:16.00,0:01:28.00,UWP,,0,0,0,,在知识点6，这里有MenuContent\N我现在要做的是根据这个颜色进行修改
Dialogue: 0,0:01:29.00,0:01:35.00,UWP,,0,0,0,,拖拽这个颜色回到Coffee.page.xaml\N首先将背景颜色改变<Grid Background = "#3C1F19">
Dialogue: 0,0:01:35.00,0:01:42.00,UWP,,0,0,0,,我的方法只对行进行修改\N你可能会以列的方式的修改，那也是可以的！！\N
Dialogue: 0,0:01:44.00,0:01:49.00,UWP,,0,0,0,,首先输入<Grid.RowDefinitions></Grid.RowDefinitions> //打代码ing
Dialogue: 0,0:01:49.00,0:01:55.00,UWP,,0,0,0,,<RowDefintion Height="Auto" /> //打代码ing
Dialogue: 0,0:01:56.00,0:02:04.00,UWP,,0,0,0,,然后我要复制四次，但第四次记得将"Auto"改为"*"
Dialogue: 0,0:02:04.00,0:02:06.00,UWP,,0,0,0,,Ok！很好
Dialogue: 0,0:02:06.00,0:02:08.00,UWP,,0,0,0,,接下来我们需要加入图像
Dialogue: 0,0:02:08.00,0:02:22.00,UWP,,0,0,0,,现在我需要做个决定\N图片是从Donut页面直接复制过来呢？还是将这一部分全部拖走以便重复使用
Dialogue: 0,0:02:22.00,0:02:24.00,UWP,,0,0,0,,好吧，我们就这么干
Dialogue: 0,0:02:24.00,0:02:26.00,UWP,,0,0,0,,转到App.xaml
Dialogue: 0,0:02:26.00,0:02:28.00,UWP,,0,0,0,,接下来图片要在多个页面调用，所以应该放在这里
Dialogue: 0,0:02:28.00,0:02:31.00,UWP,,0,0,0,,首先创建Resourse Section与一个新的样式
Dialogue: 0,0:02:31.00,0:02:35.00,UWP,,0,0,0,,令Tartget Type等于Image
Dialogue: 0,0:02:35.00,0:02:38.00,UWP,,0,0,0,,key等于白色Logo样式
Dialogue: 0,0:02:38.00,0:02:46.00,UWP,,0,0,0,,也许我可以换个更简单点的名字
Dialogue: 0,0:02:47.50,0:02:52.50,UWP,,0,0,0,,现在我要把剪切板中的内容粘贴过来
Dialogue: 0,0:02:54.50,0:03:05.50,UWP,,0,0,0,,Setter、Property与Value //打代码ing
Dialogue: 0,0:03:05.50,0:03:07.50,UWP,,0,0,0,,好了，Source
Dialogue: 0,0:03:07.50,0:03:09.50,UWP,,0,0,0,,
Dialogue: 0,0:03:09.50,0:03:11.50,UWP,,0,0,0,,
Dialogue: 0,0:03:11.50,0:03:13.50,UWP,,0,0,0,,
Dialogue: 0,0:03:13.50,0:03:15.50,UWP,,0,0,0,,宽度Width
Dialogue: 0,0:03:15.50,0:03:17.50,UWP,,0,0,0,,这个值应该是150
Dialogue: 0,0:03:17.50,0:03:19.50,UWP,,0,0,0,,然后是外边距
Dialogue: 0,0:03:19.50,0:03:21.50,UWP,,0,0,0,,
Dialogue: 0,0:03:21.50,0:03:23.50,UWP,,0,0,0,,
Dialogue: 0,0:03:23.50,0:03:25.50,UWP,,0,0,0,,
Dialogue: 0,0:03:25.50,0:03:28.50,UWP,,0,0,0,,20，20，20，0
Dialogue: 0,0:03:42.50,0:03:44.50,UWP,,0,0,0,,在这里试一下
Dialogue: 0,0:03:51.50,0:03:53.50,UWP,,0,0,0,,这应该可以得到我们想要的，不过待会再来看看效果
Dialogue: 0,0:03:53.50,0:04:01.50,UWP,,0,0,0,,我也清楚我要从文本框中拖动这些，然后根据其创建一种样式
Dialogue: 0,0:04:01.50,0:04:03.50,UWP,,0,0,0,,接下来就开始吧
Dialogue: 0,0:04:03.50,0:04:05.50,UWP,,0,0,0,,字体，前景色，外边距
Dialogue: 0,0:04:05.50,0:04:07.50,UWP,,0,0,0,,
Dialogue: 0,0:04:07.50,0:04:09.50,UWP,,0,0,0,,转到App.xaml
Dialogue: 0,0:04:09.50,0:04:19.50,UWP,,0,0,0,,将这个样式命名为TextBlock
Dialogue: 0,0:04:20.50,0:04:30.50,UWP,,0,0,0,,这个样式叫做LabelTextBlockStyle
Dialogue: 0,0:04:30.50,0:04:35.50,UWP,,0,0,0,,给东西命名真麻烦
Dialogue: 0,0:04:35.48,0:04:39.48,UWP,,0,0,0,,所以如果你们要把某些东西命名的更加具体化，请自便吧
Dialogue: 0,0:04:39.50,0:04:42.50,UWP,,0,0,0,,字号FontSize
Dialogue: 0,0:04:42.50,0:04:44.50,UWP,,0,0,0,,18
Dialogue: 0,0:04:48.50,0:04:49.50,UWP,,0,0,0,,前景色Foreground
Dialogue: 0,0:04:49.50,0:04:51.50,UWP,,0,0,0,,
Dialogue: 0,0:04:51.50,0:04:53.50,UWP,,0,0,0,,
Dialogue: 0,0:04:53.50,0:04:55.00,UWP,,0,0,0,,白色White
Dialogue: 0,0:04:55.00,0:04:57.00,UWP,,0,0,0,,还有外边距Margin
Dialogue: 0,0:04:57.00,0:04:58.50,UWP,,0,0,0,,
Dialogue: 0,0:04:58.50,0:05:02.50,UWP,,0,0,0,,这个值是“20，20，20，0”
Dialogue: 0,0:05:10.50,0:05:12.50,UWP,,0,0,0,,我要把这些都替换掉
Dialogue: 0,0:05:13.50,0:05:14.50,UWP,,0,0,0,,回到Donate页面
Dialogue: 0,0:05:16.50,0:05:18.50,UWP,,0,0,0,,删掉重复的属性
Dialogue: 0,0:05:18.50,0:05:20.50,UWP,,0,0,0,,
Dialogue: 0,0:05:20.50,0:05:22.50,UWP,,0,0,0,,
Dialogue: 0,0:05:22.50,0:05:29.50,UWP,,0,0,0,,设置Style="｛StaticResource LabelTextBlockStyle｝"
Dialogue: 0,0:05:37.50,0:05:40.50,UWP,,0,0,0,,复制粘贴拖到这里来
Dialogue: 0,0:05:50.50,0:06:03.50,UWP,,0,0,0,,然后这里Sytle="｛StaticResource LabelTextBlockStyle｝"
Dialogue: 0,0:06:03.50,0:06:05.50,UWP,,0,0,0,,好的
Dialogue: 0,0:06:05.50,0:06:16.50,UWP,,0,0,0,,在进行下一步之前，我想确保编译器没有改动我们的Donut页面和Coffee页面\N
Dialogue: 0,0:06:18.50,0:06:23.50,UWP,,0,0,0,,看起来这个Logo需要我多添加一个HorizontalAlignment属性，并设为"Left"
Dialogue: 0,0:06:23.50,0:06:26.50,UWP,,0,0,0,,我们来到这里
Dialogue: 0,0:06:33.50,0:06:34.50,UWP,,0,0,0,,设置水平对齐的值为
Dialogue: 0,0:06:34.50,0:06:36.50,UWP,,0,0,0,,Value="Left"
Dialogue: 0,0:06:36.50,0:06:38.50,UWP,,0,0,0,,我们需要多注意一下这些细节
Dialogue: 0,0:06:38.50,0:06:40.50,UWP,,0,0,0,,我们会在下一次运行检查效果
Dialogue: 0,0:06:40.50,0:06:42.50,UWP,,0,0,0,,OK！这就是我们的Coffee页面
Dialogue: 0,0:06:42.50,0:06:44.50,UWP,,0,0,0,,
Dialogue: 0,0:06:44.50,0:06:46.50,UWP,,0,0,0,,
Dialogue: 0,0:06:46.50,0:06:48.50,UWP,,0,0,0,,那么我还需要加入按钮
Dialogue: 0,0:06:48.50,0:06:50.50,UWP,,0,0,0,,
Dialogue: 0,0:06:50.50,0:06:52.50,UWP,,0,0,0,,而且还是三个
Dialogue: 0,0:06:52.50,0:06:54.50,UWP,,0,0,0,,还是特殊的三个按钮
Dialogue: 0,0:06:54.50,0:06:58.50,UWP,,0,0,0,,这里的按钮不太一样，首先它不能是封闭的
Dialogue: 0,0:06:58.50,0:07:00.50,UWP,,0,0,0,,
Dialogue: 0,0:07:00.50,0:07:02.50,UWP,,0,0,0,,而且按钮要具备Flyout对吧
Dialogue: 0,0:07:02.50,0:07:04.50,UWP,,0,0,0,,所以我们加入Flyout
Dialogue: 0,0:07:04.50,0:07:06.50,UWP,,0,0,0,,
Dialogue: 0,0:07:06.50,0:07:08.50,UWP,,0,0,0,,然后我们要设置Menu.Flyout
Dialogue: 0,0:07:08.50,0:07:10.50,UWP,,0,0,0,,
Dialogue: 0,0:07:10.50,0:07:16.50,UWP,,0,0,0,,然后设置MenuFlyoutItems
Dialogue: 0,0:07:16.50,0:07:22.50,UWP,,0,0,0,,这一部分就是我们要使用list的地方
Dialogue: 0,0:07:22.50,0:07:24.50,UWP,,0,0,0,,刚好程序中包含了List，因此我现在能看到它
Dialogue: 0,0:07:24.50,0:07:26.50,UWP,,0,0,0,,
Dialogue: 0,0:07:26.50,0:07:28.50,UWP,,0,0,0,,接下来我们基本上就是。。。
Dialogue: 0,0:07:28.50,0:07:30.50,UWP,,0,0,0,,
Dialogue: 0,0:07:30.50,0:07:32.50,UWP,,0,0,0,,然后
Dialogue: 0,0:07:32.50,0:07:34.50,UWP,,0,0,0,,
Dialogue: 0,0:07:34.50,0:07:36.50,UWP,,0,0,0,,我们将Content的内容设为“Roast”
Dialogue: 0,0:07:36.50,0:07:38.50,UWP,,0,0,0,,
Dialogue: 0,0:07:38.50,0:07:40.50,UWP,,0,0,0,,我还要设置
Dialogue: 0,0:07:40.50,0:07:42.50,UWP,,0,0,0,,
Dialogue: 0,0:07:42.50,0:07:50.50,UWP,,0,0,0,,设置外边距每个方向都是10\N如果你每个方向的值都相同，那么只需要一个数字
Dialogue: 0,0:07:50.50,0:07:52.50,UWP,,0,0,0,,仅供参考
Dialogue: 0,0:07:52.50,0:07:54.50,UWP,,0,0,0,,然后呢
Dialogue: 0,0:07:54.50,0:07:58.50,UWP,,0,0,0,,前景色Foreground=“White”
Dialogue: 0,0:07:58.50,0:08:00.50,UWP,,0,0,0,,这倒是提醒了我
Dialogue: 0,0:08:00.50,0:08:05.50,UWP,,0,0,0,,我需要把它们放到一个StackPanel里面
Dialogue: 0,0:08:05.50,0:08:07.50,UWP,,0,0,0,,
Dialogue: 0,0:08:07.50,0:08:09.50,UWP,,0,0,0,,StackPanel的位置在第二行
Dialogue: 0,0:08:09.50,0:08:15.50,UWP,,0,0,0,,所以设置Grid.Row="1"
Dialogue: 0,0:08:15.50,0:08:22.50,UWP,,0,0,0,,还有就是HorizontalAlignment=“Center”
Dialogue: 0,0:08:22.50,0:08:24.50,UWP,,0,0,0,,对了
Dialogue: 0,0:08:24.50,0:08:26.50,UWP,,0,0,0,,我们要把Orientation属性设置为"Horizontal"
Dialogue: 0,0:08:26.50,0:08:28.50,UWP,,0,0,0,,
Dialogue: 0,0:08:28.50,0:08:30.50,UWP,,0,0,0,,OK! 很好
Dialogue: 0,0:08:30.50,0:08:32.50,UWP,,0,0,0,,
Dialogue: 0,0:08:32.50,0:08:34.50,UWP,,0,0,0,,换行之战~~
Dialogue: 0,0:08:34.50,0:08:36.50,UWP,,0,0,0,,
Dialogue: 0,0:08:36.50,0:08:43.50,UWP,,0,0,0,,由于我们之前说好的要重复利用这些样式，因此我在这里要使用gratuitous样式
Dialogue: 0,0:08:43.50,0:08:47.50,UWP,,0,0,0,,实际上这里并不需要使用样式，但是我还是想这样做（好萌~~）
Dialogue: 0,0:08:47.50,0:08:49.50,UWP,,0,0,0,,So~~~
Dialogue: 0,0:08:49.50,0:08:51.50,UWP,,0,0,0,,
Dialogue: 0,0:08:51.50,0:08:53.50,UWP,,0,0,0,,<Page.Resources></Page.Resources>
Dialogue: 0,0:08:53.50,0:08:55.50,UWP,,0,0,0,,那么我们就有了这些样式
Dialogue: 0,0:08:55.50,0:08:57.50,UWP,,0,0,0,,
Dialogue: 0,0:08:57.50,0:08:59.50,UWP,,0,0,0,,
Dialogue: 0,0:08:59.50,0:09:01.50,UWP,,0,0,0,,
Dialogue: 0,0:09:01.50,0:09:03.50,UWP,,0,0,0,,TargetType
Dialogue: 0,0:09:03.50,0:09:05.50,UWP,,0,0,0,,
Dialogue: 0,0:09:05.50,0:09:07.50,UWP,,0,0,0,,
Dialogue: 0,0:09:07.50,0:09:09.50,UWP,,0,0,0,,
Dialogue: 0,0:09:09.50,0:09:11.50,UWP,,0,0,0,,key的值要等于。。。
Dialogue: 0,0:09:11.50,0:09:16.50,UWP,,0,0,0,,FlyoutButtonStyle
Dialogue: 0,0:09:16.50,0:09:18.50,UWP,,0,0,0,,下次我该取个更好的名字
Dialogue: 0,0:09:18.50,0:09:20.50,UWP,,0,0,0,,接下来我们还要加入setters
Dialogue: 0,0:09:20.50,0:09:22.50,UWP,,0,0,0,,
Dialogue: 0,0:09:22.50,0:09:24.50,UWP,,0,0,0,,只需要把那一部分的粘贴过来就好
Dialogue: 0,0:09:24.50,0:09:28.50,UWP,,0,0,0,,Property还有value
Dialogue: 0,0:09:28.50,0:09:30.50,UWP,,0,0,0,,
Dialogue: 0,0:09:30.50,0:09:32.50,UWP,,0,0,0,,
Dialogue: 0,0:09:32.50,0:09:34.50,UWP,,0,0,0,,设置外边距Margin
Dialogue: 0,0:09:34.50,0:09:38.50,UWP,,0,0,0,,10
Dialogue: 0,0:09:38.50,0:09:42.50,UWP,,0,0,0,,然后是前景色Foreground
Dialogue: 0,0:09:43.50,0:09:44.50,UWP,,0,0,0,,白色White
Dialogue: 0,0:09:44.50,0:09:46.50,UWP,,0,0,0,,
Dialogue: 0,0:09:46.50,0:09:48.50,UWP,,0,0,0,,
Dialogue: 0,0:09:48.50,0:09:50.50,UWP,,0,0,0,,
Dialogue: 0,0:09:50.50,0:09:56.50,UWP,,0,0,0,,然后我们就可以使用这个flyout按钮样式了
Dialogue: 0,0:09:56.50,0:09:58.50,UWP,,0,0,0,,
Dialogue: 0,0:09:58.50,0:10:07.50,UWP,,0,0,0,,Style=“｛StaticResource FlyoutButtonStyle｝”
Dialogue: 0,0:10:07.50,0:10:09.50,UWP,,0,0,0,,
Dialogue: 0,0:10:09.50,0:10:11.50,UWP,,0,0,0,,现在我需要三个
Dialogue: 0,0:10:11.50,0:10:15.50,UWP,,0,0,0,,萌叔以为忘记设置外边距了~~~哈哈哈
Dialogue: 0,0:10:15.50,0:10:20.50,UWP,,0,0,0,,复制粘贴~~
Dialogue: 0,0:10:20.50,0:10:22.50,UWP,,0,0,0,,第二个的Content值是~~~
Dialogue: 0,0:10:22.50,0:10:24.50,UWP,,0,0,0,,Sweetener
Dialogue: 0,0:10:24.50,0:10:26.50,UWP,,0,0,0,,第三个
Dialogue: 0,0:10:26.50,0:10:28.50,UWP,,0,0,0,,
Dialogue: 0,0:10:28.50,0:10:32.50,UWP,,0,0,0,,Cream
Dialogue: 0,0:10:32.50,0:10:34.50,UWP,,0,0,0,,现在我要做的事是~~
Dialogue: 0,0:10:34.50,0:10:37.50,UWP,,0,0,0,,改变这些Text的值
Dialogue: 0,0:10:37.50,0:10:39.50,UWP,,0,0,0,,Dark
Dialogue: 0,0:10:39.50,0:10:43.50,UWP,,0,0,0,,Medium
Dialogue: 0,0:10:43.50,0:10:49.50,UWP,,0,0,0,,下一个是Sugar
Dialogue: 0,0:10:45.50,0:10:49.50,UWP,,0,0,0,,
Dialogue: 0,0:10:49.50,0:10:51.50,UWP,,0,0,0,,删掉第三个MenuFlyoutItem
Dialogue: 0,0:10:51.50,0:10:53.50,UWP,,0,0,0,,最后一个是
Dialogue: 0,0:10:55.50,0:10:57.50,UWP,,0,0,0,,2% Milk
Dialogue: 0,0:10:57.50,0:10:59.50,UWP,,0,0,0,,Whole Milk
Dialogue: 0,0:10:59.50,0:11:01.50,UWP,,0,0,0,,
Dialogue: 0,0:11:01.50,0:11:05.50,UWP,,0,0,0,,然后我想创建一个单击事件处理程序
Dialogue: 0,0:11:05.50,0:11:13.50,UWP,,0,0,0,,但是我想作为一个组来创建，这样三个或两个FlyoutItem会有相同的单击事件
Dialogue: 0,0:11:13.50,0:11:15.50,UWP,,0,0,0,,Click=“”
Dialogue: 0,0:11:15.50,0:11:18.50,UWP,,0,0,0,,我要自己命名（口亨  Roast_Click
Dialogue: 0,0:11:18.50,0:11:20.50,UWP,,0,0,0,,然后就复制粘贴大法
Dialogue: 0,0:11:20.50,0:11:22.50,UWP,,0,0,0,,
Dialogue: 0,0:11:22.50,0:11:24.50,UWP,,0,0,0,,
Dialogue: 0,0:11:24.50,0:11:26.50,UWP,,0,0,0,,然后
Dialogue: 0,0:11:26.50,0:11:28.50,UWP,,0,0,0,,对“Sweetener”做同样的事情
Dialogue: 0,0:11:28.50,0:11:35.50,UWP,,0,0,0,,但是要记得重新命名 “Sweetener_CLick”
Dialogue: 0,0:11:35.50,0:11:37.50,UWP,,0,0,0,,
Dialogue: 0,0:11:37.50,0:11:43.50,UWP,,0,0,0,,最后就是"Cream_Click"
Dialogue: 0,0:11:43.50,0:11:45.50,UWP,,0,0,0,,
Dialogue: 0,0:11:45.50,0:11:47.50,UWP,,0,0,0,,
Dialogue: 0,0:11:47.50,0:11:49.50,UWP,,0,0,0,,
Dialogue: 0,0:11:49.50,0:11:51.50,UWP,,0,0,0,,
Dialogue: 0,0:12:00.50,0:12:12.50,UWP,,0,0,0,,好了~把鼠标移动到对应的单击事件上\N然后F12转到c#代码页面同时创建对应的事件处理程序
Dialogue: 0,0:12:12.50,0:12:14.50,UWP,,0,0,0,,
Dialogue: 0,0:12:14.50,0:12:16.50,UWP,,0,0,0,,
Dialogue: 0,0:12:16.50,0:12:18.50,UWP,,0,0,0,,
Dialogue: 0,0:12:18.50,0:12:20.50,UWP,,0,0,0,,好
Dialogue: 0,0:12:20.50,0:12:27.50,UWP,,0,0,0,,待会再来写代码\N还有一些Coffee页面的细节要处理
Dialogue: 0,0:12:27.50,0:12:33.50,UWP,,0,0,0,,在这些下面，我想创建一个
Dialogue: 0,0:12:33.50,0:12:39.50,UWP,,0,0,0,,你知道的，用来显示Coffee的一个标签
Dialogue: 0,0:12:39.50,0:12:41.50,UWP,,0,0,0,,StackPanel
Dialogue: 0,0:12:41.50,0:12:45.50,UWP,,0,0,0,,我要把这些内容以水平方式呈现
Dialogue: 0,0:12:45.50,0:12:48.50,UWP,,0,0,0,,Orientation=“Horizontal”
Dialogue: 0,0:12:48.50,0:12:52.50,UWP,,0,0,0,,Grid.Row="2"
Dialogue: 0,0:12:52.50,0:12:54.50,UWP,,0,0,0,,我打算创建两个文本框TextBlock
Dialogue: 0,0:12:54.50,0:12:56.50,UWP,,0,0,0,,
Dialogue: 0,0:12:56.50,0:13:04.50,UWP,,0,0,0,,第一个的文本会被固定为 ”Coffee：“
Dialogue: 0,0:13:04.50,0:13:10.50,UWP,,0,0,0,,我打算重用之前用的一个样式
Dialogue: 0,0:13:10.50,0:13:15.50,UWP,,0,0,0,,Style="｛StaticResource LabelTextBlockStyle｝"
Dialogue: 0,0:13:15.50,0:13:17.50,UWP,,0,0,0,,
Dialogue: 0,0:13:17.50,0:13:25.50,UWP,,0,0,0,,第二个文本框我要给他一个名字，因为我希望它能够被程序引用
Dialogue: 0,0:13:25.50,0:13:33.50,UWP,,0,0,0,,Style="｛StaticResouece LabelTextBlockStyle｝"
Dialogue: 0,0:13:33.50,0:13:35.50,UWP,,0,0,0,,设计完成~~
Dialogue: 0,0:13:35.50,0:13:37.50,UWP,,0,0,0,,现在我们应该已经把框架搭建好了
Dialogue: 0,0:13:37.50,0:13:39.50,UWP,,0,0,0,,
Dialogue: 0,0:13:39.50,0:13:41.50,UWP,,0,0,0,,回到CoffeePage.xaml.cs
Dialogue: 0,0:13:41.50,0:13:43.50,UWP,,0,0,0,,接下来我要做什么呢
Dialogue: 0,0:13:43.50,0:14:00.50,UWP,,0,0,0,,我的想法是，在程序中跟踪我们所选择的对象，然后输出结果在文本框里
Dialogue: 0,0:14:00.50,0:14:10.50,UWP,,0,0,0,,我觉得这三个方法需要共同调用一个相同的方法来处理消息
Dialogue: 0,0:14:10.50,0:14:18.50,UWP,,0,0,0,,我们首先创建一个Private void displayResult()｛｝
Dialogue: 0,0:14:18.50,0:14:20.50,UWP,,0,0,0,,就像这样
Dialogue: 0,0:14:20.50,0:14:22.50,UWP,,0,0,0,,
Dialogue: 0,0:14:22.50,0:14:30.50,UWP,,0,0,0,,四个按钮单击事件来决定被选择的对象(注：应该是口误 三个按钮)
Dialogue: 0,0:14:30.50,0:14:35.50,UWP,,0,0,0,,var selected = (MenuFlyoutItem)sender ;
Dialogue: 0,0:14:35.50,0:14:41.50,UWP,,0,0,0,,抱歉，在这里我们不会使用事件而是使用sender\N它能告诉我们哪个按钮被按下了
Dialogue: 0,0:14:41.50,0:14:46.50,UWP,,0,0,0,,然后我们可以将其cast到MenuFlyoutItem类型
Dialogue: 0,0:14:46.50,0:14:48.50,UWP,,0,0,0,,然后是
Dialogue: 0,0:14:48.50,0:14:50.50,UWP,,0,0,0,,
Dialogue: 0,0:14:50.50,0:15:00.50,UWP,,0,0,0,,看起来我需要传递一些数据给displayResult方法，我想我需要让着三个单击事件有所联系
Dialogue: 0,0:15:00.50,0:15:12.50,UWP,,0,0,0,,创建一下私有值 待会你就知道如何使用他们
Dialogue: 0,0:15:12.50,0:15:14.50,UWP,,0,0,0,,
Dialogue: 0,0:15:14.50,0:15:16.50,UWP,,0,0,0,,
Dialogue: 0,0:15:16.50,0:15:18.50,UWP,,0,0,0,,
Dialogue: 0,0:15:18.50,0:15:20.50,UWP,,0,0,0,,
Dialogue: 0,0:15:20.50,0:15:22.50,UWP,,0,0,0,,OK!
Dialogue: 0,0:15:22.50,0:15:24.50,UWP,,0,0,0,,接下来就是见证奇迹的时刻~
Dialogue: 0,0:15:24.50,0:15:30.50,UWP,,0,0,0,,我们设置_roast = selected.Text
Dialogue: 0,0:15:30.50,0:15:32.50,UWP,,0,0,0,,然后调用displayResult方法
Dialogue: 0,0:15:32.50,0:15:34.50,UWP,,0,0,0,,然后我们调用displayResult() ;
Dialogue: 0,0:15:34.50,0:15:36.50,UWP,,0,0,0,,现在按照这种方法再来几次（其实就是复制粘贴...）
Dialogue: 0,0:15:36.50,0:15:38.50,UWP,,0,0,0,,再来两次
Dialogue: 0,0:15:38.50,0:15:40.50,UWP,,0,0,0,,粘贴过来
Dialogue: 0,0:15:40.50,0:15:55.50,UWP,,0,0,0,,但是要记得修改中间这个过渡用的参数 _sweetener
Dialogue: 0,0:15:55.50,0:16:00.50,UWP,,0,0,0,,看起来有点怪，但是确实是对的
Dialogue: 0,0:16:00.50,0:16:02.50,UWP,,0,0,0,,然后就是_cream
Dialogue: 0,0:16:02.50,0:16:04.50,UWP,,0,0,0,,然后回到displayResult方法
Dialogue: 0,0:16:04.50,0:16:14.50,UWP,,0,0,0,,我们要做的事就是将上面选择的那些文本自动添加
Dialogue: 0,0:16:14.50,0:16:29.50,UWP,,0,0,0,,ResultTextBlock.Text= _roast + _sweetener + _cream ;
Dialogue: 0,0:16:29.50,0:16:33.50,UWP,,0,0,0,,实际上并没有那么简单，我们还需要添加一些条件在这里
Dialogue: 0,0:16:33.50,0:16:35.50,UWP,,0,0,0,,首先
Dialogue: 0,0:16:35.50,0:16:37.50,UWP,,0,0,0,,
Dialogue: 0,0:16:37.50,0:16:39.50,UWP,,0,0,0,,看手机~~~
Dialogue: 0,0:16:39.50,0:16:41.50,UWP,,0,0,0,,
Dialogue: 0,0:16:41.50,0:16:50.50,UWP,,0,0,0,,如果_roast的值是“None” 或者空值的话
Dialogue: 0,0:16:50.50,0:16:52.50,UWP,,0,0,0,,
Dialogue: 0,0:16:52.50,0:17:02.50,UWP,,0,0,0,,那么我们要把最终的文本设为“None”，因为不能完全没有roast内容
Dialogue: 0,0:17:02.50,0:17:05.50,UWP,,0,0,0,,如果是这样我们就不显示最终内容
Dialogue: 0,0:17:05.50,0:17:25.50,UWP,,0,0,0,,那么如果roast的内容为"None" 或者String.IsNullOrEmpty(_roast) \N//萌叔说他很喜欢这个String类下的方法~~
Dialogue: 0,0:17:25.50,0:17:35.50,UWP,,0,0,0,,那么我们设置ResultTextBlock.Text 的内容为None然后返回
Dialogue: 0,0:17:37.50,0:17:43.50,UWP,,0,0,0,,那么我们假设能够确保Roast中包含了某些内容
Dialogue: 0,0:17:43.50,0:17:52.50,UWP,,0,0,0,,那么我们就可以将ResultTextBlock的值为Roast
Dialogue: 0,0:17:52.50,0:17:54.50,UWP,,0,0,0,,第二件我们需要做的事是
Dialogue: 0,0:17:54.50,0:17:58.50,UWP,,0,0,0,,检查_cream 和 _sweetener的值
Dialogue: 0,0:17:58.50,0:18:00.50,UWP,,0,0,0,,
Dialogue: 0,0:18:00.50,0:18:25.50,UWP,,0,0,0,,如果cream的值不为"None"而且String.IsNullOrEmpty(_cream) )\N 也就是说_cream是有有效值的
Dialogue: 0,0:18:25.50,0:18:35.50,UWP,,0,0,0,,那么我们就可以将其添加到ResultTextBlock中
Dialogue: 0,0:18:35.50,0:18:37.50,UWP,,0,0,0,,另外还有一个“+” 作为连接符号
Dialogue: 0,0:18:37.50,0:18:40.50,UWP,,0,0,0,,还有+ _cream ；
Dialogue: 0,0:18:40.50,0:18:42.50,UWP,,0,0,0,,无论_cream的值是否有效
Dialogue: 0,0:18:42.50,0:18:48.50,UWP,,0,0,0,,然后用相同的方法对sweetener进行设置
Dialogue: 0,0:18:48.50,0:18:52.50,UWP,,0,0,0,,将_sweetener 替换_cream
Dialogue: 0,0:19:04.50,0:19:10.50,UWP,,0,0,0,,生成一下解决方法，然后运行
Dialogue: 0,0:19:10.50,0:19:12.50,UWP,,0,0,0,,
Dialogue: 0,0:19:12.50,0:19:14.50,UWP,,0,0,0,,萌叔变身测试工程师！！（严肃脸）
Dialogue: 0,0:19:20.50,0:19:21.50,UWP,,0,0,0,,奏效了
Dialogue: 0,0:19:24.50,0:19:25.50,UWP,,0,0,0,,None
Dialogue: 0,0:19:25.50,0:19:27.50,UWP,,0,0,0,,None
Dialogue: 0,0:19:27.50,0:19:29.50,UWP,,0,0,0,,
Dialogue: 0,0:19:29.50,0:19:31.50,UWP,,0,0,0,,Dark
Dialogue: 0,0:19:31.50,0:19:33.50,UWP,,0,0,0,,Whole Milk
Dialogue: 0,0:19:33.50,0:19:35.50,UWP,,0,0,0,,None   Dark
Dialogue: 0,0:19:35.50,0:19:44.50,UWP,,0,0,0,,Ok！我对这个结果很满意N我们下节课继续！谢谢
Dialogue: 0,0:19:44.50,0:19:46.50,UWP,,0,0,0,,微软大法好
