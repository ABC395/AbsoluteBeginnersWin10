1
00:00:02,160 --> 00:00:06,161
翻译：陈继民

2
00:00:06,161 --> 00:00:07,600
在我们开始之前

3
00:00:07,601 --> 00:00:11,781
让我们创建一个项目，添加一些引用

4
00:00:11,782 --> 00:00:15,269
然后集中我们的时候

5
00:00:15,270 --> 00:00:17,620
用来设计我们的应用

6
00:00:17,621 --> 00:00:19,396
我们要采用一些稍微有些不同的布局方式

7
00:00:19,397 --> 00:00:20,749
相比我们之前课程所用到的

8
00:00:20,750 --> 00:00:22,818
可能会用到一些不同的新技术

9
00:00:22,819 --> 00:00:26,274
不说其他的了，让我先把摄像头关了

10
00:00:26,275 --> 00:00:27,985
以便我能集中注意力

11
00:00:28,462 --> 00:00:30,801
我们要创建一个新的项目

12
00:00:32,195 --> 00:00:36,369
把它命名为UWPSoundBoard.

13
00:00:43,618 --> 00:00:45,921
然后像往常一样

14
00:00:45,922 --> 00:00:49,509
删掉整个帧数计数器

15
00:00:51,426 --> 00:00:53,952
然后我要做的是添加一些引用

16
00:00:53,953 --> 00:00:55,595
这里有几种不一样的引用

17
00:00:55,596 --> 00:00:57,907
对于这个项目，你可以下载这些

18
00:00:57,908 --> 00:01:01,568
从之前的视频或者当前的视频

19
00:01:01,569 --> 00:01:05,610
在那些视频下面有下载链接

20
00:01:05,611 --> 00:01:07,231
回过头来，你会发现这里存在着一些模式

21
00:01:07,232 --> 00:01:09,759
这里这些全部都是音频

22
00:01:09,760 --> 00:01:14,388
然后这些icon图标文件与这些wav音频文件相对应

23
00:01:14,389 --> 00:01:17,748
所以每个子文件夹都有两个这样的wav音频文件

24
00:01:21,859 --> 00:01:26,644
如果我们回到image文件夹，这里也是一样的

25
00:01:27,696 --> 00:01:31,343
只不过这里是png而不是wav文件

26
00:01:31,344 --> 00:01:34,564
下一个类型的文件夹里面是我们的图标文件

27
00:01:34,565 --> 00:01:39,564
这些会用在分割视图里的窗格里

28
00:01:40,048 --> 00:01:45,047
我们通常用来显示一系列的选项

29
00:01:47,386 --> 00:01:49,454
每个都代表着不同种类的东西

30
00:01:49,455 --> 00:01:51,566
最后，这里有一个PackageAppXManifest文件夹

31
00:01:51,567 --> 00:01:55,278
还有这些logo图标

32
00:01:55,279 --> 00:01:59,662
用于启动画面的图标

33
00:01:59,663 --> 00:02:01,315
这些东西会被要求提供

34
00:02:01,316 --> 00:02:05,789
当我们准备把这个app提交的应用商店的时候

35
00:02:06,212 --> 00:02:10,210
但是不凑巧的是，你把这些东西复制进去的办法

36
00:02:10,211 --> 00:02:14,018
并不是那么简单

37
00:02:14,019 --> 00:02:17,375
你会发现这里会有一些奇怪的地方

38
00:02:17,376 --> 00:02:20,599
Audio有一个子文件夹，然后里面会有相应的文件

39
00:02:20,600 --> 00:02:24,130
所以当你拖拽这个文件夹

40
00:02:24,131 --> 00:02:26,828
到你的引用文件夹里，你会发现

41
00:02:26,829 --> 00:02:30,167
里面并没有子文件夹！

42
00:02:30,168 --> 00:02:31,702
然而它本来应该有的！

43
00:02:31,703 --> 00:02:33,974
所以我想我们并没有把他们复制进去

44
00:02:33,975 --> 00:02:38,273
所以你需要进到子文件里，然后拖拽它们到vs里

45
00:02:38,274 --> 00:02:40,545
然后vs会提示！它们已经存在？！（萌叔魔性笑声）

46
00:02:40,546 --> 00:02:42,294
就像这样

47
00:02:42,295 --> 00:02:43,915
只需要点击“应用于所有项”

48
00:02:43,916 --> 00:02:45,846
然后就好了~

49
00:02:45,847 --> 00:02:47,307
所以我们应该有四个文件夹

50
00:02:47,308 --> 00:02:50,581
然后再Audio子文件夹里每一个子文件应该有两个音频文件

51
00:02:50,582 --> 00:02:54,709
用同样的方法处理Icon文件夹

52
00:02:54,710 --> 00:02:57,504
拖拽大法好！

53
00:02:57,505 --> 00:02:59,562
什么都没有~

54
00:02:59,563 --> 00:03:02,325
只是我们把它们添加到当前的项目里

55
00:03:02,326 --> 00:03:06,165
所以全选它们，拖拽进去~

56
00:03:06,166 --> 00:03:09,919
你确定吗？已经存在这些文件里！不，并没有（萌叔吐槽时间）

57
00:03:09,920 --> 00:03:14,919
再次添加，然后用同样的办法处理Image文件夹

58
00:03:15,631 --> 00:03:18,720
对于每个音频文件

59
00:03:20,555 --> 00:03:23,402
没有子文件夹，但是我们知道它们在那

60
00:03:23,409 --> 00:03:25,414
拖拽大法！

61
00:03:25,415 --> 00:03:27,387
你确定吗？？？是的！

62
00:03:30,188 --> 00:03:32,816
然后就好了

63
00:03:32,817 --> 00:03:37,019
最后到PackageAppXManifest文件夹

64
00:03:37,020 --> 00:03:41,872
完成这最后的一小块工作

65
00:03:48,903 --> 00:03:50,565
这样就完成了！

66
00:03:50,566 --> 00:03:52,745
稍后我们会用到它们

67
00:03:52,891 --> 00:03:55,999
全屏一下~

68
00:03:57,051 --> 00:04:00,154
把引用文件夹关闭，打开MainPage.xaml

69
00:04:00,155 --> 00:04:02,692
所以这次我打算采用一种稍微不同的布局方式

70
00:04:02,693 --> 00:04:06,521
我们会有一个网格布局

71
00:04:06,522 --> 00:04:11,521
它会提供最上面的一行

72
00:04:11,887 --> 00:04:13,465
里面包含了一个相对布局

73
00:04:13,466 --> 00:04:18,105
包含一个汉堡菜单按钮，后退按钮和一个..

74
00:04:18,106 --> 00:04:21,810
大概是一个自动建议列表

75
00:04:23,055 --> 00:04:26,552
然后再第二行，我们会放置一个分割布局

76
00:04:26,553 --> 00:04:28,946
开始干活吧！

77
00:04:30,041 --> 00:04:35,040
打码打码打码Grid.RowDefinitions.

78
00:04:37,838 --> 00:04:41,735
RowDefinition Height="Auto".

79
00:04:42,552 --> 00:04:45,058
我们已经做过这一步很多次了

80
00:04:45,059 --> 00:04:47,964
所以这一步应该不是那么难

81
00:04:49,101 --> 00:04:50,519
然后放置一个相对布局

82
00:04:50,520 --> 00:04:52,791
里面包含顶部的对象

83
00:04:54,202 --> 00:04:56,998
再下面放置一个分割布局

84
00:04:57,560 --> 00:05:00,134
里面包含其他的主体对象

85
00:05:00,482 --> 00:05:04,150
在相对布局里，我打算放置

86
00:05:04,151 --> 00:05:05,985
首先，是一个汉堡菜单按钮

87
00:05:05,986 --> 00:05:08,747
然后添加一个后退按钮

88
00:05:08,748 --> 00:05:12,651
然后是一个自动建议列表

89
00:05:15,022 --> 00:05:19,917
RelativePanel.AlignRightWithPanel = "True".

90
00:05:19,918 --> 00:05:23,191
添加一个名字

91
00:05:23,192 --> 00:05:27,345
给汉堡菜单按钮

92
00:05:27,630 --> 00:05:32,629
后退按钮应该设置为 RelativePanel.AlignLeftWith...

93
00:05:45,777 --> 00:05:50,314
抱歉！, 应该是RelativePanel.Rightof=“HamburgerButton”.

94
00:05:57,293 --> 00:06:02,292
汉堡菜单按钮应该是RelativePanelAlignLeftWithPanel.

95
00:06:03,321 --> 00:06:04,878
这应该是显而易见的

96
00:06:04,879 --> 00:06:06,962
但我还是要提一下

97
00:06:10,564 --> 00:06:12,077
我要在这里添加一个点击事件

98
00:06:12,078 --> 00:06:13,596
因为我知道我需要它

99
00:06:15,555 --> 00:06:17,244
论一个程序员对对齐的执着

100
00:06:18,062 --> 00:06:19,128
我还知道我需要放置一些

101
00:06:33,849 --> 00:06:38,848
比如说字体应该是Segoe MDL2 Assets

102
00:06:38,961 --> 00:06:43,892
设置Content属性......我看看我还能不能想起来

103
00:06:50,960 --> 00:06:55,945
"&xE700;"

104
00:07:00,805 --> 00:07:02,361
如果我没记错的话

105
00:07:02,362 --> 00:07:04,211
我会给我自己留下深刻的印象的（无敌是多么寂寞）

106
00:07:06,885 --> 00:07:09,678
这意味着我可能是忘记了

107
00:07:09,679 --> 00:07:12,622
大多数人应该不会记住这些隐秘的小东西

108
00:07:12,623 --> 00:07:14,137
这就是为什么我们会有cheat sheet.

109
00:07:14,138 --> 00:07:17,315
或者你也可以上网搜索一下

110
00:07:17,316 --> 00:07:19,677
如果你需要一个参考

111
00:07:19,940 --> 00:07:22,226
yeah ，没错，我又爱上我自己了

112
00:07:23,226 --> 00:07:24,970
魔性笑声ing

113
00:07:24,971 --> 00:07:26,463
这些都是小事！没错吧

114
00:07:26,464 --> 00:07:29,663
下一步需要给这个按钮命名

115
00:07:29,664 --> 00:07:34,510
把名字设置为BackButton.

116
00:07:36,545 --> 00:07:39,538
这很有必要，因为我需要把这个

117
00:07:39,539 --> 00:07:41,607
点击事件绑定到一个事件处理程序上

118
00:07:42,528 --> 00:07:47,527
再一次的，字体设置为Segoe MDL2 Assets.

119
00:07:50,026 --> 00:07:54,957
设置Content="&#xE"... 这次设置成其他的

120
00:08:01,124 --> 00:08:02,751
我想我需要做的是

121
00:08:02,752 --> 00:08:04,404
我要在放置一个Character Map

122
00:08:04,405 --> 00:08:08,921
在我们的任务栏上，我想这个就是我需要的

123
00:08:10,186 --> 00:08:14,825
这里有很多不同的后退箭头，我想它们有各自不同的用处

124
00:08:14,826 --> 00:08:18,264
但是我打算使用这一个，0A6

125
00:08:20,127 --> 00:08:24,525
这应该会有用. 0A6.

126
00:08:26,580 --> 00:08:28,616
然后就是自动建议列表

127
00:08:28,617 --> 00:08:30,014
这个就不需要太复杂的工作了

128
00:08:30,015 --> 00:08:31,571
即使这样还是需要给它起一个名字

129
00:08:31,572 --> 00:08:36,354
命名为SearchAutoSuggestBox.

130
00:08:40,679 --> 00:08:42,760
然后设置占位文本为

131
00:08:42,761 --> 00:08:45,298
"Search for sounds".

132
00:08:47,939 --> 00:08:49,437
宽度设置为200

133
00:08:49,438 --> 00:08:52,402
就像之前的练习做的那样

134
00:08:54,183 --> 00:08:59,182
设置QueryIcon属性

135
00:09:00,797 --> 00:09:04,561
然后还需要添加一个TextChanged 文字改变事件

136
00:09:04,562 --> 00:09:07,904
因为我们需要在这个基础上过滤列表

137
00:09:09,881 --> 00:09:13,772
还有一个查询提交事件

138
00:09:13,773 --> 00:09:16,550
去控制这个

139
00:09:20,192 --> 00:09:22,550
大概就是这样,现在先不管这些了

140
00:09:22,551 --> 00:09:24,421
待会再回来继续

141
00:09:24,422 --> 00:09:27,807
如果真的要让这个功能成功运行

142
00:09:30,651 --> 00:09:32,943
让我看看，这个相对布局

143
00:09:32,944 --> 00:09:34,831
这个分割视图还没开始写呢

144
00:09:34,832 --> 00:09:38,697
现在先运行调试看看效果如何

145
00:09:40,421 --> 00:09:42,511
看看有没有什么明显的错误

146
00:09:42,512 --> 00:09:44,713
毕竟已经写了挺多了

147
00:09:48,688 --> 00:09:52,100
这些看起来好像，我应该要调整一下高度

148
00:09:52,101 --> 00:09:53,892
和宽度的属性值

149
00:09:53,893 --> 00:09:55,720
还有改变一下字体

150
00:09:55,844 --> 00:09:58,115
设置高度和宽度都等于45

151
00:09:58,116 --> 00:10:01,245
就像之前的练习中做的按钮一样

152
00:10:02,393 --> 00:10:06,653
Height="45", Width="45"

153
00:10:07,193 --> 00:10:10,141
我喜欢这样，让我觉得很爽（容易满足的程序员 哈哈哈）

154
00:10:11,214 --> 00:10:16,213
然后是设置字号大小FontSize="20".

155
00:10:22,051 --> 00:10:25,325
现在应该就比较好了

156
00:10:25,326 --> 00:10:27,366
在这个相对布局里

157
00:10:34,264 --> 00:10:37,217
挺好的，还需要一些内边距

158
00:10:37,218 --> 00:10:40,347
不过这个稍后再来

159
00:10:41,485 --> 00:10:45,921
下一步，分割视图，先起个名~

160
00:10:45,922 --> 00:10:48,065
因为后面会有引用它的时候

161
00:10:48,066 --> 00:10:52,005
命名为MySplitView, 设置DisplayMode,

162
00:10:54,188 --> 00:10:56,576
为CompactOverlay,

163
00:10:56,577 --> 00:11:01,576
还有就是CompactPaneLength等于

164
00:11:03,728 --> 00:11:08,202
45, 就和按钮的宽度一样

165
00:11:08,203 --> 00:11:10,783
我喜欢这样！

166
00:11:10,784 --> 00:11:15,783
然后是OpenPaneLength, 我不清楚, 设置成150应该差不多

167
00:11:15,915 --> 00:11:18,282
不过还是设置为200把

168
00:11:18,283 --> 00:11:21,300
我想我记得它会变得比较大一点

169
00:11:21,301 --> 00:11:22,740
因为一些特殊原因

170
00:11:22,741 --> 00:11:26,062
这些我们已经练习过了

171
00:11:27,903 --> 00:11:29,950
很好，就是这样

172
00:11:29,951 --> 00:11:33,172
然后在这里面我还需要一个SplitView.Pane

173
00:11:35,293 --> 00:11:39,587
还有就是一个 SplitView.Content.

174
00:11:40,809 --> 00:11:43,496
在Pane里面, 还需要添加一个ListBox

175
00:11:43,497 --> 00:11:46,771
就像我们平常做的那样，实际上，对不起

176
00:11:46,772 --> 00:11:49,469
这一次我想做一点不一样的东西

177
00:11:49,470 --> 00:11:51,720
这一次我要使用列表视图

178
00:11:51,721 --> 00:11:55,250
我要绑定这些项目，并且只是用数据绑定

179
00:11:55,251 --> 00:11:58,429
绑定到这个之前创建的列表里

180
00:11:58,430 --> 00:12:00,359
在MainPage.xaml中.

181
00:12:00,360 --> 00:12:05,351
我想这节课我要使用这个

182
00:12:09,952 --> 00:12:13,565
无论如何，我知道我们希望它是可点击的

183
00:12:13,566 --> 00:12:17,217
我还知道我需要去

184
00:12:17,218 --> 00:12:20,268
控制这个项目单击事件

185
00:12:22,289 --> 00:12:25,680
或许应该给它起一个名字 

186
00:12:26,167 --> 00:12:31,166
所以 Name="MenuItemsListView".

187
00:12:34,945 --> 00:12:38,703
让我重新生成一次

188
00:12:52,171 --> 00:12:55,935
我还需要一个Template,以及一个Source.

189
00:12:55,936 --> 00:12:58,020
稍后再来写这个

190
00:12:59,051 --> 00:13:01,556
现在，在这里我想要添加的东西是

191
00:13:01,557 --> 00:13:03,337
在Content里面添加一个Grid

192
00:13:03,338 --> 00:13:05,759
因为我打算将它真的分成两行

193
00:13:05,760 --> 00:13:07,966
顶部一行会包括

194
00:13:07,967 --> 00:13:12,295
将会在主区域进行显示的东西

195
00:13:12,296 --> 00:13:15,934
在下方会是一个

196
00:13:15,935 --> 00:13:18,160
将会被显示的对象

197
00:13:18,161 --> 00:13:22,933
所以我需要定义一下行

198
00:13:25,170 --> 00:13:29,685
所以RowDefinitionHeight="Auto".

199
00:13:39,910 --> 00:13:44,410
所以我知道，在这里不要犯错

200
00:13:44,411 --> 00:13:46,042
让我们继续

201
00:13:46,043 --> 00:13:48,058
在顶部这一栏需要添加一个StackPanel

202
00:13:48,059 --> 00:13:51,781
然后我打算添加一个文本框

203
00:13:51,782 --> 00:13:54,607
说实话我都不知道我需要一个StackPanel

204
00:13:54,608 --> 00:13:56,164
实际上，不要它我也可以做到

205
00:13:56,165 --> 00:13:59,038
我可以不用它，所以还是把它删了吧！

206
00:14:00,602 --> 00:14:03,599
直接使用文本框

207
00:14:03,600 --> 00:14:08,599
设置名字为"CategoryTextBlock".

208
00:14:13,412 --> 00:14:15,811
设置文本Text="All Sounds".

209
00:14:15,812 --> 00:14:17,646
这个就会是默认文本了

210
00:14:17,647 --> 00:14:20,195
我打算把这个弄得比较像一个标题

211
00:14:20,196 --> 00:14:22,875
所以设置字号为FontSize="24".

212
00:14:26,946 --> 00:14:29,400
然后再下面的一行添加一个GridView

213
00:14:29,401 --> 00:14:32,274
再下面会包含其他全部的对象

214
00:14:32,275 --> 00:14:35,271
然后设置Grid.Row="1".

215
00:14:36,280 --> 00:14:40,732
命名为 Name="SoundGridView".

216
00:14:42,360 --> 00:14:46,274
这就是我们需要注意的

217
00:14:51,825 --> 00:14:56,333
设置SelectionMode="None".

218
00:14:56,334 --> 00:14:58,386
我想要实现的是有人单击这个音频

219
00:14:58,387 --> 00:15:01,842
然后播放音频，并不需要选择

220
00:15:01,843 --> 00:15:05,233
还需要设置IsItemClickEnabled等于true

221
00:15:05,234 --> 00:15:07,463
因为我确实需要它能点击

222
00:15:07,464 --> 00:15:12,011
这样对象单击事件可以被控制

223
00:15:16,317 --> 00:15:18,235
现在我知道我需要一个Item Source

224
00:15:18,236 --> 00:15:21,849
这些稍后再弄！

225
00:15:21,850 --> 00:15:26,278
（打代码~）GridView.ItemTemplate

226
00:15:26,279 --> 00:15:30,832
然后设置DataTemplate

227
00:15:30,833 --> 00:15:35,466
然后放一个图片在这里

228
00:15:39,393 --> 00:15:41,359
我大概猜到高度

229
00:15:41,360 --> 00:15:43,482
和宽度会有点怪

230
00:15:43,483 --> 00:15:45,423
因为当我给定了这些规格（讲故事ing）

231
00:15:45,424 --> 00:15:48,442
给了一个做这方面工作的人

232
00:15:48,443 --> 00:15:50,650
我只是给了一些大概的数字

233
00:15:50,651 --> 00:15:52,932
基于我创建的模型

234
00:15:57,163 --> 00:15:59,982
看一下我的笔记, 宽度应该是101

235
00:15:59,983 --> 00:16:01,998
在这里还需要设置好source

236
00:16:01,999 --> 00:16:03,001
不过我们等到后面

237
00:16:03,002 --> 00:16:05,230
当我们做数据绑定的时候

238
00:16:05,231 --> 00:16:07,336
在下一节课

239
00:16:08,783 --> 00:16:11,331
但是这里还有一个值得注意的小东西

240
00:16:11,332 --> 00:16:14,717
我想放到这个区域里

241
00:16:15,471 --> 00:16:16,974
也就是媒体元素MediaElement.

242
00:16:16,975 --> 00:16:18,787
媒体元素允许播放音频

243
00:16:18,788 --> 00:16:20,835
这将会是我们非常熟悉的

244
00:16:20,836 --> 00:16:22,947
从现在这个视频开始

245
00:16:22,948 --> 00:16:26,834
首先先给它命名为MyMediaElement.

246
00:16:27,193 --> 00:16:30,679
然后设置属性AutoPlay="True".

247
00:16:30,680 --> 00:16:35,679
这也就意味着，当我提供了一个资源

248
00:16:38,793 --> 00:16:42,273
比如Assets/Sounds/Cow之类的

249
00:16:42,274 --> 00:16:43,649
它就会自动播放

250
00:16:43,650 --> 00:16:45,687
我不会程序性的告诉你

251
00:16:45,688 --> 00:16:48,560
去开始或者结束播放，就是自动播放

252
00:16:50,285 --> 00:16:53,185
好，我想这就是这节课所要讲的东西了

253
00:16:53,186 --> 00:16:55,275
在这第一个视频里，我们提到了很多东西

254
00:16:55,276 --> 00:16:58,721
这就留下了很多东西去做

255
00:16:58,722 --> 00:17:00,896
我们很快会回来

256
00:17:00,897 --> 00:17:02,592
在后面的课程完成它

257
00:17:02,593 --> 00:17:04,982
所以现在这个app还尚未成型

258
00:17:04,983 --> 00:17:06,496
这就像是设定好了

259
00:17:06,497 --> 00:17:10,675
后面我们会回来补充很多东西

260
00:17:10,676 --> 00:17:13,594
下一节课见！再见

