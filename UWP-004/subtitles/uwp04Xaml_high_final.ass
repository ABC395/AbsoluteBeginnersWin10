[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
Original Script: 
Original Translation: 
Original Timing: 
Original Editing: 
Script Updated By: 
Update Details: 
ScriptType: v4.00+
PlayResX: 1920
PlayResY: 1080
Timer: 100.0000
Synch Point: 
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: D:/OneDrive/Public Folder/Win10 Translation/UWP-004/subtitles/uwp04Xaml_high.mp4
Video File: D:/OneDrive/Public Folder/Win10 Translation/UWP-004/subtitles/uwp04Xaml_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.375000
Active Line: 1
Video Position: 144

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Windows,Microsoft YaHei,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: Windows Top,Microsoft YaHei,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,8,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.78,Windows,,0,0,0,,什么是XAML\N翻译@晨雨零稀   校对@Westie陈老师
Dialogue: 0,0:00:04.78,0:00:08.52,Windows,,0,0,0,,感恩节快乐，我是爆伯\N介里是www.learnvisualstudio.net
Dialogue: 0,0:00:08.52,0:00:11.72,Windows,,0,0,0,,在这节课 我们要开始学习XAML语法
Dialogue: 0,0:00:12.10,0:00:17.75,Windows,,0,0,0,,讲真 要弄懂XAML的基础很简单 你看一眼就行了（尊的吗？）
Dialogue: 0,0:00:17.75,0:00:22.65,Windows,,0,0,0,,我意思是 我相信你们上一节课所看到的内容
Dialogue: 0,0:00:22.65,0:00:27.25,Windows,,0,0,0,,足够让你们搞清楚标签、
Dialogue: 0,0:00:27.25,0:00:30.65,Windows,,0,0,0,,属性和你在可视化设计器中所看到的 它们之间的关系 对啵
Dialogue: 0,0:00:30.65,0:00:33.65,Windows,,0,0,0,,那么 我要做的就是讲解一下
Dialogue: 0,0:00:33.65,0:00:37.85,Windows,,0,0,0,,那些一眼看上去不那么明显的功能和方法
Dialogue: 0,0:00:38.20,0:00:41.70,Windows,,0,0,0,,在这个简短的视频中 我们会分成几个部分来进行讲解
Dialogue: 0,0:00:41.70,0:00:45.12,Windows,,0,0,0,,合起来之后 你对XAML就会有一个彻彻底底的认识
Dialogue: 0,0:00:45.12,0:00:46.32,Windows,,0,0,0,,并能了解它是如何工作的
Dialogue: 0,0:00:46.32,0:00:50.72,Windows,,0,0,0,,在第一课 我们要讨论下XAML的用途和本质
Dialogue: 0,0:00:50.72,0:00:53.10,Windows,,0,0,0,,尤其是跟C#的对比
Dialogue: 0,0:00:53.10,0:00:54.97,Windows,,0,0,0,,然后接下来的几个课程
Dialogue: 0,0:00:54.97,0:00:57.47,Windows,,0,0,0,,我们会讨论XAML的特殊功能
Dialogue: 0,0:00:57.60,0:01:00.15,Windows,,0,0,0,,这门语言一些小而隐秘的功能
Dialogue: 0,0:01:00.15,0:01:04.30,Windows,,0,0,0,,再强调下  当你初次见识时候 可能真的很不明显
Dialogue: 0,0:01:04.30,0:01:08.27,Windows,,0,0,0,,因此 我的目标是在这几个课程结束后
Dialogue: 0,0:01:08.27,0:01:11.95,Windows,,0,0,0,,你能有足够的知识看懂我们一起写的XAML
Dialogue: 0,0:01:12.45,0:01:16.50,Windows,,0,0,0,,牢记这些理论 然后在我解释之前 你能很贴切地去猜测一下
Dialogue: 0,0:01:16.50,0:01:18.30,Windows,,0,0,0,,我们一起写的XAML是用来干什么的
Dialogue: 0,0:01:18.30,0:01:20.80,Windows,,0,0,0,,好了   首先让我们来谈谈  XAML是什么？
Dialogue: 0,0:01:21.17,0:01:24.24,Windows,,0,0,0,,在前面几节课中  我提到过
Dialogue: 0,0:01:24.24,0:01:27.68,Windows,,0,0,0,,XAML和HTML是如此的相似    这绝非偶然
Dialogue: 0,0:01:28.24,0:01:32.68,Windows,,0,0,0,,XAML实际上就是XML————可扩展标记语言
Dialogue: 0,0:01:33.06,0:01:35.31,Windows,,0,0,0,,我会简短地解释一下它们的关系
Dialogue: 0,0:01:35.31,0:01:36.95,Windows,,0,0,0,,但从更高级别上来看
Dialogue: 0,0:01:36.95,0:01:42.33,Windows,,0,0,0,,XML看起来跟HTML很像     它们源自同一个祖先
Dialogue: 0,0:01:42.73,0:01:47.60,Windows,,0,0,0,,不过 HTML特定于构建网页文档
Dialogue: 0,0:01:48.13,0:01:50.97,Windows,,0,0,0,,而XML本质上更具通用性
Dialogue: 0,0:01:50.97,0:01:56.06,Windows,,0,0,0,,我意思是  你可以将它用于任何目的
Dialogue: 0,0:01:56.31,0:02:01.02,Windows,,0,0,0,,你可以定义属性的名字和元素 来满足你的需求
Dialogue: 0,0:02:01.44,0:02:06.62,Windows,,0,0,0,,如今开发者们经常用XML来存储应用的设置
Dialogue: 0,0:02:06.62,0:02:12.44,Windows,,0,0,0,,或者当作一种手段用于两个毫不相关的系统交换数据
Dialogue: 0,0:02:13.48,0:02:18.24,Windows,,0,0,0,,使用XML    首先你要了解所谓的“纲要”schema
Dialogue: 0,0:02:18.24,0:02:22.75,Windows,,0,0,0,,它为元素定义合适的名字以及属性
Dialogue: 0,0:02:22.75,0:02:27.08,Windows,,0,0,0,,“纲要”就像一份双方同意的合同 大家都得同意
Dialogue: 0,0:02:27.08,0:02:30.80,Windows,,0,0,0,,无论是XML的生产者还是XML的使用者
Dialogue: 0,0:02:30.80,0:02:37.33,Windows,,0,0,0,,读取和写入XML都要遵循“合同”（也就是“纲要”）中的规定
Dialogue: 0,0:02:37.33,0:02:40.20,Windows,,0,0,0,,现在 他们都同意
Dialogue: 0,0:02:40.20,0:02:43.93,Windows,,0,0,0,,在同一份合同下遵循相同的规则来工作 沟通
Dialogue: 0,0:02:43.93,0:02:47.13,Windows,,0,0,0,,因此   “纲要”对XML来说是很重要的一部分
Dialogue: 0,0:02:47.13,0:02:49.86,Windows,,0,0,0,,并且你们要牢记    因为我们很快就会回到这个话题上
Dialogue: 0,0:02:50.51,0:02:55.57,Windows,,0,0,0,,XAML是一种XML的特殊用法
Dialogue: 0,0:02:55.93,0:02:59.37,Windows,,0,0,0,,很明显 至少在我们现在这种情况下 我们能看到
Dialogue: 0,0:02:59.37,0:03:05.20,Windows,,0,0,0,,XAML与定义我们应用的用户界面有关
Dialogue: 0,0:03:05.20,0:03:09.42,Windows,,0,0,0,,这时我们感觉它跟HTML很像    但实际上它们有很大的不同
Dialogue: 0,0:03:09.42,0:03:17.40,Windows,,0,0,0,,XAML实际上是用来创建类的实例 并且为它们的属性赋值
Dialogue: 0,0:03:17.40,0:03:22.28,Windows,,0,0,0,,比如说我们上节课创建的"hello world"小应用
Dialogue: 0,0:03:22.28,0:03:25.62,Windows,,0,0,0,,我可以在它上边进行扩展  只需要为它添加一点儿“设计”
Dialogue: 0,0:03:25.62,0:03:31.35,Windows,,0,0,0,,我添加一个按钮   注意 我是将属性都放到单独的一行\N现在我们能发现
Dialogue: 0,0:03:31.35,0:03:33.44,Windows,,0,0,0,,希望这样子定义会好看一些
Dialogue: 0,0:03:33.44,0:03:35.44,Windows,,0,0,0,,这里我需要更多一点空间
Dialogue: 0,0:03:35.44,0:03:38.08,Windows,,0,0,0,,我们要尽量少的依赖可视化设计器
Dialogue: 0,0:03:38.08,0:03:40.97,Windows,,0,0,0,,实际上我们完全可以摆脱它(碎碎念......)
Dialogue: 0,0:03:40.97,0:03:43.71,Windows,,0,0,0,,你看到这里我创建了一个红色按钮命名为“click me"
Dialogue: 0,0:03:43.71,0:03:47.60,Windows,,0,0,0,,同样地  有个MessageBlock会出现在下面
Dialogue: 0,0:03:47.64,0:03:50.55,Windows,,0,0,0,,所以它跟我们之前做的非常相似   我刚就从头做了一遍
Dialogue: 0,0:03:52.91,0:03:56.62,Windows,,0,0,0,,首先做什么好呢.....（译者凑废话技能爆表）
Dialogue: 0,0:03:56.91,0:04:02.31,Windows,,0,0,0,,让我们往前翻翻    看看后台代码\N...................
Dialogue: 0,0:04:02.31,0:04:10.24,Windows,,0,0,0,,我们设这个TextBlock的值等于"What is XAML"
Dialogue: 0,0:04:10.24,0:04:13.77,Windows,,0,0,0,,也就是这个课程的标题    只要你点击了这个按钮
Dialogue: 0,0:04:13.77,0:04:16.46,Windows,,0,0,0,,让我们快速地运行一下这个应用
Dialogue: 0,0:04:17.46,0:04:20.74,Windows,,0,0,0,,就 跟你们澄清一下 我并没有在瞎搞 (2333爆伯说的俚语）\N记一下：nothing up one's sleeve（敲黑板！） (对的，校对是英语老师)
Dialogue: 0,0:04:22.75,0:04:24.68,Windows,,0,0,0,,点击   成就达成 ☑️
Dialogue: 0,0:04:24.68,0:04:26.84,Windows,,0,0,0,,非常好  现在我想做的是
Dialogue: 0,0:04:26.84,0:04:29.53,Windows,,0,0,0,,展示XAML是如何工作的
Dialogue: 0,0:04:29.53,0:04:31.57,Windows,,0,0,0,,实际上 就是我注释掉的这个按钮控制的
Dialogue: 0,0:04:32.06,0:04:38.75,Windows,,0,0,0,,我现在用的这个  跟你们熟悉的HTML中的注释是一样的
Dialogue: 0,0:04:38.75,0:04:40.28,Windows,,0,0,0,,用一个开尖括号
Dialogue: 0,0:04:40.28,0:04:42.35,Windows,,0,0,0,,感叹号，横杠，横杠
Dialogue: 0,0:04:42.51,0:04:44.40,Windows,,0,0,0,,来开启一个区域的注释
Dialogue: 0,0:04:44.40,0:04:47.71,Windows,,0,0,0,,在注释区域的末尾  你只需要破折号、破折号
Dialogue: 0,0:04:47.71,0:04:49.35,Windows,,0,0,0,,以及像这样的闭尖括号
Dialogue: 0,0:04:49.35,0:04:55.57,Windows,,0,0,0,,然后你能看到 在Visual Studio代码编辑区 它默认变成绿色了
Dialogue: 0,0:04:56.33,0:04:58.66,Windows,,0,0,0,,好的  现在我们已经注释掉它了
Dialogue: 0,0:04:58.95,0:05:01.75,Windows,,0,0,0,,我现在要做的是回到这里
Dialogue: 0,0:05:01.80,0:05:03.60,Windows,,0,0,0,,实际上还有几件事
Dialogue: 0,0:05:03.60,0:05:05.86,Windows,,0,0,0,,这里我已经给了一个Name属性
Dialogue: 0,0:05:05.86,0:05:08.35,Windows,,0,0,0,,但是默认情况下  创建一个工程的时候
Dialogue: 0,0:05:08.35,0:05:10.02,Windows,,0,0,0,,这个Grid是没有Name属性的
Dialogue: 0,0:05:10.02,0:05:14.22,Windows,,0,0,0,,我给它起了个名字叫"LayoutGrid"   因为它恰当地描述了我们现在做的事
Dialogue: 0,0:05:14.22,0:05:17.37,Windows,,0,0,0,,那么现在我想做的另一件事是当页面加载出来时
Dialogue: 0,0:05:17.37,0:05:23.37,Windows,,0,0,0,,找到"Loaded"事件
Dialogue: 0,0:05:23.37,0:05:26.35,Windows,,0,0,0,,我将创建一个新的事件处理程序叫做"Page_Loaded"
Dialogue: 0,0:05:26.35,0:05:30.66,Windows,,0,0,0,,按下键盘上的F12键 打开它后面的代码
Dialogue: 0,0:05:30.66,0:05:32.86,Windows,,0,0,0,,现在我要写代码了（注意注意）
Dialogue: 0,0:05:32.86,0:05:36.46,Windows,,0,0,0,,它将会在页面加载到内存里时运行
Dialogue: 0,0:05:36.46,0:05:38.91,Windows,,0,0,0,,这里将要花费我一点儿时间
Dialogue: 0,0:05:38.91,0:05:43.82,Windows,,0,0,0,,希望你们能明白我在做的这些事是为了解释什么
Dialogue: 0,0:05:45.26,0:05:48.17,Windows,,0,0,0,,我只写点开头
Dialogue: 0,0:05:48.17,0:05:52.35,Windows,,0,0,0,,然后快进到这次“打字练习”的结尾
Dialogue: 0,0:05:53.51,0:05:55.37,Windows,,0,0,0,,我不建议你们也这么做
Dialogue: 0,0:05:59.66,0:06:02.15,Windows,,0,0,0,,好了   花了我大约两分钟时间把这些全打出来
Dialogue: 0,0:06:02.15,0:06:04.15,Windows,,0,0,0,,我不是世界上最慢的打字员
Dialogue: 0,0:06:04.15,0:06:06.35,Windows,,0,0,0,,但这还是很适合拿来练习的
Dialogue: 0,0:06:06.35,0:06:09.55,Windows,,0,0,0,,并且能告诉我们如何在写代码的道路上少走弯路
Dialogue: 0,0:06:09.55,0:06:14.40,Windows,,0,0,0,,但这里的要点是   如果我运行这个程序
Dialogue: 0,0:06:14.40,0:06:15.75,Windows,,0,0,0,,我来给你展示一下它会发生什么
Dialogue: 0,0:06:17.42,0:06:20.35,Windows,,0,0,0,,嘿  它创建了一个红色按钮
Dialogue: 0,0:06:20.35,0:06:24.15,Windows,,0,0,0,,几乎是一致的   实际上就是跟我们在XAML中定义的完全一致
Dialogue: 0,0:06:24.15,0:06:27.40,Windows,,0,0,0,,如果我们点击它，它给我们一样的结果
Dialogue: 0,0:06:27.40,0:06:29.40,Windows,,0,0,0,,所以我这里的关键是
Dialogue: 0,0:06:29.40,0:06:34.04,Windows,,0,0,0,,它花费了这里所有的C#代码
Dialogue: 0,0:06:34.04,0:06:38.71,Windows,,0,0,0,,做了我基本上一行代码就能搞定的事
Dialogue: 0,0:06:38.71,0:06:41.71,Windows,,0,0,0,,这里我分割成了几行
Dialogue: 0,0:06:41.71,0:06:47.75,Windows,,0,0,0,,但你也看到了C#版本要明显冗长很多
Dialogue: 0,0:06:47.75,0:06:54.57,Windows,,0,0,0,,其次  我们在XAML中定义的元素和属性
Dialogue: 0,0:06:54.57,0:07:02.08,Windows,,0,0,0,,实际上就是在Universal Windows Platform API中创建类
Dialogue: 0,0:07:02.08,0:07:09.28,Windows,,0,0,0,,定义、设置它们的属性、特性跟我们这里代码做的事是一样的
Dialogue: 0,0:07:09.86,0:07:11.24,Windows,,0,0,0,,顺便说一句    我差点忘了
Dialogue: 0,0:07:11.24,0:07:14.02,Windows,,0,0,0,,如果你想跟着做这个练习
Dialogue: 0,0:07:14.02,0:07:19.15,Windows,,0,0,0,,我会添加     我们开始之前就有了的代码
Dialogue: 0,0:07:19.15,0:07:22.06,Windows,,0,0,0,,也会添加我输入过之后的代码
Dialogue: 0,0:07:22.06,0:07:25.62,Windows,,0,0,0,,然后你就能获得这个名为“WhatIsXAML”的项目了
Dialogue: 0,0:07:27.04,0:07:29.44,Windows,,0,0,0,,{\3c&H0000FF&}！！！重要！！！要记住的点是
Dialogue: 0,0:07:29.44,0:07:33.02,Windows,,0,0,0,,XAML是一种简单的 创建类实例的方法
Dialogue: 0,0:07:33.02,0:07:39.66,Windows,,0,0,0,,并能使用简洁很多的语法来设置这些对象的属性
Dialogue: 0,0:07:39.66,0:07:44.93,Windows,,0,0,0,,花费了12行  13行C#代码
Dialogue: 0,0:07:44.93,0:07:46.77,Windows,,0,0,0,,却只需要1行XAML代码
Dialogue: 0,0:07:46.77,0:07:54.37,Windows,,0,0,0,,尽管我分割开了   但仍然比使用C#来创建我所要的对象要短
Dialogue: 0,0:07:54.53,0:07:57.13,Windows,,0,0,0,,除此之外
Dialogue: 0,0:07:57.13,0:08:05.02,Windows,,0,0,0,,我还能在可视化设计器的预览窗格中得到自动反馈
Dialogue: 0,0:08:05.02,0:08:09.46,Windows,,0,0,0,,所以如果我那样做   我就能及时看到我的更改带来的效果
Dialogue: 0,0:08:09.46,0:08:13.06,Windows,,0,0,0,,而在编写C#的过程中
Dialogue: 0,0:08:13.06,0:08:20.04,Windows,,0,0,0,,我每次都启动程序\N来看我提交的代码工作得如何了
Dialogue: 0,0:08:20.04,0:08:22.94,Windows,,0,0,0,,好咯   就这样吧   这就是本节课的重点
Dialogue: 0,0:08:22.94,0:08:27.54,Windows,,0,0,0,,有两点   一是XAML只是特定格式的XML
Dialogue: 0,0:08:27.54,0:08:29.94,Windows,,0,0,0,,它遵循所有XML的规则
Dialogue: 0,0:08:29.94,0:08:31.80,Windows,,0,0,0,,人们再定义一种“纲要”
Dialogue: 0,0:08:31.80,0:08:38.20,Windows,,0,0,0,,也就相当于一个条款合约   然后无论是XML的生产者还是使用者都去遵守它
Dialogue: 0,0:08:38.20,0:08:45.16,Windows,,0,0,0,,这样他们就能一起工作
Dialogue: 0,0:08:45.16,0:08:50.28,Windows,,0,0,0,,我们现在的这种情况   条款就是由Microsoft定义的XAML
Dialogue: 0,0:08:50.28,0:08:55.84,Windows,,0,0,0,,XML的生产者是你 我 还有Visual Studio
Dialogue: 0,0:08:55.84,0:08:58.04,Windows,,0,0,0,,然后   XML的使用者是
Dialogue: 0,0:08:58.18,0:09:04.20,Windows,,0,0,0,,将我们的代码变成Windows 10可执行文件的编译器
Dialogue: 0,0:09:04.20,0:09:06.00,Windows,,0,0,0,,好了这就是第一点
Dialogue: 0,0:09:06.00,0:09:11.52,Windows,,0,0,0,,本节课第二点是XAML是一种简单的创建类的实例\N并设置属性的方法
Dialogue: 0,0:09:11.52,0:09:15.40,Windows,,0,0,0,,当然你也可以用C#来完成 但要冗长得多
Dialogue: 0,0:09:15.40,0:09:23.66,Windows,,0,0,0,,你也无法享用在这两三个视频中已经熟悉了的设计工具
Dialogue: 0,0:09:23.66,0:09:27.66,Windows,,0,0,0,,好了 这就是我们创建的小例子
Dialogue: 0,0:09:27.66,0:09:32.32,Windows,,0,0,0,,还有其他一些有趣的XAML小特性    我想再详细讲一下
Dialogue: 0,0:09:32.32,0:09:36.06,Windows,,0,0,0,,在最近的几节课里 我会很快地就此展开   阿里嘎多～
Dialogue: 0,0:09:36.86,0:09:40.26,Windows,,0,0,0,,微软大法好～
