[Script Info]
;SrtEdit 6.3.2012.1001
;Copyright(C) 2005-2012 Yuan Weiguo

Title: Default Aegisub file
Original Script: 
Original Translation: 
Original Timing: 
Original Editing: 
Script Updated By: 
Update Details: 
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 640
PlayResY: 360
Timer: 100.0000
Synch Point: 
WrapStyle: 0
ScaledBorderAndShadow: yes

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:04.78,0:00:08.52,Default,,0,0,0,,大家好，我是来自www.learnvisualstudio.net的Bob Tabor
Dialogue: 0,0:00:08.52,0:00:11.72,Default,,0,0,0,,在这节课程中我们将要开始学习XAML语法
Dialogue: 0,0:00:12.10,0:00:17.75,Default,,0,0,0,,诚心说一句要弄懂XAML的基础你只需要看上一眼
Dialogue: 0,0:00:17.75,0:00:22.65,Default,,0,0,0,,我意思是我能相像你们上一节课所看到的
Dialogue: 0,0:00:22.65,0:00:27.25,Default,,0,0,0,,足够让你们搞清楚了标签、
Dialogue: 0,0:00:27.25,0:00:30.65,Default,,0,0,0,,属性和你在可视化设计器中扭看到的，它们之间的关系，对吧
Dialogue: 0,0:00:30.65,0:00:33.65,Default,,0,0,0,,那么我要完成的任务就是讲解一下
Dialogue: 0,0:00:33.65,0:00:37.85,Default,,0,0,0,,那些一眼看上去不那么明显的功能和方法
Dialogue: 0,0:00:38.20,0:00:41.70,Default,,0,0,0,,在这个简短的视频中我们会分成几个部分来进行讲解
Dialogue: 0,0:00:41.70,0:00:45.12,Default,,0,0,0,,合起来后对XAML会有一个自始至终的认识
Dialogue: 0,0:00:45.12,0:00:46.32,Default,,0,0,0,,并能了解它是如何工作的
Dialogue: 0,0:00:46.32,0:00:50.72,Default,,0,0,0,,在第一课，我们来讨论一下XAML的用途和本质。
Dialogue: 0,0:00:50.72,0:00:53.10,Default,,0,0,0,,尤其是要跟C#对比一下
Dialogue: 0,0:00:53.10,0:00:54.97,Default,,0,0,0,,然后接下来的几个课程
Dialogue: 0,0:00:54.97,0:00:57.47,Default,,0,0,0,,我们将会讨论XAML的特殊功能
Dialogue: 0,0:00:57.60,0:01:00.15,Default,,0,0,0,,这门语言一些小而隐秘的功能
Dialogue: 0,0:01:00.15,0:01:04.30,Default,,0,0,0,,再说一次，当你第一次看的时候可能真的不明显
Dialogue: 0,0:01:04.30,0:01:08.27,Default,,0,0,0,,因此，我的目标是在这几个课程结束时
Dialogue: 0,0:01:08.27,0:01:11.95,Default,,0,0,0,,你有足够的知识看清楚我们一起写的XAML
Dialogue: 0,0:01:12.45,0:01:16.50,Default,,0,0,0,,并且在这个系列的其他课程里可以很好的猜测它要做什么
Dialogue: 0,0:01:16.50,0:01:18.30,Default,,0,0,0,,在我进行解释之前
Dialogue: 0,0:01:18.30,0:01:20.80,Default,,0,0,0,,好了，首先让我们来谈谈XAML是什么
Dialogue: 0,0:01:21.17,0:01:24.24,Default,,0,0,0,,有前面几节课中我短暂的提到
Dialogue: 0,0:01:24.24,0:01:27.68,Default,,0,0,0,,XAML是如此的类似于HTML，并且这绝非偶然
Dialogue: 0,0:01:28.24,0:01:32.68,Default,,0,0,0,,XAML实际就是XML，可扩展标记语言
Dialogue: 0,0:01:33.06,0:01:35.31,Default,,0,0,0,,我只会简短的解释一下它们的关系
Dialogue: 0,0:01:35.31,0:01:36.95,Default,,0,0,0,,从更高级别上看
Dialogue: 0,0:01:36.95,0:01:42.33,Default,,0,0,0,,XML看起来跟HTML很像，它们共享同一个祖先
Dialogue: 0,0:01:42.73,0:01:47.60,Default,,0,0,0,,然而HTML特定于构建网页文档
Dialogue: 0,0:01:48.13,0:01:50.97,Default,,0,0,0,,XML本质上更具通用性
Dialogue: 0,0:01:50.97,0:01:56.06,Default,,0,0,0,,我意思是你可以将它用于任何目的
Dialogue: 0,0:01:56.31,0:02:01.02,Default,,0,0,0,,你可以定义属性的名字和元素来满足你的需求
Dialogue: 0,0:02:01.44,0:02:06.62,Default,,0,0,0,,现在，开发者们经常用XML来存储应用的设置
Dialogue: 0,0:02:06.62,0:02:12.44,Default,,0,0,0,,或者当作一种手段用于两个毫不相关的系统交换数据
Dialogue: 0,0:02:13.48,0:02:18.24,Default,,0,0,0,,使用XML，先要了解所谓的“模式”
Dialogue: 0,0:02:18.24,0:02:22.75,Default,,0,0,0,,它为元素定义合适的名字以及属性
Dialogue: 0,0:02:22.75,0:02:27.08,Default,,0,0,0,,“模式”就像一份双方同意的合同，所有人都同意
Dialogue: 0,0:02:27.08,0:02:30.80,Default,,0,0,0,,无论是XML的生产者还是XML的消费者
Dialogue: 0,0:02:30.80,0:02:37.33,Default,,0,0,0,,读取和写入XML都要遵循“合同”中的规定，我意思其实是指“模式”
Dialogue: 0,0:02:37.33,0:02:40.20,Default,,0,0,0,,现在，他们都同意
Dialogue: 0,0:02:40.20,0:02:43.93,Default,,0,0,0,,在同一份合同下遵循相同的规则来工作、互相沟通
Dialogue: 0,0:02:43.93,0:02:47.13,Default,,0,0,0,,因此，“模式”对XML来说是很重要的一部分
Dialogue: 0,0:02:47.13,0:02:49.86,Default,,0,0,0,,并且你们要记住它，因为我们很快就会回到这个话题上
Dialogue: 0,0:02:50.51,0:02:55.57,Default,,0,0,0,,XAML是XML的特殊用法
Dialogue: 0,0:02:55.93,0:02:59.37,Default,,0,0,0,,很明显的，我们能看到，至少在我们这里这种情况下
Dialogue: 0,0:02:59.37,0:03:05.20,Default,,0,0,0,,XAML与定义我们应用的用户界面有关
Dialogue: 0,0:03:05.20,0:03:09.42,Default,,0,0,0,,这时我们感觉它跟HTML很像，但实际它们有很大的不同
Dialogue: 0,0:03:09.42,0:03:17.40,Default,,0,0,0,,XAML实际是用来创建类的实例并且为它们的属性赋值
Dialogue: 0,0:03:17.40,0:03:22.28,Default,,0,0,0,,因此，比如说我们上节课创建的"hello world"小应用
Dialogue: 0,0:03:22.28,0:03:25.62,Default,,0,0,0,,我可以在它上边进行扩展，只需要为它添加一点儿“设计”
Dialogue: 0,0:03:25.62,0:03:31.35,Default,,0,0,0,,我添加一个按钮，注意我将属性都放到单独的一行。现在我们能看到
Dialogue: 0,0:03:31.35,0:03:33.44,Default,,0,0,0,,希望这样子定义会好看一些
Dialogue: 0,0:03:33.44,0:03:35.44,Default,,0,0,0,,这里我需要更多一点空间
Dialogue: 0,0:03:35.44,0:03:38.08,Default,,0,0,0,,我们要尽量少的依赖可视化设计器
Dialogue: 0,0:03:38.08,0:03:40.97,Default,,0,0,0,,实际上我们完全可以摆脱它
Dialogue: 0,0:03:40.97,0:03:43.71,Default,,0,0,0,,你看到这里我创建了一个红色按钮命名为“click me"
Dialogue: 0,0:03:43.71,0:03:47.60,Default,,0,0,0,,同样的有个MessageBlock会出现在下面
Dialogue: 0,0:03:47.64,0:03:50.55,Default,,0,0,0,,所以它跟我们之前做的非常相似，只是我从头做了一遍
Dialogue: 0,0:03:52.91,0:03:56.62,Default,,0,0,0,,首先做什么好叫呢
Dialogue: 0,0:03:56.91,0:04:02.31,Default,,0,0,0,,让我们往前，看看后面的代码
Dialogue: 0,0:04:02.31,0:04:10.24,Default,,0,0,0,,我们设这个TextBlock的值等于"What is XAML"
Dialogue: 0,0:04:10.24,0:04:13.77,Default,,0,0,0,,也就是这个课程的题目，只要你点击了这个按钮
Dialogue: 0,0:04:13.77,0:04:16.46,Default,,0,0,0,,让我们简单的运行一下这个应用
Dialogue: 0,0:04:17.46,0:04:19.95,Default,,0,0,0,,只是展示一下我袖子里边没有东西
Dialogue: 0,0:04:22.75,0:04:24.68,Default,,0,0,0,,点击，获得结果
Dialogue: 0,0:04:24.68,0:04:26.84,Default,,0,0,0,,非常好，现在我想做的
Dialogue: 0,0:04:26.84,0:04:29.53,Default,,0,0,0,,只是展示XAML是如何工作的
Dialogue: 0,0:04:29.53,0:04:31.57,Default,,0,0,0,,实际上就是我注释掉的这个按钮控制的
Dialogue: 0,0:04:32.06,0:04:38.75,Default,,0,0,0,,我现在用的这个，跟你们熟悉的HTML中的注释是一样的
Dialogue: 0,0:04:38.75,0:04:40.28,Default,,0,0,0,,用一个开尖括号
Dialogue: 0,0:04:40.28,0:04:42.35,Default,,0,0,0,,**标记，破折号，破折号
Dialogue: 0,0:04:42.51,0:04:44.40,Default,,0,0,0,,来开启一个区域的注释
Dialogue: 0,0:04:44.40,0:04:47.71,Default,,0,0,0,,在注释区域的末尾，你只需要破折号、破折号
Dialogue: 0,0:04:47.71,0:04:49.35,Default,,0,0,0,,以及像这样的闭尖括号
Dialogue: 0,0:04:49.35,0:04:55.57,Default,,0,0,0,,然后你能看到在Visual Studio代码编辑区它默认变成了绿色
Dialogue: 0,0:04:56.33,0:04:58.66,Default,,0,0,0,,好的，现在我们已经去掉了它
Dialogue: 0,0:04:58.95,0:05:01.75,Default,,0,0,0,,我将要做的实际是回到这里
Dialogue: 0,0:05:01.80,0:05:03.60,Default,,0,0,0,,实际上还有几件事
Dialogue: 0,0:05:03.60,0:05:05.86,Default,,0,0,0,,这里我已经给了一个name属性
Dialogue: 0,0:05:05.86,0:05:08.35,Default,,0,0,0,,但是默认情况下，创建一个工程的时候
Dialogue: 0,0:05:08.35,0:05:10.02,Default,,0,0,0,,这个grid是没有name属性的
Dialogue: 0,0:05:10.02,0:05:14.22,Default,,0,0,0,,我给它起了个名字叫"LayoutGrid"因为它恰当的描述了我们现在做的事
Dialogue: 0,0:05:14.22,0:05:17.37,Default,,0,0,0,,那么现在我想做的另一件事是当页面加载出来时
Dialogue: 0,0:05:17.37,0:05:23.37,Default,,0,0,0,,我要找到"loaded"事件
Dialogue: 0,0:05:23.37,0:05:26.35,Default,,0,0,0,,我将创建一个新的事件处理程序叫做"Page_Loaded"
Dialogue: 0,0:05:26.35,0:05:30.66,Default,,0,0,0,,按下键盘上的F12键打开它后面的代码
Dialogue: 0,0:05:30.66,0:05:32.86,Default,,0,0,0,,现在我要写代码了
Dialogue: 0,0:05:32.86,0:05:36.46,Default,,0,0,0,,它将会在页面加载加载到内存里时运行
Dialogue: 0,0:05:36.46,0:05:38.91,Default,,0,0,0,,这里将要花费我一点儿时间
Dialogue: 0,0:05:38.91,0:05:43.82,Default,,0,0,0,,希望在我解释的时候你们能明白为什么以及预测到它会发生什么
Dialogue: 0,0:05:45.26,0:05:48.17,Default,,0,0,0,,我只写点开头
Dialogue: 0,0:05:48.17,0:05:52.35,Default,,0,0,0,,然后快速到达这次“打字练习”的结尾
Dialogue: 0,0:05:53.51,0:05:55.37,Default,,0,0,0,,我不建议你们也这么做
Dialogue: 0,0:05:59.66,0:06:02.15,Default,,0,0,0,,好了，花了我大约两分钟把这些全打出来
Dialogue: 0,0:06:02.15,0:06:04.15,Default,,0,0,0,,我不是世界上最慢的打字员
Dialogue: 0,0:06:04.15,0:06:06.35,Default,,0,0,0,,但这还是很适合拿来练习的
Dialogue: 0,0:06:06.35,0:06:09.55,Default,,0,0,0,,并且能告诉我们如何在写代码的道路上减少错误
Dialogue: 0,0:06:09.55,0:06:14.40,Default,,0,0,0,,但这里的要点是，如果我运行这个程序
Dialogue: 0,0:06:14.40,0:06:15.75,Default,,0,0,0,,我来给你展示一下它会发生什么
Dialogue: 0,0:06:17.42,0:06:20.35,Default,,0,0,0,,嘿，它创建了一个红色按钮
Dialogue: 0,0:06:20.35,0:06:24.15,Default,,0,0,0,,几乎是一致的实际就是跟我们在XAML中定义的完全一致
Dialogue: 0,0:06:24.15,0:06:27.40,Default,,0,0,0,,如果我们点击它，它给我们一样的结果
Dialogue: 0,0:06:27.40,0:06:29.40,Default,,0,0,0,,所以我这里的关键是
Dialogue: 0,0:06:29.40,0:06:34.04,Default,,0,0,0,,它花费了这里所有的C#代码
Dialogue: 0,0:06:34.04,0:06:38.71,Default,,0,0,0,,做了我基本上一行代码就能搞定的事
Dialogue: 0,0:06:38.71,0:06:41.71,Default,,0,0,0,,这里我分割成了几行
Dialogue: 0,0:06:41.71,0:06:47.75,Default,,0,0,0,,但你也看到了C#版本要明显冗长很多
Dialogue: 0,0:06:47.75,0:06:54.57,Default,,0,0,0,,其次，我们在XAML中定义元素和属性
Dialogue: 0,0:06:54.57,0:07:02.08,Default,,0,0,0,,实际上就是在Universal Windows Platform API中创建类
Dialogue: 0,0:07:02.08,0:07:09.28,Default,,0,0,0,,定义、设置它们的属性、特性跟我们这里代码做的事是一样的
Dialogue: 0,0:07:09.86,0:07:11.24,Default,,0,0,0,,顺便说一句，差点忘了
Dialogue: 0,0:07:11.24,0:07:14.02,Default,,0,0,0,,如果你想跟着做这个练习
Dialogue: 0,0:07:14.02,0:07:19.15,Default,,0,0,0,,我会添加，我们开始之前就有了的代码
Dialogue: 0,0:07:19.15,0:07:22.06,Default,,0,0,0,,也会添加我输入过之后的代码
Dialogue: 0,0:07:22.06,0:07:25.62,Default,,0,0,0,,然后你就能获得这个名为“XAML是什么”的项目了
Dialogue: 0,0:07:27.04,0:07:29.44,Default,,0,0,0,,重要的要记住的一点是
Dialogue: 0,0:07:29.44,0:07:33.02,Default,,0,0,0,,XAML是一种简单的创建类的实例的方法
Dialogue: 0,0:07:33.02,0:07:39.66,Default,,0,0,0,,并能使用简洁很多的语法来设置这些对象的属性
Dialogue: 0,0:07:39.66,0:07:44.93,Default,,0,0,0,,花费了12行，13行C#代码
Dialogue: 0,0:07:44.93,0:07:46.77,Default,,0,0,0,,却只需要1行XAML代码
Dialogue: 0,0:07:46.77,0:07:54.37,Default,,0,0,0,,尽管我分割开了，但仍然要比使用C#来创建我所有的对象要短
Dialogue: 0,0:07:54.53,0:07:57.13,Default,,0,0,0,,此外，
Dialogue: 0,0:07:57.13,0:08:05.02,Default,,0,0,0,,我还能在可视化设计器的预览窗格中得到自动反馈
Dialogue: 0,0:08:05.02,0:08:09.46,Default,,0,0,0,,所以如果我那样子做，我就能及时看到我的更改带来的效果
Dialogue: 0,0:08:09.46,0:08:13.06,Default,,0,0,0,,所以，在编写C#的过程中
Dialogue: 0,0:08:13.06,0:08:20.04,Default,,0,0,0,,我就不用每次都启动程序来看我提交的代码工作得如何了
Dialogue: 0,0:08:20.04,0:08:22.94,Default,,0,0,0,,好了，就这样吧，这就是本节课的重点
Dialogue: 0,0:08:22.94,0:08:27.54,Default,,0,0,0,,有两点，一是XAML只是特定格式的XML
Dialogue: 0,0:08:27.54,0:08:29.94,Default,,0,0,0,,它遵循所有XML的规则
Dialogue: 0,0:08:29.94,0:08:31.80,Default,,0,0,0,,人们再定义一种“模式”
Dialogue: 0,0:08:31.80,0:08:38.20,Default,,0,0,0,,也就相当于一个条款合约，然后无论是XML的生产者还是消费者都去遵守它
Dialogue: 0,0:08:38.20,0:08:45.16,Default,,0,0,0,,这样在同一个页面上他们就能一起工作，并且互相了解得更多
Dialogue: 0,0:08:45.16,0:08:50.28,Default,,0,0,0,,我们现在这种情况，条款就是由Microsoft定义的XAML
Dialogue: 0,0:08:50.28,0:08:55.84,Default,,0,0,0,,XML的生产者是你们，我，还有Visual Studio
Dialogue: 0,0:08:55.84,0:08:58.04,Default,,0,0,0,,然后，XML的消费者
Dialogue: 0,0:08:58.18,0:09:04.20,Default,,0,0,0,,是将我们的代码变成windows 10可执行文件的编译器
Dialogue: 0,0:09:04.20,0:09:06.00,Default,,0,0,0,,好了这就是第一点
Dialogue: 0,0:09:06.00,0:09:11.52,Default,,0,0,0,,本节课第二点是XAML是一种简单的创建类的实例并设置属性的方法
Dialogue: 0,0:09:11.52,0:09:15.40,Default,,0,0,0,,当然你也可以用C#来完成，但要冗长得多
Dialogue: 0,0:09:15.40,0:09:23.66,Default,,0,0,0,,你也无法享用在这两三个视频中已经熟悉了的设计工具
Dialogue: 0,0:09:23.66,0:09:27.66,Default,,0,0,0,,好了，实际上我们创建的这个小例子
Dialogue: 0,0:09:27.66,0:09:32.32,Default,,0,0,0,,还有其他一些有趣的XAML小特性，但我想后面一点再说
Dialogue: 0,0:09:32.32,0:09:36.06,Default,,0,0,0,,最近的课我很快就会就此展开，谢谢！

