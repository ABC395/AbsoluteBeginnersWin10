[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1914
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: C:/Users/doubl/Desktop/uwp19Navigation_high.mp4
Video File: C:/Users/doubl/Desktop/uwp19Navigation_high.mp4
Video AR Mode: 4
Video AR Value: 1.772222
Video Zoom Percent: 0.375000
Scroll Position: 194
Active Line: 214
Video Position: 44647

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:04.22,0:00:07.92,Default,,0,0,0,,嗨，我是来自 www.learnvisualstudio.net 的 Bob Tabor。
Dialogue: 0,0:00:08.12,0:00:13.19,Default,,0,0,0,,到目前为止我们创建的所有 App 都只有一个页面——Mainpage.xmal。
Dialogue: 0,0:00:13.19,0:00:15.19,Default,,0,0,0,,对于简单的 App 来说这是可以接受的。
Dialogue: 0,0:00:15.19,0:00:22.17,Default,,0,0,0,,但有时候你需要更多的页面，这就是我们本节课要涉及的内容。
Dialogue: 0,0:00:22.17,0:00:27.24,Default,,0,0,0,,一般来说新页面往往包含了新的功能，
Dialogue: 0,0:00:27.24,0:00:29.14,Default,,0,0,0,,或者新的布局，或新的内容。
Dialogue: 0,0:00:29.14,0:00:37.58,Default,,0,0,0,,严格来说你可以在一个页面上实现复杂的布局和内容变换，但是，
Dialogue: 0,0:00:37.58,0:00:43.92,Default,,0,0,0,,增加新的页面会使得开发的过程更加的可控，也更加的简单。
Dialogue: 0,0:00:43.92,0:00:50.56,Default,,0,0,0,,这样会帮助我们在开发过程中更加轻松地完成任务。
Dialogue: 0,0:00:50.56,0:00:58.14,Default,,0,0,0,,App 页面之于 UWP App 等于网页之于网站。
Dialogue: 0,0:00:58.14,0:01:07.78,Default,,0,0,0,,如果你是网页开发者，你可以建立简单的页面，并页面间设置超链接来让用户进行导航。
Dialogue: 0,0:01:07.78,0:01:20.09,Default,,0,0,0,,终端用户会加载框架，加载浏览器，并导航到你的主页，用超链接在页面间导航，
Dialogue: 0,0:01:20.09,0:01:28.30,Default,,0,0,0,,有时他们也会使用浏览器工具栏上的 “前进”，“后退” 按钮进行导航。
Dialogue: 0,0:01:28.30,0:01:35.77,Default,,0,0,0,,在 UWP 里，你的页面存在于 Frame Object 里，
Dialogue: 0,0:01:35.77,0:01:40.55,Default,,0,0,0,,这就是我一直是用 “浏览器” 一词来强调的类似的概念。
Dialogue: 0,0:01:40.55,0:01:48.39,Default,,0,0,0,,可能你还没有意识到，但 Frame 对于应用来说是非常重要的。
Dialogue: 0,0:01:48.39,0:01:55.39,Default,,0,0,0,,当 App 启动的时候，会有一个最高级的 Application Object，
Dialogue: 0,0:01:55.39,0:01:58.20,Default,,0,0,0,,在里面有一个窗口，
Dialogue: 0,0:01:58.20,0:02:04.94,Default,,0,0,0,,在桌面版本的 UWP 里，它会显示顶部的一栏，
Dialogue: 0,0:02:04.94,0:02:10.98,Default,,0,0,0,,就是有 “最小化”，“最大化”，“关闭” 按钮，
Dialogue: 0,0:02:10.98,0:02:13.85,Default,,0,0,0,,以及应用名的那一栏。
Dialogue: 0,0:02:13.85,0:02:23.96,Default,,0,0,0,,在里面，是 Frame，用来放页面（Pages）。我打开了一个 Navigation Example，
Dialogue: 0,0:02:23.96,0:02:29.13,Default,,0,0,0,,我目前载入了 app.xmal.cs
Dialogue: 0,0:02:29.13,0:02:33.43,Default,,0,0,0,,看第 53 行，差不多这样……
Dialogue: 0,0:02:34.17,0:02:42.21,Default,,0,0,0,,当你使用这个模板的时候，很多准备工作已经预先做好了，
Dialogue: 0,0:02:42.21,0:02:47.61,Default,,0,0,0,,你可以看见这里我们得到了通往 Window 里面的 Frame 的参考，
Dialogue: 0,0:02:47.61,0:02:50.85,Default,,0,0,0,,这个 Frame 被称为 Root Frame，在 Root Frame 里面，
Dialogue: 0,0:02:50.85,0:02:57.82,Default,,0,0,0,,在 Root Frame 里面你可以导航至你应用中的任意一页，
Dialogue: 0,0:02:57.82,0:03:01.19,Default,,0,0,0,,我们现在要导航到 mainpage，所以我们给它一个 type，
Dialogue: 0,0:03:01.19,0:03:07.43,Default,,0,0,0,,这个 type 是它指向的数据类型，之后他会创建一个实例，
Dialogue: 0,0:03:07.43,0:03:10.74,Default,,0,0,0,,然后想起中导入必要的信息。
Dialogue: 0,0:03:10.74,0:03:19.68,Default,,0,0,0,,让我把这块删了……稍等一下……
Dialogue: 0,0:03:19.68,0:03:28.49,Default,,0,0,0,,等下我们会学到向这个最顶端的 root frame 导入页面，
Dialogue: 0,0:03:28.49,0:03:36.56,Default,,0,0,0,,但为了简单起见，我们先谈谈怎么向 mainpage.xmal 添加一个 frame。
Dialogue: 0,0:03:36.56,0:03:43.40,Default,,0,0,0,,这样我们就可以在 mainpage 的 frame 里导入，导出页面了。
Dialogue: 0,0:03:43.40,0:03:48.31,Default,,0,0,0,,请想象在 App 中，最底下是一个窗口（window），
Dialogue: 0,0:03:48.31,0:03:49.91,Default,,0,0,0,,接着是一个叫 root frame 的 frame，
Dialogue: 0,0:03:49.91,0:03:54.85,Default,,0,0,0,,接着载入一个叫 mainpage.xmal 的，上面有一个 frame，接着再载入：
Dialogue: 0,0:03:54.85,0:03:57.78,Default,,0,0,0,,page 1，2，3，4……
Dialogue: 0,0:03:57.78,0:04:10.06,Default,,0,0,0,,在这个状况里，我们把承装其他信息的任务也交给 mainpage，
Dialogue: 0,0:04:10.06,0:04:16.60,Default,,0,0,0,,理论说够了，我们来干活吧~
Dialogue: 0,0:04:16.60,0:04:21.04,Default,,0,0,0,,首先我们要添加新页面……添加三个吧……
Dialogue: 0,0:04:21.04,0:04:24.68,Default,,0,0,0,,去 “项目” 菜单，选择 “添加新项”，
Dialogue: 0,0:04:24.68,0:04:28.15,Default,,0,0,0,,记得选择 “空白页” 哦~
Dialogue: 0,0:04:28.95,0:04:32.68,Default,,0,0,0,,千万不要点错选 “XMAL 视图”，一定一定要是 “空白页” 哦~
Dialogue: 0,0:04:33.69,0:04:35.65,Default,,0,0,0,,我们把这个页面叫做 “page 1”，
Dialogue: 0,0:04:36.99,0:04:38.99,Default,,0,0,0,,这是 “page 2”，
Dialogue: 0,0:04:42.43,0:04:44.53,Default,,0,0,0,,这个叫 “page 3”，
Dialogue: 0,0:04:52.50,0:05:00.08,Default,,0,0,0,,等会儿我们回头来看，这些页面将会被导入到 mainpage frame 以及从中导出，
Dialogue: 0,0:05:00.08,0:05:01.88,Default,,0,0,0,,让我们打开 mainpage.xmal，
Dialogue: 0,0:05:02.71,0:05:16.93,Default,,0,0,0,,让我把 designer view 关掉，地方有点窄啊……我们只留下 XMAL view 就好啦，
Dialogue: 0,0:05:16.93,0:05:20.47,Default,,0,0,0,,在 mainpage.xmal 里我要做的第一件事是：
Dialogue: 0,0:05:20.47,0:05:22.20,Default,,0,0,0,,添加一个 stackpanel，
Dialogue: 0,0:05:22.20,0:05:25.87,Default,,0,0,0,,用于替换默认的 grid，
Dialogue: 0,0:05:25.87,0:05:30.61,Default,,0,0,0,,除此之外，我还要再添加一个 stackpanel，以及一个 frame，
Dialogue: 0,0:05:31.94,0:05:37.35,Default,,0,0,0,,这个 frme 的名字叫 MyFrame，
Dialogue: 0,0:05:38.18,0:05:45.42,Default,,0,0,0,,这个 Stackpanel 将被用作水平的按钮栏，
Dialogue: 0,0:05:45.42,0:05:50.16,Default,,0,0,0,,所以我把它的方向设为横向的，
Dialogue: 0,0:05:50.16,0:05:55.20,Default,,0,0,0,,接下来添加三个按钮，属性设置为：
Dialogue: 0,0:05:59.64,0:06:02.47,Default,,0,0,0,,0，0，20，0……
Dialogue: 0,0:06:03.54,0:06:08.31,Default,,0,0,0,,Ctrl+C，Ctrl+V……复制粘贴几次……
Dialogue: 0,0:06:08.31,0:06:14.12,Default,,0,0,0,,第一个按钮的名字叫 ：“Home”，
Dialogue: 0,0:06:16.55,0:06:24.43,Default,,0,0,0,,内容设置为 Home，添加一个点击事件，
Dialogue: 0,0:06:28.53,0:06:33.91,Default,,0,0,0,,第二个按钮叫 “Back” （返回），内容设置为 “返回”，
Dialogue: 0,0:06:33.91,0:06:38.91,Default,,0,0,0,,添加一个叫 BackButton_Click 的点击事件，
Dialogue: 0,0:06:38.91,0:06:52.56,Default,,0,0,0,,第三个按钮叫 “Forward”，内容是 “Forward”，点击事件叫 ForwardButton_Click，
Dialogue: 0,0:06:54.39,0:07:02.03,Default,,0,0,0,,我们希望当应用启动时，page 1 自动加载到 frame 里，
Dialogue: 0,0:07:02.03,0:07:07.97,Default,,0,0,0,,让我们进入到背后的代码里：mainpage.xmal.cs
Dialogue: 0,0:07:07.97,0:07:12.04,Default,,0,0,0,,我们要做的第一件事是在页面的 Constructer 里，
Dialogue: 0,0:07:12.04,0:07:18.75,Default,,0,0,0,,我们会链接 MyFrame，并调用它的 Navigate 方法，
Dialogue: 0,0:07:18.75,0:07:21.89,Default,,0,0,0,,正如我们在 app.xmal.cs 里所见，
Dialogue: 0,0:07:21.89,0:07:27.83,Default,,0,0,0,,我们现在要导航到 page 1 这个类型（type），
Dialogue: 0,0:07:31.20,0:07:36.94,Default,,0,0,0,,让我把 typeof 打对……搞定……
Dialogue: 0,0:07:38.87,0:07:44.48,Default,,0,0,0,,这应该就能载入 page 1 了，接下来我们来处理那三个按钮，
Dialogue: 0,0:07:44.48,0:07:50.08,Default,,0,0,0,,home 按钮挺简单的，每次点击它都回到 page 1 就行，
Dialogue: 0,0:07:50.08,0:07:55.62,Default,,0,0,0,,所以我把 constructor 里的东西复制粘贴一份到这里就好了，
Dialogue: 0,0:07:55.62,0:08:02.79,Default,,0,0,0,,但是 forward 和 back 按钮（前进/后退）需要涉及到 frame 的历史记录，
Dialogue: 0,0:08:02.79,0:08:08.10,Default,,0,0,0,,框架会记录用户导航过的页面的顺序，
Dialogue: 0,0:08:08.10,0:08:13.97,Default,,0,0,0,,并重播导航的请求，
Dialogue: 0,0:08:13.97,0:08:25.55,Default,,0,0,0,,如果可以前进和后退的话，我们就会再次执行该动作。
Dialogue: 0,0:08:25.55,0:08:27.85,Default,,0,0,0,,所以我们这么做，如果……
Dialogue: 0,0:08:33.19,0:08:37.16,Default,,0,0,0,,MyFrame.CanGoBack=True;
Dialogue: 0,0:08:38.23,0:08:44.97,Default,,0,0,0,,那么……执行 MyFrame.GoBack……看，多简单~
Dialogue: 0,0:08:45.67,0:08:52.51,Default,,0,0,0,,对 Forward 如法炮制，如果 MyFrame.CanGoForward=True;
Dialogue: 0,0:08:54.88,0:08:56.68,Default,,0,0,0,,那么 GoForward；
Dialogue: 0,0:09:03.00,0:09:10.09,Default,,0,0,0,,我想这样对于 mainpage 来说应该就可以了……让我，额……关了它……
Dialogue: 0,0:09:10.09,0:09:15.53,Default,,0,0,0,,接下来我们去 page1.xmal，关了 designer view……
Dialogue: 0,0:09:20.94,0:09:27.58,Default,,0,0,0,,先添加一个 stackpanel，接着是一个 textblock，
Dialogue: 0,0:09:27.58,0:09:32.48,Default,,0,0,0,,接着把字体调的大大的……这样看的清楚些。
Dialogue: 0,0:09:32.48,0:09:39.09,Default,,0,0,0,,内容设置为我在的这一页的名字——page1；
Dialogue: 0,0:09:41.33,0:09:43.23,Default,,0,0,0,,加一个超链接按钮……
Dialogue: 0,0:09:43.23,0:09:55.07,Default,,0,0,0,,我们可以使用任何可以包含事件的控件来告诉 frame 我们要进行怎样的导航，
Dialogue: 0,0:09:55.07,0:10:02.08,Default,,0,0,0,,我使用超链接按钮的原因是它可以用于导航，就像网页上一样，
Dialogue: 0,0:10:02.08,0:10:14.53,Default,,0,0,0,,随着学习的深入，你会了解到这个超链接按钮有一个独特的属性，和其他超链接不同，
Dialogue: 0,0:10:14.53,0:10:20.16,Default,,0,0,0,,他可以使用 navigateUI 属性，连接到一个网站里。
Dialogue: 0,0:10:20.16,0:10:26.50,Default,,0,0,0,,在 page1 里我会演示如何使用这个属性，
Dialogue: 0,0:10:26.50,0:10:32.98,Default,,0,0,0,,给它起个名字……
Dialogue: 0,0:10:36.98,0:10:40.92,Default,,0,0,0,,所以我们说，去到……额……
Dialogue: 0,0:10:44.52,0:10:46.46,Default,,0,0,0,,page 2，添加一个点击事件，
Dialogue: 0,0:10:50.96,0:10:58.50,Default,,0,0,0,,接下来我们添加另一个超链接按钮并链接到 microsoft.com（微软官网）。
Dialogue: 0,0:10:59.80,0:11:08.31,Default,,0,0,0,,NavigateUI 设置为 www.microsoft.com
Dialogue: 0,0:11:11.18,0:11:18.82,Default,,0,0,0,,让我把这个 文本框 和 超链接按钮 这两个控件复制粘贴到 page 2，
Dialogue: 0,0:11:21.89,0:11:31.24,Default,,0,0,0,,改一下属性，这个去 page2，这个去 page 3，
Dialogue: 0,0:11:34.04,0:11:37.94,Default,,0,0,0,,哦忘了添加一个 stackpanel，不怕，我们加上去……
Dialogue: 0,0:11:44.82,0:11:46.02,Default,,0,0,0,,最后，
Dialogue: 0,0:11:50.86,0:11:53.73,Default,,0,0,0,,去 page 3 的 xmal view，把 grid 干掉……
Dialogue: 0,0:11:54.36,0:11:58.40,Default,,0,0,0,,这回我们把超链接按钮删掉，我们不需要它了……
Dialogue: 0,0:11:59.36,0:12:06.07,Default,,0,0,0,,其实等一下我还要添加一点东西，但现在就先到此为止吧……
Dialogue: 0,0:12:07.54,0:12:10.78,Default,,0,0,0,,让我们运行这个 App 看看效果，
Dialogue: 0,0:12:10.78,0:12:13.18,Default,,0,0,0,,希望能行……如果我没忘记什么的话……
Dialogue: 0,0:12:15.68,0:12:17.52,Default,,0,0,0,,哎呀……有东西崩了……
Dialogue: 0,0:12:18.52,0:12:19.82,Default,,0,0,0,,忘了啥呢……
Dialogue: 0,0:12:22.75,0:12:31.13,Default,,0,0,0,,我们去一趟 page2，改一下，这样应该可以了……
Dialogue: 0,0:12:31.13,0:12:45.24,Default,,0,0,0,,Frame.Navigate(typeof(Page3));
Dialogue: 0,0:12:45.88,0:12:52.78,Default,,0,0,0,,你可能会疑惑：为什么 frame 的名字不是我之前所参照的 MyFrame 呢？
Dialogue: 0,0:12:54.65,0:12:59.46,Default,,0,0,0,,当每次我们调用 navigate 方法，向其中导入我们需要实例化的类型时
Dialogue: 0,0:12:59.56,0:13:12.44,Default,,0,0,0,,它、该方法会像工厂一样把那个实例的各种属性设置好，
Dialogue: 0,0:13:12.44,0:13:20.21,Default,,0,0,0,,它会将这个页面类型的 Frame 属性设置为它的 父Frame，
Dialogue: 0,0:13:20.21,0:13:25.38,Default,,0,0,0,,这样我们就知道我们现在所处的 Frame 了，
Dialogue: 0,0:13:26.35,0:13:32.16,Default,,0,0,0,,我们看看在 page1 里面有没有设置……
Dialogue: 0,0:13:32.79,0:13:33.89,Default,,0,0,0,,让我们复制粘贴一下……然后试运行……
Dialogue: 0,0:13:49.57,0:13:54.81,Default,,0,0,0,,把这个窗口拽下来……ok……
Dialogue: 0,0:13:55.38,0:14:04.56,Default,,0,0,0,,第一件事是点击通往 microsoft.com 的超链接……
Dialogue: 0,0:14:04.56,0:14:08.19,Default,,0,0,0,,它打开了 Edge 浏览器并导航到 microsoft.com，
Dialogue: 0,0:14:08.19,0:14:10.43,Default,,0,0,0,,挺酷的，这就是 navigateUI 做的事情……
Dialogue: 0,0:14:11.03,0:14:14.57,Default,,0,0,0,,然后点击去向 page2……然后我们就到了 page 2，
Dialogue: 0,0:14:14.57,0:14:16.47,Default,,0,0,0,,接下来是去 page 3……我们就到了 page 3……
Dialogue: 0,0:14:16.80,0:14:21.07,Default,,0,0,0,,接下来我们对着 forward，back，home 三个按钮点一点~
Dialogue: 0,0:14:21.07,0:14:23.17,Default,,0,0,0,,现在你可以看一看效果。
Dialogue: 0,0:14:24.11,0:14:26.68,Default,,0,0,0,,这就是最简单的导航的例子啦~
Dialogue: 0,0:14:26.81,0:14:31.48,Default,,0,0,0,,让我们给他加一点记录的功能，在 page 2 里，我们加入：
Dialogue: 0,0:14:31.48,0:14:42.56,Default,,0,0,0,,加入一个 textbox，把它叫做 ValueTextBox，
Dialogue: 0,0:14:43.16,0:14:52.40,Default,,0,0,0,,把它的宽度设为 200 像素，
Dialogue: 0,0:14:52.70,0:15:00.01,Default,,0,0,0,,当然在你的 App 里你可以使用我们教过的 RelativePanel，但这只是个 demo，所以我们偷懒了……
Dialogue: 0,0:15:00.01,0:15:04.28,Default,,0,0,0,,在 Page 3 里我们也添加一个一样的 TextBox 好了~
Dialogue: 0,0:15:06.08,0:15:14.69,Default,,0,0,0,,现在我要做的是把用户在 TextBox 里输入的内容从 page 2 传递到 page 3 里，
Dialogue: 0,0:15:15.43,0:15:19.30,Default,,0,0,0,,这应该怎么做呢？
Dialogue: 0,0:15:19.70,0:15:24.60,Default,,0,0,0,,这其实挺简单的。我们看看 page2.xmal.cs，
Dialogue: 0,0:15:24.60,0:15:37.35,Default,,0,0,0,,它里面有一个重载方法用于把我们需要的数据在另一个页面里重新调用，
Dialogue: 0,0:15:37.35,0:15:41.62,Default,,0,0,0,,在这里我们用 value.textbox.text，
Dialogue: 0,0:15:41.62,0:15:43.12,Default,,0,0,0,,把它传递到另一边，
Dialogue: 0,0:15:46.69,0:15:52.93,Default,,0,0,0,,但在另一侧把它调出来有一点点小麻烦，我们去page3.xmal。cs 看看，
Dialogue: 0,0:15:55.47,0:16:06.34,Default,,0,0,0,,我们需要用到一个叫 OnNavigatedTo 的方法，
Dialogue: 0,0:16:06.34,0:16:15.55,Default,,0,0,0,,这个方法每次导航到这一页的时候就会被激发，
Dialogue: 0,0:16:15.72,0:16:22.79,Default,,0,0,0,,在这里我们就可以通过 NavigationEventArgs 调取那个值了，
Dialogue: 0,0:16:23.29,0:16:40.21,Default,,0,0,0,,var value = (string)e.Parameter; （把进来的东西变成一个字符串类型）
Dialogue: 0,0:16:40.78,0:16:48.59,Default,,0,0,0,,valueTextBox.Text = value; 这应该就可以了，
Dialogue: 0,0:16:50.09,0:16:51.66,Default,,0,0,0,,再次运行该应用，
Dialogue: 0,0:16:54.46,0:17:02.27,Default,,0,0,0,,我们去 page2，打进去一段废话，然后去 page 3，然后就能看见同样的一段废话。Yeah！
Dialogue: 0,0:17:02.93,0:17:04.30,Default,,0,0,0,,看看后退的时候会怎么样呢？
Dialogue: 0,0:17:06.04,0:17:08.91,Default,,0,0,0,,等一下……我们的数据呢？跑哪去了？前进一下……
Dialogue: 0,0:17:09.74,0:17:10.74,Default,,0,0,0,,咦怎么还在那……
Dialogue: 0,0:17:11.34,0:17:14.28,Default,,0,0,0,,但第二页里的数据又没了，发生啥事？( •̀ ω •́ )
Dialogue: 0,0:17:14.71,0:17:20.18,Default,,0,0,0,,还记得我说的吗，当你导航回到 Frame 的历史里的时候，
Dialogue: 0,0:17:20.18,0:17:22.09,Default,,0,0,0,,它将重播
Dialogue: 0,0:17:22.25,0:17:25.26,Default,,0,0,0,,导航的事件，在这里，
Dialogue: 0,0:17:26.69,0:17:31.40,Default,,0,0,0,,从 page 2 到 page 3 的导航里包含了那些文本，
Dialogue: 0,0:17:31.40,0:17:39.50,Default,,0,0,0,,所以它们还在，
Dialogue: 0,0:17:41.31,0:17:47.14,Default,,0,0,0,,但是当我们返回的时候，还记得从 page 1到 page 2 的过程中并没有任何数据的传递吗？
Dialogue: 0,0:17:47.14,0:17:50.95,Default,,0,0,0,,当重播这个事件的时候，在 page 2 里自然就是空空如也啦~
Dialogue: 0,0:17:50.95,0:17:56.75,Default,,0,0,0,,如果我们要保持页面间的状态应该怎么办呢？
Dialogue: 0,0:17:56.75,0:18:07.77,Default,,0,0,0,,其实挺简单的，虽然有人对这么做颇有微词，
Dialogue: 0,0:18:08.73,0:18:12.14,Default,,0,0,0,,他们很可能是对的，但为了简单起见我们就这么做吧
Dialogue: 0,0:18:12.60,0:18:17.91,Default,,0,0,0,,如果你不用它来做一些奇葩的事情的话，应该是没问题的。
Dialogue: 0,0:18:17.91,0:18:23.78,Default,,0,0,0,,但请记住，我们还有更优雅的方法来解决它，所以如果你想到了，不放那样做。
Dialogue: 0,0:18:24.05,0:18:32.59,Default,,0,0,0,,还记得我们刚刚说过的 App 的结构吗？application，window，frame，mainpage。
Dialogue: 0,0:18:34.93,0:18:40.40,Default,,0,0,0,,我们可以把这个 App Class，这个 App 的实例，
Dialogue: 0,0:18:40.40,0:18:46.10,Default,,0,0,0,,当作一个很容易接触到的全局变量，
Dialogue: 0,0:18:46.10,0:18:48.84,Default,,0,0,0,,所以在这个 Class 的定义里，
Dialogue: 0,0:18:51.34,0:18:56.71,Default,,0,0,0,,粘贴了这样一行代码，internal static string SomeImportantValue;
Dialogue: 0,0:18:56.71,0:19:07.66,Default,,0,0,0,,我把它叫做 SomeImportantValue，并把它设为静态的，
Dialogue: 0,0:19:07.66,0:19:11.50,Default,,0,0,0,,而且是一个 string 类型的，而且是仅用于 App 内部的。
Dialogue: 0,0:19:11.50,0:19:16.93,Default,,0,0,0,,所以 App 内部可以访问这个变量，然而 App 外部则不可以。
Dialogue: 0,0:19:17.84,0:19:23.51,Default,,0,0,0,,所以我们在 page2.xmal.cs 里，
Dialogue: 0,0:19:23.64,0:19:33.18,Default,,0,0,0,,设置 App.SomeImportantValue = ValueTextBox.Text;
Dialogue: 0,0:19:33.72,0:19:38.96,Default,,0,0,0,,其实现在我们并不需要将这个值传到 page 4 里，
Dialogue: 0,0:19:38.96,0:19:44.03,Default,,0,0,0,,所以现在我先把这一行代码闲置，
Dialogue: 0,0:19:44.36,0:19:52.50,Default,,0,0,0,,现在它被存储在内存中了，让我们回到 page3，
Dialogue: 0,0:19:55.47,0:19:58.01,Default,,0,0,0,,重写，并把它放到 page2 里，
Dialogue: 0,0:19:59.31,0:20:03.05,Default,,0,0,0,,在 page2 里我们要重写 onnavigatedto，
Dialogue: 0,0:20:03.05,0:20:08.42,Default,,0,0,0,,如果 someimportantvalue 不是一个空串，
Dialogue: 0,0:20:25.70,0:20:38.65,Default,,0,0,0,,那么我们把，这个 string 的内容，
Dialogue: 0,0:20:38.65,0:20:48.29,Default,,0,0,0,,放回 page2 里的 textbox，
Dialogue: 0,0:20:53.66,0:20:53.70,Default,,0,0,0,,现在我们运行一下，
Dialogue: 0,0:20:53.70,0:20:59.14,Default,,0,0,0,,到 page2 里打进去一些东西，到 page3，再回到 page2，
Dialogue: 0,0:20:59.60,0:21:04.54,Default,,0,0,0,,现在我们能看见那段字符串了，酷~
Dialogue: 0,0:21:05.31,0:21:09.65,Default,,0,0,0,,下一步我要展示如何导航，
Dialogue: 0,0:21:10.41,0:21:17.69,Default,,0,0,0,,到另一个 frame level 的 page 里，这应当不是很难，
Dialogue: 0,0:21:18.26,0:21:25.13,Default,,0,0,0,,我们去到 mainpage.xmal，我还要添加一个按钮，
Dialogue: 0,0:21:25.76,0:21:29.17,Default,,0,0,0,,我把它叫 navigate，
Dialogue: 0,0:21:31.14,0:21:38.01,Default,,0,0,0,,并把内容设置为 navigate root frame，
Dialogue: 0,0:21:38.01,0:21:45.95,Default,,0,0,0,,添加一个点击事件，
Dialogue: 0,0:21:46.72,0:21:57.93,Default,,0,0,0,,还记得我们之前在这里设置了一个 frame property 吗？
Dialogue: 0,0:21:57.93,0:22:05.50,Default,,0,0,0,,所以我们把这个实例的 .frame.navigate,
Dialogue: 0,0:22:06.80,0:22:12.24,Default,,0,0,0,,typeof(page2);
Dialogue: 0,0:22:14.14,0:22:20.08,Default,,0,0,0,,运行程序，
Dialogue: 0,0:22:20.08,0:22:33.63,Default,,0,0,0,,这次当我们导航到 page2 的时候，我们失去了最外层的 stackpanel，以及导航按钮，
Dialogue: 0,0:22:33.63,0:22:43.04,Default,,0,0,0,,我们需要知道我们怎样才能把他们弄回来，但这在使用汉堡导航的 App 里不是那么重要。
Dialogue: 0,0:22:43.04,0:22:46.41,Default,,0,0,0,,所以我们来把他们找回来吧~吼吼吼~
Dialogue: 0,0:22:47.18,0:22:56.25,Default,,0,0,0,,最后一件我想要讲的事是当我们在移动设备上运行的时候会发生什么呢？
Dialogue: 0,0:22:57.19,0:23:04.43,Default,,0,0,0,,因为手机拥有一些其他设备不具有的特性，
Dialogue: 0,0:23:06.40,0:23:14.71,Default,,0,0,0,,你可以看见手机上有这个返回键，现在它在虚拟机屏幕内了。
Dialogue: 0,0:23:19.71,0:23:25.58,Default,,0,0,0,,所以我们到 page2 里打进去一些垃圾，接下来到 page3，
Dialogue: 0,0:23:25.58,0:23:27.82,Default,,0,0,0,,接下来返回，
Dialogue: 0,0:23:27.82,0:23:38.76,Default,,0,0,0,,接着前进。现在当我们按这个返回键的时候，我们一般是想要回到 page2，接着回到 page1，但是，
Dialogue: 0,0:23:39.06,0:23:48.71,Default,,0,0,0,,但是实际上当我们点击的时候，它完全退出了 app 并回到主屏幕。
Dialogue: 0,0:23:49.54,0:23:53.84,Default,,0,0,0,,如何解决这个问题呢？额，这需要我们继续不断地学习。
Dialogue: 0,0:23:53.84,0:24:02.15,Default,,0,0,0,,当我们重新谈起这个话题的时候，我会谈谈不同设备类型的特有 API，
Dialogue: 0,0:24:02.15,0:24:09.36,Default,,0,0,0,,这涉及到 Extension SDK（第三节课提起过哦~）
Dialogue: 0,0:24:09.36,0:24:14.97,Default,,0,0,0,,SDK 可以帮助你尽可能的利用那个设备族的特性，
Dialogue: 0,0:24:14.97,0:24:23.87,Default,,0,0,0,,比如手机有返回键，那我们又应该怎么处理呢？
Dialogue: 0,0:24:23.87,0:24:39.79,Default,,0,0,0,,如何让我们点击返回键的时候，不会退出应用，而是实现导航呢？
Dialogue: 0,0:24:39.79,0:24:44.86,Default,,0,0,0,,如何更好地利用物理返回键呢？
Dialogue: 0,0:24:44.86,0:24:46.06,Default,,0,0,0,,这些我们以后再来详谈。
Dialogue: 0,0:24:46.06,0:24:49.73,Default,,0,0,0,,我们下节课再见，谢谢。
