1
00:00:04,394 --> 00:00:08,213
<v ->Hi, I'm Bob Tabor with www.learnvisualstudio.net.</v>

2
00:00:08,214 --> 00:00:10,094
Up until now we've only created apps

3
00:00:10,095 --> 00:00:13,356
with a single page, the MainPage.XMAL,

4
00:00:13,357 --> 00:00:15,724
and while that's fine for simple apps,

5
00:00:15,725 --> 00:00:17,333
you might have a use case where

6
00:00:17,334 --> 00:00:20,025
you need to add additional pages,

7
00:00:20,026 --> 00:00:22,614
and so we'll talk about that in this lesson.

8
00:00:22,615 --> 00:00:25,354
So, typically, you'd want to load a new page into your app

9
00:00:25,355 --> 00:00:27,351
whenever you need new functionality,

10
00:00:27,352 --> 00:00:29,093
or new layout, or new content,

11
00:00:29,094 --> 00:00:31,717
so it's possible that you could create

12
00:00:31,718 --> 00:00:35,229
a complex app and change out the layout

13
00:00:35,230 --> 00:00:37,399
and the functionality all in a single page,

14
00:00:37,401 --> 00:00:39,518
but by adding additional pages

15
00:00:39,519 --> 00:00:41,922
it allows you to decompose functionality

16
00:00:41,923 --> 00:00:44,116
into smaller, more manageable units,

17
00:00:44,117 --> 00:00:46,984
and so this will reduce the complexity

18
00:00:46,985 --> 00:00:50,815
of the application's development and its maintenance.

19
00:00:50,816 --> 00:00:54,623
So pages in the Universal Windows Platform

20
00:00:54,624 --> 00:00:58,327
are roughly equivalent to web pages in web development.

21
00:00:58,328 --> 00:01:01,519
So as a web developer you might create several webpages

22
00:01:01,520 --> 00:01:03,749
and create hyperlinks between the pages

23
00:01:03,750 --> 00:01:05,908
so that users can navigate

24
00:01:05,909 --> 00:01:07,986
in between pages in the website,

25
00:01:07,987 --> 00:01:11,759
so then the end user would load up their frame,

26
00:01:11,760 --> 00:01:15,823
their web browser, and would navigate to your home page

27
00:01:15,824 --> 00:01:19,886
and then navigate to each of the pages using the hyperlinks,

28
00:01:19,887 --> 00:01:22,150
or they might navigate then, at some point,

29
00:01:22,151 --> 00:01:24,786
using the back and the forward buttons

30
00:01:24,787 --> 00:01:28,652
on the toolbar of the frame, their web browser.

31
00:01:28,653 --> 00:01:32,344
So in Universal Windows Platform your pages

32
00:01:32,345 --> 00:01:35,583
are hosted in Frame objects,

33
00:01:35,584 --> 00:01:37,150
that's why I keep using that word

34
00:01:37,151 --> 00:01:40,691
instead of the web browser, just to enforce this idea,

35
00:01:40,692 --> 00:01:42,793
so, in fact, you might not even realize this,

36
00:01:42,794 --> 00:01:47,793
but the Frame is critical to the application itself,

37
00:01:48,123 --> 00:01:50,223
so at the very highest level,

38
00:01:50,224 --> 00:01:51,756
as your application starts up,

39
00:01:51,757 --> 00:01:55,192
there's an application object

40
00:01:55,193 --> 00:01:58,060
and then there is a window inside of that,

41
00:01:58,061 --> 00:02:00,882
so that will give you all of the Chrome

42
00:02:02,283 --> 00:02:04,887
in a Window's Desktop version

43
00:02:04,888 --> 00:02:08,950
the X, the minimize, and the maximize buttons

44
00:02:08,951 --> 00:02:10,587
over here in the right-hand corner,

45
00:02:10,588 --> 00:02:14,447
and the title, and things of that nature

46
00:02:14,448 --> 00:02:16,026
along that very top bar.

47
00:02:16,027 --> 00:02:18,081
Inside of that sits that Frame,

48
00:02:18,082 --> 00:02:19,324
which will host pages,

49
00:02:19,325 --> 00:02:22,673
and so as you can see in this new example that I've created,

50
00:02:22,674 --> 00:02:25,221
NavigationExample, I've created it,

51
00:02:25,222 --> 00:02:27,451
and I've loaded up App.xaml.cs.

52
00:02:27,452 --> 00:02:29,088
That's all I've done to it so far.

53
00:02:29,089 --> 00:02:31,282
If you take a look down in line number 53,

54
00:02:31,283 --> 00:02:33,906
see where this all kind of gets set up.

55
00:02:35,294 --> 00:02:38,822
So a lot of hard work is done for you automatically

56
00:02:38,823 --> 00:02:42,549
by using this blank template,

57
00:02:42,550 --> 00:02:44,952
and so you can see here where we get a reference

58
00:02:44,953 --> 00:02:47,727
to the Frame inside of the window,

59
00:02:47,728 --> 00:02:49,353
and they call it rootFrame,

60
00:02:49,354 --> 00:02:50,990
and then in the rootFrame,

61
00:02:50,991 --> 00:02:55,830
you can navigate to a specific page

62
00:02:55,831 --> 00:02:57,047
in your application.

63
00:02:57,048 --> 00:02:59,717
In this case, we're navigating to MainPage,

64
00:02:59,718 --> 00:03:02,956
so we give it a type of a data type

65
00:03:02,957 --> 00:03:05,383
that we want it to navigate to,

66
00:03:05,384 --> 00:03:07,426
and then it creates the instance of that type,

67
00:03:07,427 --> 00:03:09,621
and it will pass in parameters as arguments

68
00:03:09,622 --> 00:03:11,548
and things of that nature, alright?

69
00:03:11,549 --> 00:03:13,196
So while we're here,

70
00:03:13,197 --> 00:03:17,473
I'm actually going to delete this diagnostic,

71
00:03:17,920 --> 00:03:19,022
so get rid of that,

72
00:03:19,023 --> 00:03:21,785
and at some point later on

73
00:03:21,786 --> 00:03:23,689
we're going to learn about

74
00:03:23,690 --> 00:03:27,021
loading new pages into this topmost Frame,

75
00:03:27,022 --> 00:03:28,252
what's called the rootFrame,

76
00:03:28,253 --> 00:03:29,552
but for getting started

77
00:03:29,553 --> 00:03:32,722
I think it would be easier to just talk

78
00:03:32,723 --> 00:03:36,785
about adding a frame to our MainPage.xaml

79
00:03:36,786 --> 00:03:39,711
so that we can load individual pages

80
00:03:39,712 --> 00:03:41,894
in and out of that Frame

81
00:03:41,895 --> 00:03:43,217
that's hosted by the MainPage,

82
00:03:43,218 --> 00:03:45,888
so in your mind think of,

83
00:03:45,889 --> 00:03:50,427
you've got the app, the window, the Frame, the rootFrame.

84
00:03:50,428 --> 00:03:53,260
It loads in MainPage.xaml,

85
00:03:53,261 --> 00:03:54,491
which has a Frame on it,

86
00:03:54,492 --> 00:03:55,756
and then will load in Page One,

87
00:03:55,757 --> 00:03:57,892
Page Two, Page Three, Page Four,

88
00:03:57,893 --> 00:04:00,388
so in that scenario we're going to delegate

89
00:04:00,389 --> 00:04:03,616
the responsibility of hosting other information

90
00:04:03,617 --> 00:04:04,847
in MainPage as well,

91
00:04:04,848 --> 00:04:06,623
like the search bar at the top

92
00:04:06,624 --> 00:04:08,527
or the SplitPanel down the left-hand side

93
00:04:08,528 --> 00:04:10,524
for navigation purposes.

94
00:04:10,525 --> 00:04:12,080
Alright, so enough theory.

95
00:04:12,081 --> 00:04:14,820
Let's go ahead and get started with this.

96
00:04:14,821 --> 00:04:16,759
I want to create a new app,

97
00:04:16,760 --> 00:04:19,684
and the first thing I'm going to do is add new pages,

98
00:04:19,685 --> 00:04:21,922
so let's add three new pages.

99
00:04:21,923 --> 00:04:23,260
We'll go to the Project Menu

100
00:04:23,261 --> 00:04:24,688
and select Add New Item.

101
00:04:24,689 --> 00:04:28,588
Make sure that you select the Blank Page Template.

102
00:04:28,589 --> 00:04:30,293
Don't select XAML view.

103
00:04:30,294 --> 00:04:32,966
It has to be Blank Page Template, alright?

104
00:04:33,785 --> 00:04:36,168
We'll call this first one Page1.

105
00:04:36,987 --> 00:04:39,407
We'll add another one called Page2,

106
00:04:42,153 --> 00:04:45,038
and a third one called Page3.

107
00:04:52,080 --> 00:04:54,354
All right, and we'll come back to those

108
00:04:54,355 --> 00:04:55,782
in just a moment,

109
00:04:55,783 --> 00:04:57,884
but those will be the pages that will load in and out

110
00:04:57,885 --> 00:05:00,159
of our MainPages Frame.

111
00:05:00,160 --> 00:05:02,621
So let's open up MainPage.xaml,

112
00:05:02,622 --> 00:05:04,722
and let's go ahead and lay this out.

113
00:05:04,723 --> 00:05:05,926
In fact, I think I'm just going to go ahead

114
00:05:05,927 --> 00:05:10,617
and get rid of the, let me get rid of the

115
00:05:10,618 --> 00:05:12,192
the designer completely and just go

116
00:05:12,193 --> 00:05:13,957
completely to XAML view,

117
00:05:13,958 --> 00:05:17,080
since we have so limited space to work with here.

118
00:05:17,081 --> 00:05:18,322
The first thing I'm going to do

119
00:05:18,323 --> 00:05:20,423
in the MainPage.xaml

120
00:05:20,424 --> 00:05:23,523
is to add a StackPanel in replacing

121
00:05:23,524 --> 00:05:26,089
that Grid that comes automatically.

122
00:05:26,090 --> 00:05:28,249
Inside of that I want to add

123
00:05:28,250 --> 00:05:30,899
another StackPanel and a Frame,

124
00:05:32,159 --> 00:05:34,457
and I am going to give the Frame a name,

125
00:05:34,458 --> 00:05:36,152
so I can access it programmatically.

126
00:05:36,153 --> 00:05:38,149
I'm going to call it MyFrame.

127
00:05:38,150 --> 00:05:39,983
We'll deal with that in just a little bit.

128
00:05:39,984 --> 00:05:42,247
This StackPanel, I want to make this

129
00:05:42,248 --> 00:05:45,092
into a horizontal button bar,

130
00:05:45,093 --> 00:05:46,392
so what I'm going to do

131
00:05:46,393 --> 00:05:50,351
is just set the Orientation="Horizontal",

132
00:05:50,352 --> 00:05:52,116
and I'm going to create three Buttons,

133
00:05:52,117 --> 00:05:55,942
and I'll set the Bargin in between them

134
00:05:56,903 --> 00:05:59,090
to 20, whoops, whoops, whoops.

135
00:05:59,091 --> 00:06:03,618
"0,0,20,0".

136
00:06:03,619 --> 00:06:06,753
Alright, and we'll copy that

137
00:06:06,754 --> 00:06:08,552
and paste that a couple times.

138
00:06:08,553 --> 00:06:12,542
I'm going to give this first Button a name of

139
00:06:12,543 --> 00:06:16,621
HomeButton.

140
00:06:16,622 --> 00:06:19,593
I'm going to set the Content="Home",

141
00:06:19,594 --> 00:06:22,449
and then I'm going to set a click event

142
00:06:22,450 --> 00:06:24,492
equal to a new EventHandler.

143
00:06:24,493 --> 00:06:26,400
We'll come back to that one in just a moment.

144
00:06:26,917 --> 00:06:31,084
Alright, this one we're going to name it BackButton.

145
00:06:31,085 --> 00:06:34,022
We'll set the Content="Back",

146
00:06:34,023 --> 00:06:37,621
and then get it a click event called

147
00:06:37,622 --> 00:06:39,258
BackButton_Click,

148
00:06:39,259 --> 00:06:44,150
and then, finally, I am going to create the ForwardButton,

149
00:06:44,751 --> 00:06:47,591
set it's Content="Forward",

150
00:06:47,592 --> 00:06:50,760
and then add a click EventHandler,

151
00:06:50,761 --> 00:06:52,525
as well, called ForwardButton_Click.

152
00:06:52,526 --> 00:06:53,910
Great.

153
00:06:54,485 --> 00:06:56,996
Alright, so as our application loads up,

154
00:06:56,997 --> 00:06:58,327
as our Frame loads,

155
00:06:58,328 --> 00:06:59,616
what we want to do is load

156
00:06:59,617 --> 00:07:02,356
Page1 into view automatically,

157
00:07:02,357 --> 00:07:05,746
so let's go into the code behind

158
00:07:05,747 --> 00:07:08,114
MainPage.xaml.cs,

159
00:07:08,115 --> 00:07:10,553
and the very first thing that we want to do

160
00:07:10,554 --> 00:07:12,282
is in the constructor for the page,

161
00:07:12,283 --> 00:07:16,485
I want to access MyFrame,

162
00:07:16,486 --> 00:07:18,285
and I'm going to call its Navigate method,

163
00:07:18,286 --> 00:07:21,884
so just like we saw in the app.xaml.cs,

164
00:07:21,885 --> 00:07:24,810
and we navigated to a typeof MainPage,

165
00:07:24,811 --> 00:07:29,810
here we're going to navigate to a typeof(Page1), like so.

166
00:07:30,825 --> 00:07:33,227
Whoops, let me use

167
00:07:33,228 --> 00:07:36,257
the typeof operator correctly.

168
00:07:36,258 --> 00:07:37,755
There we go.

169
00:07:37,756 --> 00:07:38,881
Alright.

170
00:07:38,882 --> 00:07:40,750
So that should load in Page1.

171
00:07:40,751 --> 00:07:41,319
While I'm here,

172
00:07:41,320 --> 00:07:42,619
I'm going to go ahead and flush out

173
00:07:42,620 --> 00:07:44,790
the Home, Back, and Forward buttons.

174
00:07:44,791 --> 00:07:46,149
Now the HomeButton will be easy.

175
00:07:46,150 --> 00:07:47,507
We're just going to whenever you click it

176
00:07:47,508 --> 00:07:49,725
go automatically back to Page1,

177
00:07:49,726 --> 00:07:51,489
so I'll just copy and paste whatever

178
00:07:51,490 --> 00:07:53,521
I had in the constructor down here

179
00:07:53,522 --> 00:07:55,460
into the HomeButton_Click event.

180
00:07:55,461 --> 00:07:57,619
However, in the Back and Forward buttons

181
00:07:57,620 --> 00:07:59,953
what we want to do is work with the history,

182
00:07:59,954 --> 00:08:02,519
or rather the BackStack, of the Frame,

183
00:08:02,520 --> 00:08:04,353
so the Frame will maintain

184
00:08:04,354 --> 00:08:08,155
the history of pages that the user navigates through,

185
00:08:08,156 --> 00:08:13,155
and it will replay those navigation requests

186
00:08:13,857 --> 00:08:15,191
whenever we go back or forward.

187
00:08:15,192 --> 00:08:18,720
We have to ask the navigation's BackStack,

188
00:08:18,721 --> 00:08:20,090
"Can we go forward?

189
00:08:20,091 --> 00:08:21,147
"Can we go backward?

190
00:08:21,148 --> 00:08:23,353
"And if we can, then go ahead and go back,

191
00:08:23,354 --> 00:08:25,651
"or go ahead and go forward, respectively."

192
00:08:25,652 --> 00:08:27,149
So we'll do this.

193
00:08:27,150 --> 00:08:32,149
if(MyFrame.CanGoBack).

194
00:08:34,824 --> 00:08:38,213
That's true or false, if it's true,

195
00:08:38,214 --> 00:08:39,841
then we'll do

196
00:08:39,842 --> 00:08:44,009
MyFrame.GoBack().

197
00:08:44,010 --> 00:08:45,681
See how easy it is?

198
00:08:45,682 --> 00:08:47,782
And we'll do something similar here for froward.

199
00:08:47,783 --> 00:08:52,510
if(MyFrame.CanGoForward),

200
00:08:54,885 --> 00:08:57,061
then MyFrame.GoForward().

201
00:09:01,654 --> 00:09:02,756
Great.

202
00:09:02,757 --> 00:09:05,182
All right, so I think that will do it

203
00:09:05,183 --> 00:09:07,586
for the moment for the Main Page.

204
00:09:07,587 --> 00:09:10,058
Let me shut that down,

205
00:09:10,059 --> 00:09:11,127
and now what I want to do

206
00:09:11,128 --> 00:09:13,193
is go to the Page1.xaml,

207
00:09:13,194 --> 00:09:16,076
and here again I'm just going to collapse

208
00:09:16,790 --> 00:09:20,760
and only look at that view there.

209
00:09:20,761 --> 00:09:23,094
Alright, I'm going to replace the Grid with a StackPanel,

210
00:09:23,095 --> 00:09:27,923
and then inside of here I'm going to add a TextBlock,

211
00:09:27,924 --> 00:09:30,849
and I'll make the font size kind of large,

212
00:09:30,850 --> 00:09:32,858
so we can see what we're doing here,

213
00:09:32,859 --> 00:09:35,992
and I'll set the Text equal to whatever

214
00:09:35,993 --> 00:09:37,827
the current page that I am on,

215
00:09:37,828 --> 00:09:41,252
so Page1, like that,

216
00:09:41,253 --> 00:09:43,585
and then I'm going to add a HyperlinkButton.

217
00:09:43,586 --> 00:09:46,221
Now I could add any type of control

218
00:09:46,222 --> 00:09:47,684
where I can handle an event,

219
00:09:47,685 --> 00:09:52,351
and handle it to tell the Frame to navigate

220
00:09:52,352 --> 00:09:55,160
to whatever next page that we want to navigate to.

221
00:09:55,161 --> 00:09:56,925
I use the HyperlinkButton because

222
00:09:56,926 --> 00:09:59,085
it connotes navigation,

223
00:09:59,086 --> 00:10:02,254
just like a web page's hyperlink connotes navigation,

224
00:10:02,255 --> 00:10:04,553
and as we'll learn,

225
00:10:04,554 --> 00:10:07,827
this navigation, this HyperlinkButton,

226
00:10:07,828 --> 00:10:09,058
has a special property

227
00:10:09,059 --> 00:10:10,811
that's different than just a Button

228
00:10:10,812 --> 00:10:14,421
that's been styled up like a hyperlink.

229
00:10:14,422 --> 00:10:17,591
It'll actually have a navigate your eye property

230
00:10:17,592 --> 00:10:20,343
that will allow us to navigate out to a website,

231
00:10:20,344 --> 00:10:22,514
so, actually, on this Page1,

232
00:10:22,515 --> 00:10:25,312
I'll add a second version of the HyperlinkButton

233
00:10:25,313 --> 00:10:27,192
just to demonstrate that.

234
00:10:27,193 --> 00:10:28,243
Alright, so what was I doing?

235
00:10:28,244 --> 00:10:28,524
Oh, yeah.

236
00:10:28,525 --> 00:10:30,312
So let's give it, well, we don't need to give it a name.

237
00:10:30,313 --> 00:10:33,567
Let's give it some Text,

238
00:10:34,014 --> 00:10:35,865
or actualy Content.

239
00:10:36,661 --> 00:10:39,818
Great, and, so, we'll say,

240
00:10:39,819 --> 00:10:43,110
"Go to Page 2,"

241
00:10:44,359 --> 00:10:48,636
and we'll handle the click event like that,

242
00:10:50,442 --> 00:10:53,251
and as I promised let's go ahead

243
00:10:53,252 --> 00:10:55,306
and create a second HyperlinkButton,

244
00:10:55,307 --> 00:10:56,745
and this time we'll say,

245
00:10:56,746 --> 00:10:59,143
"Go to Microsoft.com,"

246
00:10:59,719 --> 00:11:03,367
and we'll set the NavigateURI="http://www.microsoft.com"

247
00:11:03,368 --> 00:11:08,367
NavigateURI="http://www.microsoft.com"

248
00:11:08,410 --> 00:11:10,042
Alright?

249
00:11:11,024 --> 00:11:12,660
Alright, so that should do there.

250
00:11:12,661 --> 00:11:15,249
Now I'm going to copy these first two controls,

251
00:11:15,250 --> 00:11:17,327
the TextBlock and the HyperlinkButton.

252
00:11:17,328 --> 00:11:19,324
I'm going to put that in Page2,

253
00:11:19,325 --> 00:11:23,086
so let's go ahead and collapse that,

254
00:11:23,087 --> 00:11:24,850
get into the XAML view,

255
00:11:24,851 --> 00:11:25,651
let's paste that here,

256
00:11:25,652 --> 00:11:27,927
and I'm going to change out...

257
00:11:27,928 --> 00:11:29,190
This can go to Page2.

258
00:11:29,191 --> 00:11:31,573
This will be Page3.

259
00:11:34,191 --> 00:11:37,596
Oh, and we need a StackPanel for ours, don't we?

260
00:11:42,420 --> 00:11:44,074
Great.

261
00:11:44,452 --> 00:11:48,367
And then, finally, go to Page3,

262
00:11:48,884 --> 00:11:50,520
collapse that,

263
00:11:50,521 --> 00:11:52,300
open up XAML view,

264
00:11:52,654 --> 00:11:55,289
replace the Grid with what we have here,

265
00:11:55,290 --> 00:11:56,519
and we'll just get rid of this

266
00:11:56,520 --> 00:11:57,286
HyperlinkButton at that point.

267
00:11:57,287 --> 00:11:59,068
We won't need it.

268
00:11:59,458 --> 00:12:00,246
We'll call this Page 3.

269
00:12:00,247 --> 00:12:01,256
In fact, what I'm going to do

270
00:12:01,257 --> 00:12:04,658
is actually put something else in there soon,

271
00:12:04,659 --> 00:12:06,705
but let's just stop right there.

272
00:12:07,617 --> 00:12:09,555
Okay, so now let's go ahead and run the application,

273
00:12:09,556 --> 00:12:10,727
see what we have so far,

274
00:12:10,728 --> 00:12:12,213
see if we can get this to work,

275
00:12:12,214 --> 00:12:13,966
if I've missed anything.

276
00:12:15,923 --> 00:12:18,134
Whoops, something failed.

277
00:12:18,686 --> 00:12:19,893
What did we miss?

278
00:12:19,894 --> 00:12:20,883
Oh.

279
00:12:21,874 --> 00:12:23,784
Okay, that's easy enough to fix.

280
00:12:23,785 --> 00:12:25,990
Let's go to Page2,

281
00:12:25,991 --> 00:12:29,984
and I'll just go ahead and hit the F12 key on my keyboard.

282
00:12:29,985 --> 00:12:31,319
That should work,

283
00:12:31,320 --> 00:12:32,387
and, hey, while I'm here,

284
00:12:32,388 --> 00:12:34,721
let's go ahead and navigate, right?

285
00:12:34,722 --> 00:12:39,043
So Frame.Navigate(),

286
00:12:39,793 --> 00:12:42,447
and we'll go Frame.Navigate(typeof(Page3))

287
00:12:42,448 --> 00:12:45,625
Frame.Navigate(typeof(Page3)) like so.

288
00:12:45,626 --> 00:12:46,891
and you might wonder why am I

289
00:12:46,892 --> 00:12:50,188
referencing Frame and not MyFrame?

290
00:12:50,189 --> 00:12:53,590
After all, the Frame's name is MyFrame, right?

291
00:12:53,591 --> 00:12:56,446
True, whenever we call the Navigate method,

292
00:12:56,447 --> 00:12:58,194
and we pass in the type that we want

293
00:12:58,195 --> 00:12:59,694
to create a new instance of,

294
00:12:59,695 --> 00:13:02,654
that Navigate method will create that instance

295
00:13:02,655 --> 00:13:05,847
and will kind of

296
00:13:05,848 --> 00:13:07,287
act as a factory in so much

297
00:13:07,288 --> 00:13:10,816
that it will set up the instantiation of that object

298
00:13:10,817 --> 00:13:12,825
by setting its various properties.

299
00:13:12,826 --> 00:13:15,774
One of the properties that it sets for a given page

300
00:13:15,775 --> 00:13:17,016
is the Frame property,

301
00:13:17,017 --> 00:13:20,116
and sets it to whatever the parent Frame is,

302
00:13:20,117 --> 00:13:22,252
so that's how we get a reference to the current Frame

303
00:13:22,253 --> 00:13:23,483
that we're sitting inside of

304
00:13:23,484 --> 00:13:26,490
in order to call its Navigate method, okay?

305
00:13:26,491 --> 00:13:28,185
All right, so we did that.

306
00:13:28,186 --> 00:13:31,319
Let's see, did we do that in Page1 as well?

307
00:13:31,320 --> 00:13:32,724
Eh, no, we didn't.

308
00:13:32,725 --> 00:13:34,840
So let's just copy this,

309
00:13:36,158 --> 00:13:38,160
and stick it there,

310
00:13:38,817 --> 00:13:40,866
and we'll call Page2.

311
00:13:40,867 --> 00:13:43,942
All right, does that work?

312
00:13:49,185 --> 00:13:51,872
Alright, some success.

313
00:13:52,424 --> 00:13:54,222
Let me pull this down.

314
00:13:54,223 --> 00:13:55,488
Great.

315
00:13:55,489 --> 00:13:56,951
Alright, so the first thing I'm going to do

316
00:13:56,952 --> 00:13:58,483
is I'm actually going to click

317
00:13:58,484 --> 00:14:02,918
the hyperlink button that will go

318
00:14:02,919 --> 00:14:04,753
to Microsoft.com,

319
00:14:04,754 --> 00:14:06,680
that opens up my Edge browser,

320
00:14:06,681 --> 00:14:08,259
navigates to Microsoft.com.

321
00:14:08,260 --> 00:14:08,921
Pretty cool.

322
00:14:08,922 --> 00:14:11,283
So that's what the Navigate Your Eye does.

323
00:14:11,284 --> 00:14:13,480
Next I'm going to click the Go To Page 2,

324
00:14:13,481 --> 00:14:14,386
which goes to Page 2,

325
00:14:14,387 --> 00:14:15,988
and then I'll click Go To Page 3.

326
00:14:15,989 --> 00:14:16,789
Great.

327
00:14:16,790 --> 00:14:18,450
Now I'm going to click the back button,

328
00:14:18,451 --> 00:14:20,992
and the forward button, and then the home button,

329
00:14:20,993 --> 00:14:23,186
so you can see we covered all of those scenarios.

330
00:14:23,187 --> 00:14:24,046
Very cool.

331
00:14:24,047 --> 00:14:26,890
So that's the most basic scenario that we can cover.

332
00:14:26,891 --> 00:14:28,515
Let's add a wrinkle to this.

333
00:14:28,516 --> 00:14:30,419
In page number two, what I'm going to do

334
00:14:30,420 --> 00:14:34,982
is add a TextBox,

335
00:14:34,983 --> 00:14:36,851
and I'm going to call that

336
00:14:38,522 --> 00:14:40,691
ValueTextBox because I'm not

337
00:14:40,692 --> 00:14:43,187
feeling very original at the moment,

338
00:14:43,188 --> 00:14:47,242
and I think that's all I am going to do there.

339
00:14:47,620 --> 00:14:48,827
Well, I will set the width

340
00:14:48,828 --> 00:14:50,522
because I think it'll be small if I don't.

341
00:14:50,523 --> 00:14:52,716
We'll set it to 200 pixels.

342
00:14:52,717 --> 00:14:54,980
You probably want to use a relative size

343
00:14:54,981 --> 00:14:56,187
if this was a real application,

344
00:14:56,188 --> 00:14:57,685
but it's not, it's just a demo,

345
00:14:57,686 --> 00:15:00,053
so let's not worry about it too much,

346
00:15:00,054 --> 00:15:02,550
and I am actually going to add that same

347
00:15:02,551 --> 00:15:06,125
TextBox to Page3 right there.

348
00:15:06,126 --> 00:15:07,252
Now what I want to do

349
00:15:07,253 --> 00:15:09,492
when I navigate from Page 2 to Page 3,

350
00:15:09,493 --> 00:15:11,617
I want to pass along the value

351
00:15:11,618 --> 00:15:14,891
that the user typed in the TextBox

352
00:15:14,892 --> 00:15:16,691
and then display that value

353
00:15:16,692 --> 00:15:18,687
in the TextBox in Page 3.

354
00:15:18,688 --> 00:15:19,756
How do we do that?

355
00:15:19,757 --> 00:15:21,946
Well, it's pretty easy, actually.

356
00:15:21,947 --> 00:15:24,848
If we take a look at Page2.xaml.cs,

357
00:15:24,849 --> 00:15:27,379
there's an overloaded version of the Navigate method

358
00:15:27,380 --> 00:15:30,920
that allows us to pass in anything we want

359
00:15:30,921 --> 00:15:34,856
as a parameter that is then retrieved

360
00:15:34,857 --> 00:15:36,957
by the other page that we're navigating to,

361
00:15:36,958 --> 00:15:41,473
so in this case we'll just take ValueTextbox.Text,

362
00:15:41,474 --> 00:15:43,494
and we'll pass it over to the other side.

363
00:15:43,495 --> 00:15:44,794
Now retrieving it on the other side

364
00:15:44,795 --> 00:15:46,419
is a little bit trickier.

365
00:15:46,420 --> 00:15:48,056
What we got to do there

366
00:15:48,057 --> 00:15:52,712
in the Page3.xaml.cs.

367
00:15:52,713 --> 00:15:55,003
Let's get down to it here.

368
00:15:55,520 --> 00:15:57,156
We're going to have to override

369
00:15:57,157 --> 00:16:00,558
a certain method on this

370
00:16:00,559 --> 00:16:03,104
called the

371
00:16:03,354 --> 00:16:04,653
OnNavigatedTo,

372
00:16:04,654 --> 00:16:07,683
and this event will fire every time

373
00:16:07,684 --> 00:16:12,683
that we navigate to a new...

374
00:16:14,128 --> 00:16:15,933
Or to the page, right,

375
00:16:15,934 --> 00:16:18,121
and so what we can do inside of here, then,

376
00:16:18,122 --> 00:16:20,791
is to retrieve the value

377
00:16:20,792 --> 00:16:23,055
through the NavigationEventArgs,

378
00:16:23,056 --> 00:16:26,459
so we'll go var value = e.Parameter;

379
00:16:26,460 --> 00:16:30,557
var value = e.Parameter;,

380
00:16:30,558 --> 00:16:32,182
and we're going to cast this

381
00:16:32,183 --> 00:16:33,390
because it comes in as object

382
00:16:33,391 --> 00:16:34,853
because it can hold anything.

383
00:16:34,854 --> 00:16:36,455
We'll just have to, in this case,

384
00:16:36,456 --> 00:16:37,418
cast it to string.

385
00:16:37,419 --> 00:16:39,183
You would cast it to a class.

386
00:16:39,184 --> 00:16:40,820
Anything you want,

387
00:16:40,821 --> 00:16:44,546
and then we'll go ValueTexbox.Text = value;

388
00:16:44,547 --> 00:16:47,449
ValueTextBox.Text = value;.

389
00:16:47,450 --> 00:16:49,475
that should work.

390
00:16:50,155 --> 00:16:52,737
Let's run the application again.

391
00:16:54,752 --> 00:16:56,493
All right, and this time let's go to Page 2,

392
00:16:56,494 --> 00:16:58,885
and here we're just going to type in some junk

393
00:16:58,886 --> 00:17:00,255
and go to Page 3,

394
00:17:00,256 --> 00:17:01,741
and we get that same junk there.

395
00:17:01,742 --> 00:17:02,983
Awesome.

396
00:17:02,984 --> 00:17:04,941
So what happens when we go back?

397
00:17:04,942 --> 00:17:06,091
Wait a second.

398
00:17:06,092 --> 00:17:07,089
We've lost our value.

399
00:17:07,090 --> 00:17:08,053
Where did it go?

400
00:17:08,054 --> 00:17:09,770
Let's go forward.

401
00:17:09,771 --> 00:17:11,417
Well, it's still there,

402
00:17:11,418 --> 00:17:13,356
but it's not here.

403
00:17:13,357 --> 00:17:14,586
What happened?

404
00:17:14,587 --> 00:17:15,794
Well, remember what I said,

405
00:17:15,795 --> 00:17:18,360
whenever you're navigating through the BackStack,

406
00:17:18,361 --> 00:17:20,252
through the history of the Frame,

407
00:17:20,253 --> 00:17:23,886
it's going to replay the Navigation event.

408
00:17:23,887 --> 00:17:27,857
In our case, the step of navigating

409
00:17:27,858 --> 00:17:29,354
from Page 2 to Page 3

410
00:17:29,355 --> 00:17:31,421
included some text,

411
00:17:31,422 --> 00:17:34,857
so it gets picked up as we replay that event

412
00:17:34,858 --> 00:17:39,420
and displayed into that TextBox.

413
00:17:39,421 --> 00:17:42,450
However, when we go back to Page 2,

414
00:17:42,451 --> 00:17:45,318
when we navigated from Page 1 to Page 2,

415
00:17:45,319 --> 00:17:46,978
we didn't send anything over.

416
00:17:46,979 --> 00:17:48,453
It replays that event,

417
00:17:48,454 --> 00:17:49,753
and there's nothing there

418
00:17:49,754 --> 00:17:51,019
as a result of it.

419
00:17:51,020 --> 00:17:53,224
Okay, but what if we wanted to kind of

420
00:17:53,225 --> 00:17:57,594
maintain state between these pages?

421
00:17:57,595 --> 00:17:59,990
Well, actually, that's pretty simple,

422
00:17:59,991 --> 00:18:00,989
and there's several different ways

423
00:18:00,990 --> 00:18:02,208
we can go about this.

424
00:18:02,209 --> 00:18:03,218
Some people might say,

425
00:18:03,219 --> 00:18:04,054
"Hey, don't do this.

426
00:18:04,055 --> 00:18:08,399
"This is not quite the right way to go about it."

427
00:18:08,789 --> 00:18:10,227
They're probably right,

428
00:18:10,228 --> 00:18:12,352
but I want to keep this as simple as possible,

429
00:18:12,353 --> 00:18:14,941
and as long as you don't do anything abusive

430
00:18:14,942 --> 00:18:16,055
to your application,

431
00:18:16,056 --> 00:18:17,925
it should be okay for you.

432
00:18:17,926 --> 00:18:19,353
Just keep in mind that there are probably

433
00:18:19,354 --> 00:18:21,814
more elegant solutions to this

434
00:18:21,815 --> 00:18:24,148
than doing what I'm about to do.

435
00:18:24,149 --> 00:18:25,912
So since we said that the application

436
00:18:25,913 --> 00:18:27,886
sits at the very top of the stack.

437
00:18:27,887 --> 00:18:28,919
When you launch an app,

438
00:18:28,920 --> 00:18:29,918
there's an application object

439
00:18:29,919 --> 00:18:31,427
that hosts a Window, that hosts a Frame,

440
00:18:31,428 --> 00:18:34,055
that hosts MainPage, right?

441
00:18:34,706 --> 00:18:38,846
What we can do is kind of treat this app class,

442
00:18:38,847 --> 00:18:40,587
this instance of app,

443
00:18:40,588 --> 00:18:43,722
as a global variable,

444
00:18:43,723 --> 00:18:46,183
and so we can get to it pretty easily.

445
00:18:46,184 --> 00:18:48,447
So inside of the class's definition.

446
00:18:48,448 --> 00:18:51,385
Here, I kind of went to the wrong spot there.

447
00:18:51,386 --> 00:18:53,434
Inside of this class's definition,

448
00:18:53,435 --> 00:18:54,926
what I'm going to do at the very top if this

449
00:18:54,927 --> 00:18:56,656
is actually just paste in this line of code,

450
00:18:56,657 --> 00:19:00,150
and here I'm creating a property

451
00:19:00,151 --> 00:19:05,084
or just a field called SomeImportantValue,

452
00:19:05,085 --> 00:19:09,009
and I'm making it static, of type string,

453
00:19:09,010 --> 00:19:10,924
and then saying this is internal,

454
00:19:10,925 --> 00:19:13,618
which means that anything inside of this app

455
00:19:13,619 --> 00:19:14,825
can access that variable,

456
00:19:14,826 --> 00:19:17,821
but nothing outside of the application, okay?

457
00:19:17,822 --> 00:19:19,516
So SomeImportantValue.

458
00:19:19,517 --> 00:19:20,653
What we'll do here, then,

459
00:19:20,654 --> 00:19:23,684
in Page2.xaml.cs

460
00:19:23,685 --> 00:19:28,684
is we're going to set App.SomeImportantValue = ValueTextBox.Text;

461
00:19:28,723 --> 00:19:33,722
App.SomeImportantValue = ValueTextbox.text;, right?

462
00:19:33,982 --> 00:19:36,815
At this point, we really don't need to pass

463
00:19:36,816 --> 00:19:40,483
this into Page4, or Page3, rather,

464
00:19:40,484 --> 00:19:41,784
if we didn't want to,

465
00:19:41,785 --> 00:19:42,724
but I'm going to go ahead

466
00:19:42,725 --> 00:19:44,582
and leave that code there for now.

467
00:19:44,583 --> 00:19:46,126
So we've set this,

468
00:19:46,127 --> 00:19:48,610
and it's storing it, saving in memory,

469
00:19:48,611 --> 00:19:50,259
and what I'm going to do

470
00:19:50,260 --> 00:19:53,092
is actually go back here to Page3,

471
00:19:53,093 --> 00:19:55,103
I'm going to grab this,

472
00:19:55,423 --> 00:19:58,592
override, and put it back in Page2.

473
00:19:58,593 --> 00:20:00,519
All right, so on Page2 now

474
00:20:00,520 --> 00:20:02,980
we're going to override the OnNavigatedTo,

475
00:20:02,981 --> 00:20:07,125
and if our SomeImportantValue

476
00:20:07,126 --> 00:20:09,575
is not an empty string,

477
00:20:09,576 --> 00:20:11,404
so If...

478
00:20:15,195 --> 00:20:17,371
Is not...

479
00:20:23,287 --> 00:20:25,747
I had to think about that for a second.

480
00:20:25,748 --> 00:20:27,884
If not string is null or empty,

481
00:20:27,885 --> 00:20:29,486
and then I'm going to look at the string,

482
00:20:29,487 --> 00:20:32,412
then I want to preform the following.

483
00:20:32,413 --> 00:20:33,410
I'm going to take whatever

484
00:20:33,411 --> 00:20:37,201
was in here

485
00:20:38,961 --> 00:20:42,083
and set it there.

486
00:20:42,084 --> 00:20:42,756
Just get rid of that.

487
00:20:42,757 --> 00:20:43,673
We don't need that,

488
00:20:43,674 --> 00:20:44,614
and take that,

489
00:20:44,615 --> 00:20:46,518
and put that there.

490
00:20:46,519 --> 00:20:48,138
Great.

491
00:20:48,922 --> 00:20:51,435
So let's go ahead and run it now.

492
00:20:53,821 --> 00:20:55,318
All right, so go Page 2.

493
00:20:55,319 --> 00:20:56,386
Here we're going to type something in.

494
00:20:56,387 --> 00:20:57,454
Go to Page 3,

495
00:20:57,455 --> 00:20:59,660
and now we're going to go back,

496
00:20:59,661 --> 00:21:02,957
and we have the value again,

497
00:21:02,958 --> 00:21:03,817
so it worked.

498
00:21:03,818 --> 00:21:05,279
Very cool.

499
00:21:05,280 --> 00:21:07,485
All right, the next thing that I want to demonstrate

500
00:21:07,486 --> 00:21:10,419
is how to navigate

501
00:21:10,420 --> 00:21:13,751
to a whole different page

502
00:21:13,752 --> 00:21:16,085
at the RootFrame level,

503
00:21:16,086 --> 00:21:18,558
and this shouldn't be too difficult.

504
00:21:18,559 --> 00:21:21,960
Let's go to our MainPage.xaml.cs.

505
00:21:21,961 --> 00:21:23,794
Actually, to the MainPage.xaml.

506
00:21:23,795 --> 00:21:26,108
I'm going to add one more Button,

507
00:21:26,451 --> 00:21:31,152
and I'm going to call this NavigateButton,

508
00:21:31,153 --> 00:21:33,453
and set the Content="NavigateRootFrame"

509
00:21:33,454 --> 00:21:38,173
Content="NavigateRootFrame",

510
00:21:38,621 --> 00:21:42,521
and we'll set the Click equal to a new EventHandler,

511
00:21:42,522 --> 00:21:44,622
and I don't think I need to set a margin.

512
00:21:44,623 --> 00:21:46,776
Think we'll be okay there,

513
00:21:46,777 --> 00:21:51,776
so in this we'll hit, F12, we'll get in here,

514
00:21:51,856 --> 00:21:54,816
and this time what I want to do is use the.

515
00:21:54,817 --> 00:21:57,683
Remember we said that Page has a Frame property,

516
00:21:57,684 --> 00:21:59,425
so I'm just going to use the This keyword

517
00:21:59,426 --> 00:22:01,288
saying, "This instance of

518
00:22:01,289 --> 00:22:05,939
"MainPage.Frame.Navigate,

519
00:22:06,870 --> 00:22:10,015
and then we're going to say type of

520
00:22:10,776 --> 00:22:13,959
Page2 like that.

521
00:22:13,960 --> 00:22:16,403
So let's run the application,

522
00:22:19,811 --> 00:22:23,816
and you can see that now I've navigated to Page 2.

523
00:22:23,817 --> 00:22:27,926
As a result of that, I've lost the Chrome,

524
00:22:27,927 --> 00:22:31,490
the outermost StackPanel,

525
00:22:31,491 --> 00:22:33,986
and I've lost my navigation buttons, okay?

526
00:22:33,987 --> 00:22:36,215
So we'd have to figure out how to get those back,

527
00:22:36,216 --> 00:22:38,723
and it's not as crucial that we do this

528
00:22:38,724 --> 00:22:40,418
for the hamburger-style navigation

529
00:22:40,419 --> 00:22:43,458
that we'll utilize in Windows 10 apps,

530
00:22:43,459 --> 00:22:44,583
but I did want to demonstrate

531
00:22:44,584 --> 00:22:46,606
how to do that nonetheless.

532
00:22:47,193 --> 00:22:50,292
Alright, now the final thing that I want to talk about

533
00:22:50,293 --> 00:22:54,390
is what happens whenever we run this

534
00:22:54,391 --> 00:22:56,637
on a mobile device?

535
00:22:57,456 --> 00:22:59,917
Because the phone has something unique about it

536
00:22:59,918 --> 00:23:02,320
that the other form factors,

537
00:23:02,321 --> 00:23:05,043
the other device families do not have.

538
00:23:06,524 --> 00:23:09,623
You can see that we have this representation

539
00:23:09,624 --> 00:23:12,688
of the back button here on the Chrome of our emulator.

540
00:23:12,689 --> 00:23:15,486
Actually, now it's inside the emulator.

541
00:23:15,487 --> 00:23:17,741
Visible area there,

542
00:23:19,791 --> 00:23:22,553
and let's go to Page 2,

543
00:23:22,554 --> 00:23:24,074
and we can even type in some junk here

544
00:23:24,075 --> 00:23:25,885
and go to Page 3,

545
00:23:25,886 --> 00:23:27,858
and then we can go back, all right,

546
00:23:27,859 --> 00:23:29,124
and we can go forward.

547
00:23:29,125 --> 00:23:30,924
Now what if we were to hit this back arrow?

548
00:23:30,925 --> 00:23:33,756
What we might want to happen

549
00:23:33,757 --> 00:23:36,891
is that we want to go back to Page 2,

550
00:23:36,892 --> 00:23:38,424
then to Page One,

551
00:23:38,425 --> 00:23:40,989
but when I hit the back button,

552
00:23:40,990 --> 00:23:45,320
it completely escapes out of our application

553
00:23:45,321 --> 00:23:49,720
and goes back to the Home Page,

554
00:23:49,721 --> 00:23:51,659
and, unfortunately, how to fix this

555
00:23:51,660 --> 00:23:53,688
will require a little bit more explanation,

556
00:23:53,689 --> 00:23:55,185
so I want to revisit this topic

557
00:23:55,186 --> 00:23:58,227
whenever we talk working with API's,

558
00:23:58,228 --> 00:24:00,108
addressing capabilities that are available

559
00:24:00,109 --> 00:24:02,453
to specific device families

560
00:24:02,454 --> 00:24:04,392
when using extension SDK's,

561
00:24:04,393 --> 00:24:05,681
software development kits,

562
00:24:05,682 --> 00:24:06,981
so these extension SDK's

563
00:24:06,982 --> 00:24:09,893
you'll recall from way back in lesson number three.

564
00:24:09,894 --> 00:24:11,741
They allow you to harness features

565
00:24:11,742 --> 00:24:15,027
that are available only on that particular device family,

566
00:24:15,028 --> 00:24:18,150
so in this case, this device family has,

567
00:24:18,151 --> 00:24:20,251
or potentially has, a back button,

568
00:24:20,252 --> 00:24:21,726
this little back arrow,

569
00:24:21,727 --> 00:24:23,874
and how do we handle it in that case?

570
00:24:23,875 --> 00:24:26,207
We'll, again, we'll come back to this,

571
00:24:26,208 --> 00:24:28,158
and this same example,

572
00:24:28,159 --> 00:24:30,445
and implement that,

573
00:24:30,446 --> 00:24:33,080
and show it running it on the phone correctly,

574
00:24:33,081 --> 00:24:34,253
so when we hit the back button

575
00:24:34,254 --> 00:24:37,225
it navigates back in our application

576
00:24:37,226 --> 00:24:39,686
not just out of our application completely.

577
00:24:39,687 --> 00:24:42,217
We'll show it how to, basically, support

578
00:24:42,218 --> 00:24:44,888
hardware input buttons on the phone, okay?

579
00:24:44,889 --> 00:24:46,478
We'll come back to that later.

580
00:24:46,479 --> 00:24:47,245
Doing great.

581
00:24:47,246 --> 00:24:47,988
Let's continue on.

582
00:24:47,989 --> 00:24:49,183
We'll see you in the next lesson.

583
00:24:49,184 --> 00:24:51,001
Thanks.  

