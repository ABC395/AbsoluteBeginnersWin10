[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: ../OneDrive/Public Folder/Win10 Translation/UWP-010/subtitles/uwp10CheatSheet_high.mp4
Video File: ../OneDrive/Public Folder/Win10 Translation/UWP-010/subtitles/uwp10CheatSheet_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.375000
Active Line: 108
Video Position: 14936

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Windows,Microsoft YaHei,52,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2.09709,2.09709,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.96,Windows,,0,0,0,,备忘录：XAML和布局控件\N翻译@xJonathan   没人校对啊摔！
Dialogue: 0,0:00:04.76,0:00:08.48,Windows,,0,0,0,,Hi 我是www.learnvisualtudio.net的爆伯啦
Dialogue: 0,0:00:08.91,0:00:10.48,Windows,,0,0,0,,我来告诉你一个小秘密
Dialogue: 0,0:00:11.02,0:00:13.06,Windows,,0,0,0,,嘿嘿 根本没有人会记这些啦
Dialogue: 0,0:00:13.06,0:00:14.53,Windows,,0,0,0,,最起码一开始不会记啦
Dialogue: 0,0:00:14.53,0:00:18.71,Windows,,0,0,0,,你大概需要花好几个月的时间
Dialogue: 0,0:00:18.71,0:00:21.62,Windows,,0,0,0,,来学习和写App
Dialogue: 0,0:00:21.62,0:00:27.64,Windows,,0,0,0,,才能让你真正体会到并且理解这些东西的用法
Dialogue: 0,0:00:28.02,0:00:31.13,Windows,,0,0,0,,网上的代码很不错
Dialogue: 0,0:00:31.13,0:00:36.17,Windows,,0,0,0,,而我用的是备忘录 (Cheat Sheet)，其实就是笔记啦
Dialogue: 0,0:00:36.17,0:00:40.55,Windows,,0,0,0,,是我通过看视频和文章收集来的
Dialogue: 0,0:00:40.55,0:00:42.55,Windows,,0,0,0,,这样做能让我理清当中的信息
Dialogue: 0,0:00:42.55,0:00:46.02,Windows,,0,0,0,,确切地看到它，并在我的脑中整理
Dialogue: 0,0:00:46.02,0:00:53.42,Windows,,0,0,0,,在这个系列里面我们会用这种方式来复习了啦
Dialogue: 0,0:00:53.42,0:00:56.84,Windows,,0,0,0,,这也是我在learnvisualstudio.net上面推荐的方法
Dialogue: 0,0:00:56.84,0:01:05.84,Windows,,0,0,0,,这也是一个能提醒你自己视频里面重点是什么的方法
Dialogue: 0,0:01:05.84,0:01:08.46,Windows,,0,0,0,,你可以去掉你不需要的东西
Dialogue: 0,0:01:08.46,0:01:11.31,Windows,,0,0,0,,加上你觉得以后会有用的
Dialogue: 0,0:01:11.31,0:01:12.71,Windows,,0,0,0,,做成你自己的版本
Dialogue: 0,0:01:12.71,0:01:15.51,Windows,,0,0,0,,我现在来复制粘贴
Dialogue: 0,0:01:15.51,0:01:17.15,Windows,,0,0,0,,我以前都手打的
Dialogue: 0,0:01:17.15,0:01:19.31,Windows,,0,0,0,,但那样很慢啦
Dialogue: 0,0:01:19.31,0:01:22.82,Windows,,0,0,0,,然后老师和学生都很痛苦啦
Dialogue: 0,0:01:22.82,0:01:23.37,Windows,,0,0,0,,(应该是懒)
Dialogue: 0,0:01:23.37,0:01:26.93,Windows,,0,0,0,,你看我在桌面上已经新建了一个备忘录了
Dialogue: 0,0:01:26.93,0:01:28.51,Windows,,0,0,0,,一起做吧
Dialogue: 0,0:01:28.51,0:01:31.75,Windows,,0,0,0,, UWP-Cheat-Sheet.txt
Dialogue: 0,0:01:31.75,0:01:36.26,Windows,,0,0,0,,这只是我的做法，你起什么名放哪里都没关系
Dialogue: 0,0:01:36.26,0:01:40.22,Windows,,0,0,0,,好了噜，我要开始复制粘贴了
Dialogue: 0,0:01:40.22,0:01:45.31,Windows,,0,0,0,,你可以用我的笔记，也可以自己打
Dialogue: 0,0:01:45.31,0:01:47.75,Windows,,0,0,0,,我建议你自己打出来
Dialogue: 0,0:01:47.75,0:01:49.48,Windows,,0,0,0,,增强一下记忆
Dialogue: 0,0:01:49.48,0:01:54.33,Windows,,0,0,0,,好啦，新建一个备忘录，粘贴
Dialogue: 0,0:01:54.33,0:01:56.73,Windows,,0,0,0,,这些是课程里比较重要的点
Dialogue: 0,0:01:56.73,0:02:03.77,Windows,,0,0,0,,我们才刚开始学，其实要写上来以后有用的东西不多啊
Dialogue: 0,0:02:03.77,0:02:05.51,Windows,,0,0,0,,因为很多都是背后的理论
Dialogue: 0,0:02:05.51,0:02:08.48,Windows,,0,0,0,,第四节课我们开始讲XAML时
Dialogue: 0,0:02:08.48,0:02:11.66,Windows,,0,0,0,,我们谈到了XAML语法的本质
Dialogue: 0,0:02:11.66,0:02:13.66,Windows,,0,0,0,,说它是XML的一种
Dialogue: 0,0:02:13.66,0:02:18.53,Windows,,0,0,0,,又或者说它用XML来实现它的语法
Dialogue: 0,0:02:18.53,0:02:22.00,Windows,,0,0,0,,当你在写XMAL时，你其实是在
Dialogue: 0,0:02:22.00,0:02:27.13,Windows,,0,0,0,,创建类的实例，并且给它们设定属性值
Dialogue: 0,0:02:27.13,0:02:29.13,Windows,,0,0,0,,从而定义用户界面
Dialogue: 0,0:02:29.13,0:02:34.57,Windows,,0,0,0,,XAML的语法很自然
Dialogue: 0,0:02:34.57,0:02:39.86,Windows,,0,0,0,,对于已经在用HTML布局的网页开发者更是这样
Dialogue: 0,0:02:39.86,0:02:53.00,Windows,,0,0,0,,相比C#，写XAML会简洁很多，而且还能用可视化设计器
Dialogue: 0,0:02:53.00,0:02:56.00,Windows,,0,0,0,,可以少打很多字哦
Dialogue: 0,0:02:56.00,0:03:00.66,Windows,,0,0,0,,XAML语法分析器很聪明的
Dialogue: 0,0:03:00.66,0:03:07.52,Windows,,0,0,0,,它和Visual Studio一起让我们写用户界面的代码更简洁
Dialogue: 0,0:03:08.04,0:03:09.52,Windows,,0,0,0,,好了，接下来
Dialogue: 0,0:03:09.52,0:03:13.37,Windows,,0,0,0,,下一节课里，我们探讨了XAML的一些特性
Dialogue: 0,0:03:13.37,0:03:14.77,Windows,,0,0,0,,讲到类型转换器
Dialogue: 0,0:03:14.77,0:03:22.02,Windows,,0,0,0,,我们说它是XAML比C#简洁的原因之一
Dialogue: 0,0:03:22.02,0:03:29.73,Windows,,0,0,0,,我们可以在XAML里用一个字符串表示属性值
Dialogue: 0,0:03:29.73,0:03:36.32,Windows,,0,0,0,,而在C#里我们要写出完整的枚举值，甚至是类的实例
Dialogue: 0,0:03:36.88,0:03:41.93,Windows,,0,0,0,,靠的就是类型转换器
Dialogue: 0,0:03:42.67,0:03:44.97,Windows,,0,0,0,,它让我们的代码更简洁
Dialogue: 0,0:03:45.40,0:03:49.37,Windows,,0,0,0,,之后的一节课里我们谈到和XAML相关的几个话题
Dialogue: 0,0:03:49.37,0:03:52.88,Windows,,0,0,0,,即默认属性、复杂属性和属性元素语法
Dialogue: 0,0:03:53.36,0:03:58.08,Windows,,0,0,0,,看这里，Button的默认属性是Content属性
Dialogue: 0,0:03:58.08,0:04:01.18,Windows,,0,0,0,,我们把Button的Content属性设置为了"Click Me"
Dialogue: 0,0:04:01.18,0:04:04.41,Windows,,0,0,0,,其实还可以直接在标签里设置这个属性
Dialogue: 0,0:04:04.41,0:04:11.98,Windows,,0,0,0,,理解了默认属性之后，我们就顺理成章地讲了复杂属性
Dialogue: 0,0:04:12.59,0:04:15.52,Windows,,0,0,0,,让我来贴上一堆代码
Dialogue: 0,0:04:15.93,0:04:20.96,Windows,,0,0,0,,我摔，要先关掉自动换行才能看
Dialogue: 0,0:04:21.39,0:04:22.44,Windows,,0,0,0,,这里有
Dialogue: 0,0:04:22.44,0:04:24.81,Windows,,0,0,0,,(爆伯思考中)
Dialogue: 0,0:04:24.81,0:04:29.84,Windows,,0,0,0,,一个Button，我们这是在设定它的Background属性值
Dialogue: 0,0:04:29.84,0:04:37.58,Windows,,0,0,0,,设置Background用的是一个复杂属性
Dialogue: 0,0:04:37.58,0:04:42.38,Windows,,0,0,0,,遵循 属性名.元素 的语法 (爆伯为什么反着读)
Dialogue: 0,0:04:43.45,0:04:51.56,Windows,,0,0,0,,这个例子里，VS和XAML语法分析器隐藏了很多代码
Dialogue: 0,0:04:51.56,0:04:58.68,Windows,,0,0,0,,因为那些代码可以从我们创建的元素之间的关系推断出来
Dialogue: 0,0:04:58.68,0:05:02.94,Windows,,0,0,0,,也就是这个复杂属性里面的一些代码
Dialogue: 0,0:05:03.42,0:05:09.74,Windows,,0,0,0,,接着的那节课我们讲了XAML纲要和命名空间声明
Dialogue: 0,0:05:09.74,0:05:12.57,Windows,,0,0,0,,我说了让你别碰页面顶端的代码哦
Dialogue: 0,0:05:12.57,0:05:18.35,Windows,,0,0,0,,我还说了纲要是XAML的一部分
Dialogue: 0,0:05:18.35,0:05:23.28,Windows,,0,0,0,,我们看到了XAML大约有5到6个左右的纲要
Dialogue: 0,0:05:23.28,0:05:27.29,Windows,,0,0,0,,它们定义了XAML的语法规则
Dialogue: 0,0:05:27.29,0:05:33.48,Windows,,0,0,0,,UWP API里的控件
Dialogue: 0,0:05:33.48,0:05:38.11,Windows,,0,0,0,,还有对Blend和VS里的可视化设计器的支持等等
Dialogue: 0,0:05:38.11,0:05:45.45,Windows,,0,0,0,,当我们在命名空间名字后面加上冒号 : 时
Dialogue: 0,0:05:45.45,0:05:50.99,Windows,,0,0,0,,我们是在告诉XAML语法分析器到哪里去找这个元素的定义
Dialogue: 0,0:05:50.99,0:06:00.14,Windows,,0,0,0,,我们写的大部分XAML代码都是不带命名空间的
Dialogue: 0,0:06:00.14,0:06:05.52,Windows,,0,0,0,,因为它们被定义在那个Page的默认命名空间里了
Dialogue: 0,0:06:06.33,0:06:08.38,Windows,,0,0,0,,紧接着我们就开始讲布局了
Dialogue: 0,0:06:08.38,0:06:12.38,Windows,,0,0,0,,详细讲了Grid布局的方法
Dialogue: 0,0:06:12.38,0:06:15.15,Windows,,0,0,0,,我们讲了布局的一些常识
Dialogue: 0,0:06:15.15,0:06:20.28,Windows,,0,0,0,,和其它一般的控件不同，布局控件并没有Content属性
Dialogue: 0,0:06:20.28,0:06:23.50,Windows,,0,0,0,,但它们有UIElementCollection类型的Children属性
Dialogue: 0,0:06:23.50,0:06:29.53,Windows,,0,0,0,,所以我们可以把很多个控件塞到一个布局控件里
Dialogue: 0,0:06:29.53,0:06:37.00,Windows,,0,0,0,,我们试过把多个控件放到控件的Content属性里
Dialogue: 0,0:06:37.00,0:06:41.53,Windows,,0,0,0,,结果报错了：你不能给Content属性赋值多于一次
Dialogue: 0,0:06:41.53,0:06:43.18,Windows,,0,0,0,,所以是行不通的
Dialogue: 0,0:06:43.18,0:06:49.80,Windows,,0,0,0,,当你将控件嵌套在布局控件里面时
Dialogue: 0,0:06:49.80,0:06:55.80,Windows,,0,0,0,,你其实是在调用Children属性的Add方法
Dialogue: 0,0:06:55.80,0:07:00.27,Windows,,0,0,0,,即Gird.Children.Add(MyButton);
Dialogue: 0,0:07:02.12,0:07:07.29,Windows,,0,0,0,,我从一个例子里找了一段Grid的定义
Dialogue: 0,0:07:07.29,0:07:13.95,Windows,,0,0,0,,我们用元素属性语法定义了它的行和列
Dialogue: 0,0:07:20.62,0:07:26.59,Windows,,0,0,0,,在RowDefinitions里面我们定义了一些行
Dialogue: 0,0:07:29.24,0:07:35.16,Windows,,0,0,0,,留意到我们可以选用一些方法来表示Height和Width
Dialogue: 0,0:07:37.32,0:07:38.99,Windows,,0,0,0,,(我来粘贴一下)
Dialogue: 0,0:07:46.51,0:07:54.36,Windows,,0,0,0,,首先你可以用像素大小来表示它们
Dialogue: 0,0:07:54.36,0:07:59.05,Windows,,0,0,0,,例如说我可以将它设置为100px
Dialogue: 0,0:07:59.05,0:08:01.48,Windows,,0,0,0,,我说过这不是一个好方法
Dialogue: 0,0:08:01.48,0:08:05.12,Windows,,0,0,0,,因为我们面向的是特性不同的设备
Dialogue: 0,0:08:05.12,0:08:10.73,Windows,,0,0,0,,即使是在同一个系列里，设备的特性不同，显示出来可能就不对了
Dialogue: 0,0:08:10.73,0:08:15.15,Windows,,0,0,0,,所以我们会用自动(Auto)或者星号表示尺寸大小
Dialogue: 0,0:08:15.15,0:08:18.35,Windows,,0,0,0,,它们都是使用相对大小的表示方法
Dialogue: 0,0:08:18.35,0:08:29.69,Windows,,0,0,0,,自动(Auto)方法下，Grid会用其包含的最大尺寸元素来定义行或列的尺寸
Dialogue: 0,0:08:30.24,0:08:34.81,Windows,,0,0,0,,而在星号表示时，Grid会使用其剩余的空间
Dialogue: 0,0:08:34.81,0:08:40.30,Windows,,0,0,0,,在一个例子里，我们给星号加了数字前缀
Dialogue: 0,0:08:40.30,0:08:45.02,Windows,,0,0,0,,例如1*的意思是
Dialogue: 0,0:08:45.02,0:08:48.04,Windows,,0,0,0,,“剩下的空间里给我1份”
Dialogue: 0,0:08:48.04,0:08:53.07,Windows,,0,0,0,,3*的意思则是"剩下的空间里给我3份"
Dialogue: 0,0:08:53.07,0:08:58.09,Windows,,0,0,0,,在这里的这个例子中总共有6份
Dialogue: 0,0:08:58.09,0:09:04.27,Windows,,0,0,0,,3*实际上就是剩余空间的50%
Dialogue: 0,0:09:06.19,0:09:15.64,Windows,,0,0,0,,我们在谈到元素在Grid的格子里是如何被放置的时候
Dialogue: 0,0:09:15.64,0:09:22.00,Windows,,0,0,0,,使用了附加属性语法
Dialogue: 0,0:09:22.00,0:09:26.51,Windows,,0,0,0,,这里的Button其实并没有Grid.Row属性，它是Grid的
Dialogue: 0,0:09:26.51,0:09:32.76,Windows,,0,0,0,,但是我们可以给它附加这个属性来将其放置到特定的行和列
Dialogue: 0,0:09:33.52,0:09:40.17,Windows,,0,0,0,,这些就是Grid的用法
Dialogue: 0,0:09:40.17,0:09:44.52,Windows,,0,0,0,,还有放置Grid格子和控件的方法啦
Dialogue: 0,0:09:45.44,0:09:49.60,Windows,,0,0,0,,注意一下行和列都是从0算起的
Dialogue: 0,0:09:49.60,0:09:54.51,Windows,,0,0,0,,Row=0指第一行，1则指第二行等等
Dialogue: 0,0:09:54.51,0:09:55.60,Windows,,0,0,0,,列也是一样
Dialogue: 0,0:09:55.93,0:10:02.27,Windows,,0,0,0,,在每一个Grid里都有一个默认格子
Dialogue: 0,0:10:02.27,0:10:06.75,Windows,,0,0,0,,即第0行第0列，就算我们不定义它它也在那里
Dialogue: 0,0:10:06.75,0:10:16.28,Windows,,0,0,0,,所以当我们把一个东西放进Grid里却没有指定行和列时
Dialogue: 0,0:10:16.28,0:10:20.59,Windows,,0,0,0,,它会出现在默认格子里，即默认行默认列
Dialogue: 0,0:10:20.59,0:10:26.75,Windows,,0,0,0,,这时候我们相当于是把Row设置为0
Dialogue: 0,0:10:26.75,0:10:30.09,Windows,,0,0,0,,我们把这个删掉也没不会有任何影响
Dialogue: 0,0:10:30.09,0:10:36.17,Windows,,0,0,0,,与此同理，不定义Grid.Column意思就是将它设置为0
Dialogue: 0,0:10:36.17,0:10:40.89,Windows,,0,0,0,,因为这是在将它放进默认格子里
Dialogue: 0,0:10:42.03,0:10:45.50,Windows,,0,0,0,,关于Grid我们就说了这么多
Dialogue: 0,0:10:45.50,0:10:47.45,Windows,,0,0,0,,接着我们讲了StackPanel
Dialogue: 0,0:10:47.45,0:10:49.68,Windows,,0,0,0,,这是一个简单的StackPanel
Dialogue: 0,0:10:49.68,0:10:54.09,Windows,,0,0,0,,我们还可以给StackPanel设置一些属性
Dialogue: 0,0:10:54.09,0:11:00.68,Windows,,0,0,0,,Orientation属性的默认值是Vertical
Dialogue: 0,0:11:00.68,0:11:03.08,Windows,,0,0,0,,也就是从上到下排列
Dialogue: 0,0:11:03.08,0:11:05.71,Windows,,0,0,0,,第一个TextBlock在最上面
Dialogue: 0,0:11:05.71,0:11:10.36,Windows,,0,0,0,,而第二个TextBlock则会在它的垂直下方
Dialogue: 0,0:11:10.36,0:11:17.66,Windows,,0,0,0,,将Orientation设置成Horizontal就可以让它变成从左到右排列
Dialogue: 0,0:11:19.21,0:11:23.48,Windows,,0,0,0,,(爆伯改错中)
Dialogue: 0,0:11:24.41,0:11:29.21,Windows,,0,0,0,,要做出想要的布局，往往需要组合使用布局控件
Dialogue: 0,0:11:29.21,0:11:32.75,Windows,,0,0,0,,这个你会在后面的课程里看到
Dialogue: 0,0:11:32.75,0:11:37.48,Windows,,0,0,0,,我说过，Grid和StackPanel最重要的区别在是
Dialogue: 0,0:11:37.48,0:11:40.83,Windows,,0,0,0,,在Grid里面你可以将控件重叠
Dialogue: 0,0:11:40.83,0:11:43.63,Windows,,0,0,0,,如果你把3个控件放到同一个Grid格子里
Dialogue: 0,0:11:43.63,0:11:51.23,Windows,,0,0,0,,然后把它们的VerticalAlignment设置为Top，HorizontalAlignment设置为Left
Dialogue: 0,0:11:51.23,0:11:53.18,Windows,,0,0,0,,那它们就会互相重叠
Dialogue: 0,0:11:53.18,0:11:58.94,Windows,,0,0,0,,然后你就看不到被遮住的元素了
Dialogue: 0,0:11:58.94,0:12:04.38,Windows,,0,0,0,,相反地，StackPanel会用垂直或水平方式把控件靠到一起
Dialogue: 0,0:12:05.47,0:12:07.36,Windows,,0,0,0,,好了，复习课就讲这么多
Dialogue: 0,0:12:07.36,0:12:15.47,Windows,,0,0,0,,我们来做些练习吧，好让你加深对这些概念的理解
Dialogue: 0,0:12:15.47,0:12:17.29,Windows,,0,0,0,,下节课见，拜拜
Dialogue: 0,0:12:18.35,0:12:21.80,Windows,,0,0,0,,微软大法好！
