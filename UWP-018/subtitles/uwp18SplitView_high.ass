[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: uwp18SplitView_high.mp4
Video File: uwp18SplitView_high.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.250000
Scroll Position: 105
Active Line: 118
Video Position: 15929

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,微软雅黑,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:04.00,Default,,0,0,0,, 018 理解SplitView（翻译@Elenore）
Dialogue: 0,0:00:04.70,0:00:08.49,Default,,0,0,0,,大家好，我是Bob Tabor，来自www.learnvisualstudio.net
Dialogue: 0,0:00:08.49,0:00:14.13,Default,,0,0,0,,这节课我们要来学习第二个UWP API中的布局控件
Dialogue: 0,0:00:14.13,0:00:15.33,Default,,0,0,0,,SplitView
Dialogue: 0,0:00:15.33,0:00:17.96,Default,,0,0,0,,SplitView可以让我们创造一个面板
Dialogue: 0,0:00:17.96,0:00:20.47,Default,,0,0,0,,这个面板可以显示也可以隐藏
Dialogue: 0,0:00:20.47,0:00:22.47,Default,,0,0,0,,还有一些过渡动画，[XXX]
Dialogue: 0,0:00:22.47,0:00:27.70,Default,,0,0,0,,比如在视图内来回切换
Dialogue: 0,0:00:27.70,0:00:31.64,Default,,0,0,0,,我们就用SplitView来实现汉堡菜单
Dialogue: 0,0:00:31.64,0:00:35.28,Default,,0,0,0,,就是我们在上一课中看到的Windows 10中使用的那种菜单
Dialogue: 0,0:00:35.28,0:00:37.28,Default,,0,0,0,,SplitView有两个部分
Dialogue: 0,0:00:37.28,0:00:39.28,Default,,0,0,0,,有一个，是可选的
Dialogue: 0,0:00:39.28,0:00:41.15,Default,,0,0,0,,另一个，是必需的
Dialogue: 0,0:00:41.15,0:00:45.96,Default,,0,0,0,,隐藏在展示部分旁边的部分，我们叫做Pane
Dialogue: 0,0:00:45.96,0:00:53.00,Default,,0,0,0,,很容易被覆盖或者被推开的用于展示的部分，我们叫做Content
Dialogue: 0,0:00:53.00,0:00:55.00,Default,,0,0,0,,Content是必需的
Dialogue: 0,0:00:55.00,0:00:59.14,Default,,0,0,0,,它很有用，[XXX]，我们等会来演示
Dialogue: 0,0:00:59.14,0:01:01.04,Default,,0,0,0,,所以你要做的就是
Dialogue: 0,0:01:01.04,0:01:11.05,Default,,0,0,0,,通过SplitView.Pane和SplitView.Content中的一些控件
Dialogue: 0,0:01:11.05,0:01:12.25,Default,,0,0,0,,来构建你的app
Dialogue: 0,0:01:12.45,0:01:16.02,Default,,0,0,0,,在SplitView.Pane中你要做的是
Dialogue: 0,0:01:16.02,0:01:22.53,Default,,0,0,0,,就像使用汉堡菜单风格的app一样
Dialogue: 0,0:01:22.53,0:01:25.36,Default,,0,0,0,,有图标，还有一些文字在旁边
Dialogue: 0,0:01:25.36,0:01:28.63,Default,,0,0,0,,从现在开始几节课后我们就能做到那一步了
Dialogue: 0,0:01:28.63,0:01:33.31,Default,,0,0,0,,不过我们先从最基本的开始，只讲这个组件本身
Dialogue: 0,0:01:33.31,0:01:36.54,Default,,0,0,0,,尽管实现这个还会有很多困惑
Dialogue: 0,0:01:36.54,0:01:39.38,Default,,0,0,0,,好啦，我们来开始创建一个SplitView吧
Dialogue: 0,0:01:39.38,0:01:44.22,Default,,0,0,0,,在我这个叫SplitViewExample的app中
Dialogue: 0,0:01:44.22,0:01:46.22,Default,,0,0,0,,我要创建一个SplitView
Dialogue: 0,0:01:46.22,0:01:48.22,Default,,0,0,0,,在这个SplitView中
Dialogue: 0,0:01:48.22,0:01:53.66,Default,,0,0,0,,我们要创建一个Pane
Dialogue: 0,0:01:53.66,0:01:55.66,Default,,0,0,0,,和一个Content
Dialogue: 0,0:02:00.00,0:02:03.50,Default,,0,0,0,,在Content中，我们可以做任何想做的事
Dialogue: 0,0:02:03.50,0:02:07.97,Default,,0,0,0,,我就放些文本块吧
Dialogue: 0,0:02:11.74,0:02:20.39,Default,,0,0,0,,我在Pane和Content中都放了一些文本块
Dialogue: 0,0:02:20.39,0:02:24.82,Default,,0,0,0,,为了区分，我们给每个文本块显示不同内容
Dialogue: 0,0:02:24.82,0:02:28.96,Default,,0,0,0,,“First”、“Second”、“Third”文本块在Pane中
Dialogue: 0,0:02:30.96,0:02:39.67,Default,,0,0,0,,“Fourth”、“Fifth”、“Sixth”文本块在Content中
Dialogue: 0,0:02:39.67,0:02:42.40,Default,,0,0,0,,好吧，你看到我们出了一点小错误
Dialogue: 0,0:02:42.40,0:02:44.68,Default,,0,0,0,,“Content属性只能被设置一次”
Dialogue: 0,0:02:44.68,0:02:45.64,Default,,0,0,0,,为什么呢
Dialogue: 0,0:02:45.64,0:02:50.02,Default,,0,0,0,,因为这是Content属性，不是Child属性
Dialogue: 0,0:02:50.02,0:02:52.02,Default,,0,0,0,,我们用StackPanel或者别的什么
Dialogue: 0,0:02:52.02,0:03:00.73,Default,,0,0,0,,来包裹Pane和Content中的内容
Dialogue: 0,0:03:13.21,0:03:18.08,Default,,0,0,0,,你可以看到（让我们把视图放大一点……75%吧）
Dialogue: 0,0:03:18.08,0:03:25.08,Default,,0,0,0,,[xxx]
Dialogue: 0,0:03:25.08,0:03:28.25,Default,,0,0,0,,我们来运行一下
Dialogue: 0,0:03:30.25,0:03:34.66,Default,,0,0,0,,Pane并没有展示出来
Dialogue: 0,0:03:34.66,0:03:37.83,Default,,0,0,0,,我们只看到Content的部分
Dialogue: 0,0:03:39.00,0:03:41.90,Default,,0,0,0,,我们怎样才能展示Pane的部分呢
Dialogue: 0,0:03:41.90,0:03:45.57,Default,,0,0,0,,我们开始的时候好像忘了给SplitView一个名字
Dialogue: 0,0:03:45.57,0:03:48.54,Default,,0,0,0,,那就给它起一个名字“MySplitView”
Dialogue: 0,0:03:48.54,0:03:55.21,Default,,0,0,0,,我们在这里加一个Button
Dialogue: 0,0:03:55.21,0:03:57.21,Default,,0,0,0,,在SplitView的外面
Dialogue: 0,0:04:07.03,0:04:14.20,Default,,0,0,0,,设置Click属性值为一个点击事件方法
Dialogue: 0,0:04:17.24,0:04:20.54,Default,,0,0,0,,在方法体内，我们要写的是
Dialogue: 0,0:04:21.54,0:04:29.54,Default,,0,0,0,,我们要把MySplitView.IsPaneOpen的值设为
Dialogue: 0,0:04:29.54,0:04:36.28,Default,,0,0,0,,MySplitView.IsPaneOpen的相反值
Dialogue: 0,0:04:36.28,0:04:43.18,Default,,0,0,0,,不管它当前值是什么，都把它设为当前值的相反值（用取反操作符）
Dialogue: 0,0:04:43.18,0:04:46.16,Default,,0,0,0,,也就是感叹号
Dialogue: 0,0:04:46.16,0:04:49.40,Default,,0,0,0,,我们还有一件事要做
Dialogue: 0,0:04:49.40,0:04:56.07,Default,,0,0,0,,我要把最外面的Grid改成StackPanel
Dialogue: 0,0:04:56.07,0:04:58.07,Default,,0,0,0,,把这些删掉
Dialogue: 0,0:04:58.07,0:05:02.01,Default,,0,0,0,,保存，运行
Dialogue: 0,0:05:04.88,0:05:11.04,Default,,0,0,0,,你看，我可以展示和隐藏Pane面板了
Dialogue: 0,0:05:11.04,0:05:14.69,Default,,0,0,0,,我们其实还可以对这个面板做更多控制
Dialogue: 0,0:05:14.69,0:05:21.37,Default,,0,0,0,,首先，把StackPanel的朝向（Orientation）设为水平（Horizontal）
Dialogue: 0,0:05:22.52,0:05:29.58,Default,,0,0,0,,还要设置SplitView的显示模式（DisplayMode）
Dialogue: 0,0:05:29.58,0:05:36.25,Default,,0,0,0,,DisplayMode（在我们可以设置的属性中）是最重要的属性之一
Dialogue: 0,0:05:36.25,0:05:40.79,Default,,0,0,0,,因为它决定具体的显示方式
Dialogue: 0,0:05:40.79,0:05:43.02,Default,,0,0,0,,它的值有四个选项
Dialogue: 0,0:05:43.02,0:05:45.86,Default,,0,0,0,,我们先来看下“Inline”是如何作用的
Dialogue: 0,0:05:47.14,0:05:48.86,Default,,0,0,0,,运行一下
Dialogue: 0,0:05:51.10,0:05:53.06,Default,,0,0,0,,不管我们什么时候点击
Dialogue: 0,0:05:53.06,0:05:58.60,Default,,0,0,0,,“Inline”是把Content推开来让Pane显示的
Dialogue: 0,0:06:02.50,0:06:05.09,Default,,0,0,0,,当我们把它改成“Overlay”
Dialogue: 0,0:06:06.09,0:06:07.71,Default,,0,0,0,,再来运行一下
Dialogue: 0,0:06:10.71,0:06:13.58,Default,,0,0,0,,它（Pane）会把Content完全遮盖住对吧
Dialogue: 0,0:06:13.72,0:06:16.42,Default,,0,0,0,,Overlay的显示模式还有一个变体
Dialogue: 0,0:06:16.42,0:06:18.42,Default,,0,0,0,,不过我们要先设置另一个属性
Dialogue: 0,0:06:18.42,0:06:23.76,Default,,0,0,0,,我们要把CompactPaneLength
Dialogue: 0,0:06:24.26,0:06:28.22,Default,,0,0,0,,设成一个很小的值，比如50
Dialogue: 0,0:06:28.22,0:06:30.92,Default,,0,0,0,,仅仅能够显示图标
Dialogue: 0,0:06:30.92,0:06:32.70,Default,,0,0,0,,所以宽度是50px
Dialogue: 0,0:06:32.70,0:06:39.24,Default,,0,0,0,,我们把Overlay改为CompactOverlay
Dialogue: 0,0:06:39.24,0:06:41.75,Default,,0,0,0,,它其实是Overlay的变体
Dialogue: 0,0:06:41.75,0:06:49.32,Default,,0,0,0,,让Pane在（Content）底下只显示一小部分
Dialogue: 0,0:06:50.32,0:06:52.39,Default,,0,0,0,,我们可以看到“First”、“Second”、“Third”
Dialogue: 0,0:06:52.39,0:06:54.53,Default,,0,0,0,,我们把宽度再改小成10px
Dialogue: 0,0:06:54.53,0:06:56.80,Default,,0,0,0,,这样看得更清楚一些
Dialogue: 0,0:06:56.80,0:07:00.80,Default,,0,0,0,,更好玩一些
Dialogue: 0,0:07:01.80,0:07:07.91,Default,,0,0,0,,你看，“First”、“Second”、“Third”只显示了左边很窄的一点点
Dialogue: 0,0:07:07.91,0:07:10.58,Default,,0,0,0,,然后我们再点击一下“Click Me”
Dialogue: 0,0:07:10.58,0:07:14.75,Default,,0,0,0,,Pane就覆盖了Content
Dialogue: 0,0:07:14.75,0:07:18.46,Default,,0,0,0,,这就是CmpactOverlay模式
Dialogue: 0,0:07:18.46,0:07:23.56,Default,,0,0,0,,CompactInline的显示模式和Inline很像，除了它还能显示一小部分的Pane
Dialogue: 0,0:07:23.56,0:07:26.58,Default,,0,0,0,,和刚才一样，Pane只显示了10px宽
Dialogue: 0,0:07:26.58,0:07:30.52,Default,,0,0,0,,只显示了“First”、“Second”、“Third”的一点点
Dialogue: 0,0:07:30.52,0:07:34.13,Default,,0,0,0,,当我们点击的时候，Content就被推开，因为这是基于Inline模式
Dialogue: 0,0:07:35.63,0:07:41.04,Default,,0,0,0,,我们还可以调整OpenPaneLength
Dialogue: 0,0:07:41.04,0:07:45.08,Default,,0,0,0,,我们把它的值设为50px
Dialogue: 0,0:07:45.08,0:07:47.08,Default,,0,0,0,,我们来看看它是怎么影响app的
Dialogue: 0,0:07:51.38,0:07:57.72,Default,,0,0,0,,它限制了Pane打开时的显示长度
Dialogue: 0,0:08:00.00,0:08:03.70,Default,,0,0,0,,我们还可以设置其他属性，比如Background
Dialogue: 0,0:08:03.70,0:08:06.46,Default,,0,0,0,,关于SplitView还有一个要说
Dialogue: 0,0:08:06.46,0:08:09.53,Default,,0,0,0,,仅使用SplitView其实做不了什么
Dialogue: 0,0:08:09.53,0:08:16.14,Default,,0,0,0,,在实现Pane的时候你可以选择很多方式
Dialogue: 0,0:08:16.14,0:08:17.94,Default,,0,0,0,,今天的例子我用的是文本块
Dialogue: 0,0:08:17.94,0:08:19.64,Default,,0,0,0,,它其实没啥意义
Dialogue: 0,0:08:19.64,0:08:22.35,Default,,0,0,0,,我们通常是用一个按钮或者一个可以点击的东西
Dialogue: 0,0:08:22.35,0:08:23.75,Default,,0,0,0,,这样当我们点击的时候
Dialogue: 0,0:08:23.75,0:08:28.09,Default,,0,0,0,,就会被导航到主显示区的某个地方
Dialogue: 0,0:08:28.09,0:08:30.09,Default,,0,0,0,,某个功能或者不同的信息
Dialogue: 0,0:08:30.09,0:08:31.76,Default,,0,0,0,,就像我们之前说的
Dialogue: 0,0:08:31.76,0:08:35.26,Default,,0,0,0,,我们将通过未来几节课学会如何实现
Dialogue: 0,0:08:35.26,0:08:40.33,Default,,0,0,0,,首先，我们要学会用更多的输入控件
Dialogue: 0,0:08:40.33,0:08:46.17,Default,,0,0,0,,我们可以用学到这些来实现一个简单的汉堡菜单
Dialogue: 0,0:08:46.17,0:08:49.51,Default,,0,0,0,,我们将在下节课回到这个idea
Dialogue: 0,0:08:49.51,0:08:51.51,Default,,0,0,0,,下节课见啦~
